{
  "api/UltraForce.Library.Core.Asp.Annotations.UFAuthorizeRolesAttribute.html": {
    "href": "api/UltraForce.Library.Core.Asp.Annotations.UFAuthorizeRolesAttribute.html",
    "title": "Class UFAuthorizeRolesAttribute | UltraForce.Library.Core.Asp",
    "keywords": "Class UFAuthorizeRolesAttribute Namespace UltraForce.Library.Core.Asp.Annotations Assembly UltraForce.Library.Core.Asp.dll UFAuthorizeRolesAttribute can be used to specify a list of roles in a better manner. Code based on: https://stackoverflow.com/a/24182340/968451 public class UFAuthorizeRolesAttribute : AuthorizeAttribute, IAuthorizeData Inheritance object Attribute AuthorizeAttribute UFAuthorizeRolesAttribute Implements IAuthorizeData Inherited Members AuthorizeAttribute.ToString() AuthorizeAttribute.Policy AuthorizeAttribute.Roles AuthorizeAttribute.AuthenticationSchemes Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UFAuthorizeRolesAttribute(params string[]) Combines the roles into a single string using ',' as a separator. public UFAuthorizeRolesAttribute(params string[] roles) Parameters roles string[] Roles to combine"
  },
  "api/UltraForce.Library.Core.Asp.Annotations.html": {
    "href": "api/UltraForce.Library.Core.Asp.Annotations.html",
    "title": "Namespace UltraForce.Library.Core.Asp.Annotations | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.Annotations Classes UFAuthorizeRolesAttribute UFAuthorizeRolesAttribute can be used to specify a list of roles in a better manner. Code based on: https://stackoverflow.com/a/24182340/968451"
  },
  "api/UltraForce.Library.Core.Asp.Controllers.UFController.html": {
    "href": "api/UltraForce.Library.Core.Asp.Controllers.UFController.html",
    "title": "Class UFController | UltraForce.Library.Core.Asp",
    "keywords": "Class UFController Namespace UltraForce.Library.Core.Asp.Controllers Assembly UltraForce.Library.Core.Asp.dll This class extends Controller and adds some additional methods and properties. public class UFController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller UFController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties SessionStorage This property can be used to store data in the session using various types. The first time the property is accessed the instance is created. protected UFSessionKeyedStorage SessionStorage { get; } Property Value UFSessionKeyedStorage Methods BadRequest<TEnum>(TEnum) Generate a bad request using UltraForce.Library.NetStandard.Net.UFExtendedErrorResponseModel<TEnum>. protected IActionResult BadRequest<TEnum>(TEnum code) where TEnum : struct, IConvertible Parameters code TEnum Extended error code Returns IActionResult Bad request with json object with the following format: { code /* int */, name /* string */ } Type Parameters TEnum Enumeration type that defines extended error codes Json(ILogger, object) Writes the json response first to the logger before sending it back to the server. protected JsonResult Json(ILogger logger, object data) Parameters logger ILogger Logger to write to data object Data to create Json for Returns JsonResult JsonResult instance RedirectToAction<TController>(string) Redirect to an action of some controller. protected IActionResult RedirectToAction<TController>(string action) where TController : Controller Parameters action string Action to redirect to. Returns IActionResult Type Parameters TController Some controller type. The method uses GetControllerName<T>() to get the controller name. RedirectToAction<TController>(string, object) Redirect to an action of some controller. protected IActionResult RedirectToAction<TController>(string action, object routeValues) where TController : Controller Parameters action string Action to redirect to. routeValues object Values to pass to the action. Returns IActionResult Type Parameters TController Some controller type. The method uses GetControllerName<T>() to get the controller name. RedirectToIndex() A helper method that redirects to the index action of the current controller. protected IActionResult RedirectToIndex() Returns IActionResult A RedirectResult RedirectToIndex(string) A helper method that redirects to the index action of some controller. protected IActionResult RedirectToIndex(string controller) Parameters controller string Name of controller Returns IActionResult A RedirectResult RedirectToIndexWithId<TId>(string, TId) A helper method that redirects to the index action of some controller passing a single id parameter. protected IActionResult RedirectToIndexWithId<TId>(string controller, TId id) Parameters controller string Name of controller id TId The id to pass on to the index action. Returns IActionResult A RedirectResult Type Parameters TId Type of id. RedirectToIndexWithId<TId>(TId) A helper method that redirects to the index action of the current controller passing a single id parameter. protected IActionResult RedirectToIndexWithId<TId>(TId id) Parameters id TId The id to pass on to the index action. Returns IActionResult A RedirectResult Type Parameters TId Type of id. RedirectToIndexWithId<TController, TId>(TId) A helper method that redirects to the index action of some controller passing a single id parameter. protected IActionResult RedirectToIndexWithId<TController, TId>(TId id) where TController : Controller Parameters id TId The id to pass on to the index action. Returns IActionResult A RedirectResult Type Parameters TController Some controller type. The method uses GetControllerName<T>() to get the controller name. TId Type of id. RedirectToIndex<TController>() A helper method that redirects to the index action of some controller. protected IActionResult RedirectToIndex<TController>() where TController : Controller Returns IActionResult A RedirectResult Type Parameters TController Some controller type. The method uses GetControllerName<T>() to get the controller name."
  },
  "api/UltraForce.Library.Core.Asp.Controllers.html": {
    "href": "api/UltraForce.Library.Core.Asp.Controllers.html",
    "title": "Namespace UltraForce.Library.Core.Asp.Controllers | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.Controllers Classes UFController This class extends Controller and adds some additional methods and properties."
  },
  "api/UltraForce.Library.Core.Asp.Filters.UFClearViewDataServiceFilter.html": {
    "href": "api/UltraForce.Library.Core.Asp.Filters.UFClearViewDataServiceFilter.html",
    "title": "Class UFClearViewDataServiceFilter | UltraForce.Library.Core.Asp",
    "keywords": "Class UFClearViewDataServiceFilter Namespace UltraForce.Library.Core.Asp.Filters Assembly UltraForce.Library.Core.Asp.dll This filter can be used to clear the view data before the action is executed. It assumes that the IUFViewDataService has been registered with the DI container. public class UFClearViewDataServiceFilter : IActionFilter, IFilterMetadata Inheritance object UFClearViewDataServiceFilter Implements IActionFilter IFilterMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFClearViewDataServiceFilter(IUFViewDataService) This filter can be used to clear the view data before the action is executed. It assumes that the IUFViewDataService has been registered with the DI container. public UFClearViewDataServiceFilter(IUFViewDataService viewDataService) Parameters viewDataService IUFViewDataService An object implementing IUFViewDataService. Methods OnActionExecuted(ActionExecutedContext) Called after the action executes, before the action result. public void OnActionExecuted(ActionExecutedContext context) Parameters context ActionExecutedContext The ActionExecutedContext. OnActionExecuting(ActionExecutingContext) Called before the action executes, after model binding is complete. public void OnActionExecuting(ActionExecutingContext context) Parameters context ActionExecutingContext The ActionExecutingContext."
  },
  "api/UltraForce.Library.Core.Asp.Filters.UFUseActionExceptionFilter.html": {
    "href": "api/UltraForce.Library.Core.Asp.Filters.UFUseActionExceptionFilter.html",
    "title": "Class UFUseActionExceptionFilter | UltraForce.Library.Core.Asp",
    "keywords": "Class UFUseActionExceptionFilter Namespace UltraForce.Library.Core.Asp.Filters Assembly UltraForce.Library.Core.Asp.dll A controller filter to handle UFUseActionException. To use this filter, install it while configuring the MVC services: builder.Services.AddControllersWithViews( options => { options.Filters.Add<UFUseActionExceptionFilter>(); ... } ); public class UFUseActionExceptionFilter : IExceptionFilter, IFilterMetadata Inheritance object UFUseActionExceptionFilter Implements IExceptionFilter IFilterMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OnException(ExceptionContext) Called after an action has thrown an Exception. public void OnException(ExceptionContext context) Parameters context ExceptionContext The ExceptionContext."
  },
  "api/UltraForce.Library.Core.Asp.Filters.html": {
    "href": "api/UltraForce.Library.Core.Asp.Filters.html",
    "title": "Namespace UltraForce.Library.Core.Asp.Filters | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.Filters Classes UFClearViewDataServiceFilter This filter can be used to clear the view data before the action is executed. It assumes that the IUFViewDataService has been registered with the DI container. UFUseActionExceptionFilter A controller filter to handle UFUseActionException. To use this filter, install it while configuring the MVC services: builder.Services.AddControllersWithViews( options => { options.Filters.Add<UFUseActionExceptionFilter>(); ... } );"
  },
  "api/UltraForce.Library.Core.Asp.Localization.UFDutchDefaultModelBindingMessageProvider.html": {
    "href": "api/UltraForce.Library.Core.Asp.Localization.UFDutchDefaultModelBindingMessageProvider.html",
    "title": "Class UFDutchDefaultModelBindingMessageProvider | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDutchDefaultModelBindingMessageProvider Namespace UltraForce.Library.Core.Asp.Localization Assembly UltraForce.Library.Core.Asp.dll This class replaced error message in DefaultModelBindingMessageProvider with Dutch variants. public static class UFDutchDefaultModelBindingMessageProvider Inheritance object UFDutchDefaultModelBindingMessageProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Apply(DefaultModelBindingMessageProvider) Replaces the error messages with Dutch versions. public static void Apply(DefaultModelBindingMessageProvider provider) Parameters provider DefaultModelBindingMessageProvider Provider to update"
  },
  "api/UltraForce.Library.Core.Asp.Localization.html": {
    "href": "api/UltraForce.Library.Core.Asp.Localization.html",
    "title": "Namespace UltraForce.Library.Core.Asp.Localization | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.Localization Classes UFDutchDefaultModelBindingMessageProvider This class replaced error message in DefaultModelBindingMessageProvider with Dutch variants."
  },
  "api/UltraForce.Library.Core.Asp.Models.UFEmailContentModel.html": {
    "href": "api/UltraForce.Library.Core.Asp.Models.UFEmailContentModel.html",
    "title": "Class UFEmailContentModel | UltraForce.Library.Core.Asp",
    "keywords": "Class UFEmailContentModel Namespace UltraForce.Library.Core.Asp.Models Assembly UltraForce.Library.Core.Asp.dll This models is a simple class containing content for an email both in html and plain text form. public class UFEmailContentModel Inheritance object UFEmailContentModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFEmailContentModel(string?, string?) Create structure public UFEmailContentModel(string? html = null, string? text = null) Parameters html string initial html text text string initial plain text Properties Html Content in html form or null if no content exists public string? Html { get; set; } Property Value string IsEmpty This property is true if both Html and Text public bool IsEmpty { get; } Property Value bool Text Content in plain text form or null if no content exists. public string? Text { get; set; } Property Value string"
  },
  "api/UltraForce.Library.Core.Asp.Models.html": {
    "href": "api/UltraForce.Library.Core.Asp.Models.html",
    "title": "Namespace UltraForce.Library.Core.Asp.Models | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.Models Classes UFEmailContentModel This models is a simple class containing content for an email both in html and plain text form."
  },
  "api/UltraForce.Library.Core.Asp.Services.IUFAsynchronousExecutableService.html": {
    "href": "api/UltraForce.Library.Core.Asp.Services.IUFAsynchronousExecutableService.html",
    "title": "Interface IUFAsynchronousExecutableService | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFAsynchronousExecutableService Namespace UltraForce.Library.Core.Asp.Services Assembly UltraForce.Library.Core.Asp.dll An interface defining a method that will be run asynchronously. It is based on the BackgroundService. public interface IUFAsynchronousExecutableService Methods ExecuteAsync(CancellationToken) Executes the service asynchronously. Task ExecuteAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken A token that should be checked and the execution should stop Returns Task"
  },
  "api/UltraForce.Library.Core.Asp.Services.IUFModelExpressionRenderer.html": {
    "href": "api/UltraForce.Library.Core.Asp.Services.IUFModelExpressionRenderer.html",
    "title": "Interface IUFModelExpressionRenderer | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFModelExpressionRenderer Namespace UltraForce.Library.Core.Asp.Services Assembly UltraForce.Library.Core.Asp.dll Defines a renderer for ModelExpressions. public interface IUFModelExpressionRenderer Methods GetName(ModelExpression, ViewContext) Gets the name for a model expression. IHtmlContentBuilder GetName(ModelExpression expression, ViewContext viewContext) Parameters expression ModelExpression expression to get name for viewContext ViewContext Returns IHtmlContentBuilder html representation of name GetValueAsText(ModelExpression, ViewContext) Gets the value as a text string. string GetValueAsText(ModelExpression expression, ViewContext viewContext) Parameters expression ModelExpression expression to get value for viewContext ViewContext Returns string text representation of value SetContentToNameAsync(TagHelperOutput, ModelExpression, ViewContext) Sets the content to the (display) name of the ModelExpression. The code is based on the code from LabelTagHelper. Task SetContentToNameAsync(TagHelperOutput output, ModelExpression expression, ViewContext viewContext) Parameters output TagHelperOutput Output to update expression ModelExpression Model expression to get name from viewContext ViewContext View context to use Returns Task SetContentToValueAsync(TagHelperOutput, ModelExpression, ViewContext) Sets the content to the value of the ModelExpression. Task SetContentToValueAsync(TagHelperOutput output, ModelExpression expression, ViewContext viewContext) Parameters output TagHelperOutput Output to update expression ModelExpression Expression to get value from viewContext ViewContext View context to use Returns Task"
  },
  "api/UltraForce.Library.Core.Asp.Services.IUFTheme.html": {
    "href": "api/UltraForce.Library.Core.Asp.Services.IUFTheme.html",
    "title": "Interface IUFTheme | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFTheme Namespace UltraForce.Library.Core.Asp.Services Assembly UltraForce.Library.Core.Asp.dll IUFTheme generates css classes and html for the different components. public interface IUFTheme Methods GetButtonCaptionClasses(IUFButtonProperties) Gets the css classes to use for the caption element within a button. string GetButtonCaptionClasses(IUFButtonProperties aProperties) Parameters aProperties IUFButtonProperties The button property values Returns string One or more css classes to style the caption. GetButtonClasses(IUFButtonProperties) Gets the css classes to use for the button element. string GetButtonClasses(IUFButtonProperties aProperties) Parameters aProperties IUFButtonProperties The button property values Returns string One or more css classes to style the button. GetButtonIconHtml(IUFButtonProperties) Gets the html for an icon. string GetButtonIconHtml(IUFButtonProperties aProperties) Parameters aProperties IUFButtonProperties Returns string Html snippet or empty string if there is no icon GetCheckboxExtraHtml() Gets the extra html to render after the checkbox input element. It can be used when using custom graphics. string GetCheckboxExtraHtml() Returns string GetCheckboxInputClasses() Returns the css classes to use for the checkbox input element. string GetCheckboxInputClasses() Returns string GetCheckboxLabelClasses() Returns the css classes to use for the label of a checkbox element. string GetCheckboxLabelClasses() Returns string GetCheckboxLabelDescriptionClasses() Returns the css classes to use for the description within the checkbox label element. string GetCheckboxLabelDescriptionClasses() Returns string GetCheckboxLabelSpanClasses() Returns the css classes to use for the text within the checkbox label element. string GetCheckboxLabelSpanClasses() Returns string GetCheckboxWrapperClasses() Returns the css classes to use for the wrapper of a checkbox element. string GetCheckboxWrapperClasses() Returns string GetColumnClasses(IUFFlexProperties) Returns the css classes to use for the column element. string GetColumnClasses(IUFFlexProperties aProperties) Parameters aProperties IUFFlexProperties Returns string GetContainerClasses(IUFContainerProperties) Gets the css classes to use for the container element. string GetContainerClasses(IUFContainerProperties aProperties) Parameters aProperties IUFContainerProperties The container property values Returns string One or more css classes to style the container. GetDataListClasses() Gets the css classes to use for the data list element. string GetDataListClasses() Returns string One or more css classes to style the data list. GetDataNameClasses() Gets the css classes to use for the data name element. string GetDataNameClasses() Returns string One or more css classes to style the data name. GetDataValueClasses() Gets the css classes to use for the data value element. string GetDataValueClasses() Returns string One or more css classes to style the data value. GetFieldErrorsClasses() Returns the css classes to use for the wrapper of the errors. string GetFieldErrorsClasses() Returns string GetFieldErrorsHtml(ModelStateDictionary, string) Gets the errors for an input field as an html block. The errors will be wrapped in a container, see GetFieldErrorsClasses(). string GetFieldErrorsHtml(ModelStateDictionary aModelState, string aName) Parameters aModelState ModelStateDictionary aName string Returns string GetFilterButtonClasses() Returns the css classes to use for button element within the filter container. string GetFilterButtonClasses() Returns string GetFilterContainerClasses() Returns the css classes to use for the filter container element shown above the table if Filter is true. string GetFilterContainerClasses() Returns string GetFilterInputClasses() Returns the css classes to use for input element within the filter container. string GetFilterInputClasses() Returns string GetRadioExtraHtml() Gets the extra html to render after the radio input element. It can be used when using custom graphics. string GetRadioExtraHtml() Returns string GetRadioInputClasses() Returns the css classes to use for the radio input element. string GetRadioInputClasses() Returns string GetRadioLabelClasses() Returns the css classes to use for the label of a radio element. string GetRadioLabelClasses() Returns string GetRadioLabelDescriptionClasses() Returns the css classes to use for the description within the radio label element. string GetRadioLabelDescriptionClasses() Returns string GetRadioLabelSpanClasses() Returns the css classes to use for the text within the radio label element. string GetRadioLabelSpanClasses() Returns string GetRadioWrapperClasses() Returns the css classes to use for the wrapper element of a radio element. string GetRadioWrapperClasses() Returns string GetRowClasses(IUFFlexProperties) Returns the css classes to use for the row element. string GetRowClasses(IUFFlexProperties aProperties) Parameters aProperties IUFFlexProperties Returns string GetSelectClasses(IUFInputProperties) Returns the css classes to use for the select element. string GetSelectClasses(IUFInputProperties aProperties) Parameters aProperties IUFInputProperties Returns string GetSortAscendingClasses() Returns the css classes to use for a table header element when the rows are sorted in ascending order for that column. The css classes are added to the result from GetTableRowClasses(IUFTableRowProperties, IUFTableProperties). string GetSortAscendingClasses() Returns string GetSortDescendingClasses() Returns the css classes to use for a table header element when the rows are sorted in descending order for that column. The css classes are added to the result from GetTableRowClasses(IUFTableRowProperties, IUFTableProperties). string GetSortDescendingClasses() Returns string GetSpacerClasses(IUFSpacerProperties) Returns the css classes to use for the spacer element. string GetSpacerClasses(IUFSpacerProperties aProperties) Parameters aProperties IUFSpacerProperties Returns string GetStackClasses(IUFContainerProperties) Gets the css classes to use for a stack element. string GetStackClasses(IUFContainerProperties aProperties) Parameters aProperties IUFContainerProperties Returns string GetStackItemClasses(IUFStackItemProperties) Gets the css classes to use for a stack item element (that is placed within a stack element). string GetStackItemClasses(IUFStackItemProperties aProperties) Parameters aProperties IUFStackItemProperties Returns string GetTabContentWrapperClasses(IUFTabProperties) Gets the css classes to use for the content wrapper element with a tab. string GetTabContentWrapperClasses(IUFTabProperties aProperties) Parameters aProperties IUFTabProperties Returns string GetTabLabelClasses(IUFTabProperties) Gets the css classes to use for the label element with a tab. string GetTabLabelClasses(IUFTabProperties aProperties) Parameters aProperties IUFTabProperties Returns string GetTabRadioClasses(IUFTabProperties) Gets the css classes to use for the radio element with a tab. string GetTabRadioClasses(IUFTabProperties aProperties) Parameters aProperties IUFTabProperties Returns string GetTableCellClasses(IUFCellProperties, UFTableCellType, IUFTableProperties, IUFTableRowProperties) Returns the css classes to use for the table cell (td/th) element. string GetTableCellClasses(IUFCellProperties aProperties, UFTableCellType aType, IUFTableProperties aTableProperties, IUFTableRowProperties aRowProperties) Parameters aProperties IUFCellProperties aType UFTableCellType aTableProperties IUFTableProperties aRowProperties IUFTableRowProperties Returns string GetTableClasses(IUFTableProperties) Returns the css classes to use for the table element. string GetTableClasses(IUFTableProperties aProperties) Parameters aProperties IUFTableProperties Returns string GetTableHeaderButtonClasses(IUFCellProperties, IUFTableProperties, IUFTableRowProperties) Returns the css classes to use for the button element within a table header cell that is added when the table is sortable. string GetTableHeaderButtonClasses(IUFCellProperties aProperties, IUFTableProperties aTableProperties, IUFTableRowProperties aRowProperties) Parameters aProperties IUFCellProperties aTableProperties IUFTableProperties aRowProperties IUFTableRowProperties Returns string GetTableRowClasses(IUFTableRowProperties, IUFTableProperties) Returns the css classes to use for the table row (tr) element. string GetTableRowClasses(IUFTableRowProperties aProperties, IUFTableProperties aTableProperties) Parameters aProperties IUFTableRowProperties aTableProperties IUFTableProperties Returns string GetTabsClasses(int) Gets the css classes to use for the tabs container element. string GetTabsClasses(int aCount) Parameters aCount int Number of tabs the container contains Returns string GetTextInputClasses(IUFInputProperties, string) Returns the css classes to use with the text input element. string GetTextInputClasses(IUFInputProperties aProperties, string aType) Parameters aProperties IUFInputProperties aType string Type the input is created for Returns string GetTextInputLabelClasses(IUFInputProperties, string) Returns the css classes to use with the label for text input and select elements. string GetTextInputLabelClasses(IUFInputProperties aProperties, string aType) Parameters aProperties IUFInputProperties aType string Type the input is created for Returns string GetTextInputLabelDescriptionClasses(IUFInputProperties, string) Returns the css classes to use with the description within label for text input and select elements. string GetTextInputLabelDescriptionClasses(IUFInputProperties aProperties, string aType) Parameters aProperties IUFInputProperties aType string Type the input is created for Returns string GetTextInputLabelSpanClasses(IUFInputProperties, string) Returns the css classes to use with the span within the label for text input and select elements. string GetTextInputLabelSpanClasses(IUFInputProperties aProperties, string aType) Parameters aProperties IUFInputProperties aType string Type the input is created for Returns string GetTextInputWrapperClasses(IUFInputProperties, string) Returns the css classes to use with the wrapper element for text input and select elements. string GetTextInputWrapperClasses(IUFInputProperties aProperties, string aType) Parameters aProperties IUFInputProperties aType string Type the input is created for Returns string GetValidationFeedbackContainerHtml(string) Returns the html for the validation feedback container (used by javascript validation). string GetValidationFeedbackContainerHtml(string anId) Parameters anId string Returns string"
  },
  "api/UltraForce.Library.Core.Asp.Services.IUFViewDataService.html": {
    "href": "api/UltraForce.Library.Core.Asp.Services.IUFViewDataService.html",
    "title": "Interface IUFViewDataService | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFViewDataService Namespace UltraForce.Library.Core.Asp.Services Assembly UltraForce.Library.Core.Asp.dll Defines an interface for a service that provides data for a view which is shared between all (partial) views and controllers using typed properties. Register this service in the DI container as a singleton. public interface IUFViewDataService Properties Title This property is used to store the title of the page. The UFDataTitleTagHelper uses this property to set or read the title. string Title { get; set; } Property Value string Methods Clear() Clears all data. void Clear()"
  },
  "api/UltraForce.Library.Core.Asp.Services.UFDutchIdentityErrorDescriber.html": {
    "href": "api/UltraForce.Library.Core.Asp.Services.UFDutchIdentityErrorDescriber.html",
    "title": "Class UFDutchIdentityErrorDescriber | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDutchIdentityErrorDescriber Namespace UltraForce.Library.Core.Asp.Services Assembly UltraForce.Library.Core.Asp.dll This class uses error messages in Dutch. public class UFDutchIdentityErrorDescriber : IdentityErrorDescriber Inheritance object IdentityErrorDescriber UFDutchIdentityErrorDescriber Inherited Members IdentityErrorDescriber.DefaultError() IdentityErrorDescriber.ConcurrencyFailure() IdentityErrorDescriber.InvalidToken() IdentityErrorDescriber.RecoveryCodeRedemptionFailed() IdentityErrorDescriber.LoginAlreadyAssociated() IdentityErrorDescriber.InvalidUserName(string) IdentityErrorDescriber.InvalidEmail(string) IdentityErrorDescriber.DuplicateUserName(string) IdentityErrorDescriber.InvalidRoleName(string) IdentityErrorDescriber.DuplicateRoleName(string) IdentityErrorDescriber.UserAlreadyHasPassword() IdentityErrorDescriber.UserLockoutNotEnabled() IdentityErrorDescriber.UserAlreadyInRole(string) IdentityErrorDescriber.UserNotInRole(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DuplicateEmail(string) Returns an IdentityError indicating the specified email is already associated with an account. public override IdentityError DuplicateEmail(string email) Parameters email string The email that is already associated with an account. Returns IdentityError An IdentityError indicating the specified email is already associated with an account. PasswordMismatch() Returns an IdentityError indicating a password mismatch. public override IdentityError PasswordMismatch() Returns IdentityError An IdentityError indicating a password mismatch. PasswordRequiresDigit() Returns an IdentityError indicating a password entered does not contain a numeric character, which is required by the password policy. public override IdentityError PasswordRequiresDigit() Returns IdentityError An IdentityError indicating a password entered does not contain a numeric character. PasswordRequiresLower() Returns an IdentityError indicating a password entered does not contain a lower case letter, which is required by the password policy. public override IdentityError PasswordRequiresLower() Returns IdentityError An IdentityError indicating a password entered does not contain a lower case letter. PasswordRequiresNonAlphanumeric() Returns an IdentityError indicating a password entered does not contain a non-alphanumeric character, which is required by the password policy. public override IdentityError PasswordRequiresNonAlphanumeric() Returns IdentityError An IdentityError indicating a password entered does not contain a non-alphanumeric character. PasswordRequiresUniqueChars(int) Returns an IdentityError indicating a password does not meet the minimum number uniqueChars of unique chars. public override IdentityError PasswordRequiresUniqueChars(int uniqueChars) Parameters uniqueChars int The number of different chars that must be used. Returns IdentityError An IdentityError indicating a password does not meet the minimum number uniqueChars of unique chars. PasswordRequiresUpper() Returns an IdentityError indicating a password entered does not contain an upper case letter, which is required by the password policy. public override IdentityError PasswordRequiresUpper() Returns IdentityError An IdentityError indicating a password entered does not contain an upper case letter. PasswordTooShort(int) Returns an IdentityError indicating a password of the specified length does not meet the minimum length requirements. public override IdentityError PasswordTooShort(int length) Parameters length int The length that is not long enough. Returns IdentityError An IdentityError indicating a password of the specified length does not meet the minimum length requirements."
  },
  "api/UltraForce.Library.Core.Asp.Services.UFFontAwesomeTheme.html": {
    "href": "api/UltraForce.Library.Core.Asp.Services.UFFontAwesomeTheme.html",
    "title": "Class UFFontAwesomeTheme | UltraForce.Library.Core.Asp",
    "keywords": "Class UFFontAwesomeTheme Namespace UltraForce.Library.Core.Asp.Services Assembly UltraForce.Library.Core.Asp.dll UFFontAwesomeTheme implements icon related methods for use with font awesome. public class UFFontAwesomeTheme : UFTheme, IUFTheme Inheritance object UFTheme UFFontAwesomeTheme Implements IUFTheme Inherited Members UFTheme.GetButtonClasses(IUFButtonProperties) UFTheme.GetButtonCaptionClasses(IUFButtonProperties) UFTheme.GetContainerClasses(IUFContainerProperties) UFTheme.GetTabsClasses(int) UFTheme.GetTabRadioClasses(IUFTabProperties) UFTheme.GetTabLabelClasses(IUFTabProperties) UFTheme.GetTabContentWrapperClasses(IUFTabProperties) UFTheme.GetStackClasses(IUFContainerProperties) UFTheme.GetStackItemClasses(IUFStackItemProperties) UFTheme.GetDataListClasses() UFTheme.GetDataNameClasses() UFTheme.GetDataValueClasses() UFTheme.GetTextInputWrapperClasses(IUFInputProperties, string) UFTheme.GetTextInputLabelClasses(IUFInputProperties, string) UFTheme.GetTextInputLabelSpanClasses(IUFInputProperties, string) UFTheme.GetTextInputLabelDescriptionClasses(IUFInputProperties, string) UFTheme.GetTextInputClasses(IUFInputProperties, string) UFTheme.GetValidationFeedbackContainerHtml(string) UFTheme.GetFieldErrorsHtml(ModelStateDictionary, string) UFTheme.GetFieldErrorsClasses() UFTheme.GetCheckboxWrapperClasses() UFTheme.GetCheckboxLabelClasses() UFTheme.GetCheckboxLabelSpanClasses() UFTheme.GetCheckboxLabelDescriptionClasses() UFTheme.GetCheckboxInputClasses() UFTheme.GetCheckboxExtraHtml() UFTheme.GetRadioWrapperClasses() UFTheme.GetRadioLabelClasses() UFTheme.GetRadioLabelSpanClasses() UFTheme.GetRadioLabelDescriptionClasses() UFTheme.GetRadioInputClasses() UFTheme.GetRadioExtraHtml() UFTheme.GetSelectClasses(IUFInputProperties) UFTheme.GetSpacerClasses(IUFSpacerProperties) UFTheme.GetColumnClasses(IUFFlexProperties) UFTheme.GetRowClasses(IUFFlexProperties) UFTheme.GetTableClasses(IUFTableProperties) UFTheme.GetTableCellClasses(IUFCellProperties, UFTableCellType, IUFTableProperties, IUFTableRowProperties) UFTheme.GetTableHeaderButtonClasses(IUFCellProperties, IUFTableProperties, IUFTableRowProperties) UFTheme.GetTableRowClasses(IUFTableRowProperties, IUFTableProperties) UFTheme.GetFilterContainerClasses() UFTheme.GetFilterInputClasses() UFTheme.GetFilterButtonClasses() UFTheme.GetSortAscendingClasses() UFTheme.GetSortDescendingClasses() UFTheme.GetValidationFeedbackClasses() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetButtonIconCssClasses(IUFButtonProperties) Gets the css classes for an icon. The default implementation assumes font awesome v6+ is used. If the icon is not empty, the method checks if the icon starts with \"fa\" and if not, it adds the required fa classes: fa fa-{Icon} protected virtual string GetButtonIconCssClasses(IUFButtonProperties aProperties) Parameters aProperties IUFButtonProperties Returns string Css classes or empty string if there is no icon GetButtonIconHtml(IUFButtonProperties) Gets the html for an icon. public override string GetButtonIconHtml(IUFButtonProperties aProperties) Parameters aProperties IUFButtonProperties Returns string Html snippet or empty string if there is no icon"
  },
  "api/UltraForce.Library.Core.Asp.Services.UFModelExpressionRenderer.html": {
    "href": "api/UltraForce.Library.Core.Asp.Services.UFModelExpressionRenderer.html",
    "title": "Class UFModelExpressionRenderer | UltraForce.Library.Core.Asp",
    "keywords": "Class UFModelExpressionRenderer Namespace UltraForce.Library.Core.Asp.Services Assembly UltraForce.Library.Core.Asp.dll An implementation of IUFModelExpressionRenderer. public class UFModelExpressionRenderer : IUFModelExpressionRenderer Inheritance object UFModelExpressionRenderer Implements IUFModelExpressionRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFModelExpressionRenderer(IHtmlGenerator) Constructs an instance of the UFModelExpressionRenderer. public UFModelExpressionRenderer(IHtmlGenerator generator) Parameters generator IHtmlGenerator Properties HtmlGenerator Html generator instance protected IHtmlGenerator HtmlGenerator { get; } Property Value IHtmlGenerator Methods GetCheckBoxHtml(bool) Generates a input tag using checkbox type. The default method just creates a basic input type without any styling. Subclasses can override if needed. protected virtual string GetCheckBoxHtml(bool isChecked) Parameters isChecked bool Returns string GetDateHtml(DateOnly?) Generates a html representation of a date. The default implementation returns the date in mysql format (yyyy-MM-dd) or '-' if the date is null. protected virtual string GetDateHtml(DateOnly? date) Parameters date DateOnly? Date or null if render no date Returns string GetDateTimeHtml(DateTime?) Generates a html representation of a date and time. The default implementation returns the date/time in mysql format (yyyy-MM-dd HH:mm:ss) or '-' if the date is null. protected virtual string GetDateTimeHtml(DateTime? dateTime) Parameters dateTime DateTime? Date/time or null if render no date and time Returns string GetEmailLinkHtml(string) Generates an anchor tag using a mailto protocol. The default method just creates a basic input type without any styling. Subclasses can override if needed. protected virtual string GetEmailLinkHtml(string email) Parameters email string Returns string GetName(ModelExpression, ViewContext) Gets the name for a model expression. public IHtmlContentBuilder GetName(ModelExpression expression, ViewContext viewContext) Parameters expression ModelExpression expression to get name for viewContext ViewContext Returns IHtmlContentBuilder html representation of name GetTimeHtml(TimeOnly?) Generates a html representation of a time. The default implementation returns the time in mysql format (HH:mm:ss) or '-' if the time is null. protected virtual string GetTimeHtml(TimeOnly? time) Parameters time TimeOnly? Time or null if render no time Returns string GetValueAsText(ModelExpression, ViewContext) Gets the value as a text string. public string GetValueAsText(ModelExpression expression, ViewContext viewContext) Parameters expression ModelExpression expression to get value for viewContext ViewContext Returns string text representation of value SetContentToNameAsync(TagHelperOutput, ModelExpression, ViewContext) Sets the content to the (display) name of the ModelExpression. The code is based on the code from LabelTagHelper. public Task SetContentToNameAsync(TagHelperOutput output, ModelExpression expression, ViewContext viewContext) Parameters output TagHelperOutput Output to update expression ModelExpression Model expression to get name from viewContext ViewContext View context to use Returns Task SetContentToValueAsync(TagHelperOutput, ModelExpression, ViewContext) Sets the content to the value of the ModelExpression. It handles date and bool types. Date types are formatted to \"yyyy-MM-dd HH:mm:ss\". Bool types are shown as a checked or unchecked checkbox. If the model expression uses the EmailAddressAttribute the value gets rendered using a mailto: link. If the value is an enum, the display name is used. public Task SetContentToValueAsync(TagHelperOutput output, ModelExpression expression, ViewContext viewContext) Parameters output TagHelperOutput expression ModelExpression viewContext ViewContext Returns Task"
  },
  "api/UltraForce.Library.Core.Asp.Services.UFRazorViewRenderer.html": {
    "href": "api/UltraForce.Library.Core.Asp.Services.UFRazorViewRenderer.html",
    "title": "Class UFRazorViewRenderer | UltraForce.Library.Core.Asp",
    "keywords": "Class UFRazorViewRenderer Namespace UltraForce.Library.Core.Asp.Services Assembly UltraForce.Library.Core.Asp.dll A service to help renders a razor view to a string. Register this class as a Transient service with the service collection. public class UFRazorViewRenderer Inheritance object UFRazorViewRenderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Based on code from: https://github.com/aspnet/Entropy/blob/master/samples/Mvc.RenderViewToString/RazorViewToStringRenderer.cs Constructors UFRazorViewRenderer(IRazorViewEngine, ITempDataProvider, IServiceProvider) Constructs an instance of UFRazorViewRenderer public UFRazorViewRenderer(IRazorViewEngine viewEngine, ITempDataProvider tempDataProvider, IServiceProvider serviceProvider) Parameters viewEngine IRazorViewEngine tempDataProvider ITempDataProvider serviceProvider IServiceProvider Methods RenderEmailViewAsync<TModel>(string, TModel) Tries to render both an html and plain text version of an email by appending 'Html'/'.Html' and 'Text'/'.Text' to the base view name. baseViewName. public Task<UFEmailContentModel> RenderEmailViewAsync<TModel>(string baseViewName, TModel model) Parameters baseViewName string Base view name model TModel Model to render Returns Task<UFEmailContentModel> A UFEmailContentModel instance Type Parameters TModel Type of model data Remarks If a view can not be found, the value for that property will be set to true. If the HTML view can not be found, the method tries baseViewName itself as view name. RenderViewAsync<TModel>(string, TModel) Renders a Razor view and its model data to a string. If the view can not be found the method with raise an exception. public Task<string?> RenderViewAsync<TModel>(string viewName, TModel model) Parameters viewName string Name of view model TModel Model data Returns Task<string> Rendered view Type Parameters TModel Type of model data"
  },
  "api/UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService-1.html": {
    "href": "api/UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService-1.html",
    "title": "Class UFScopedBackgroundService<TAsynchronousExecutableService> | UltraForce.Library.Core.Asp",
    "keywords": "Class UFScopedBackgroundService<TAsynchronousExecutableService> Namespace UltraForce.Library.Core.Asp.Services Assembly UltraForce.Library.Core.Asp.dll A background service helper class to execute a service in the background using its own service scope. Note: do not forget to register the TAsynchronousExecutableService type at the service provider. The code is based on: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-5.0#consuming-a-scoped-service-in-a-background-task-1 public class UFScopedBackgroundService<TAsynchronousExecutableService> : BackgroundService, IHostedService, IDisposable where TAsynchronousExecutableService : IUFAsynchronousExecutableService Type Parameters TAsynchronousExecutableService Inheritance object BackgroundService UFScopedBackgroundService<TAsynchronousExecutableService> Implements IHostedService IDisposable Inherited Members BackgroundService.Dispose() BackgroundService.StartAsync(CancellationToken) BackgroundService.ExecuteTask object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFScopedBackgroundService(IServiceProvider, ILogger<UFScopedBackgroundService<TAsynchronousExecutableService>>) Constructs an instance of UFScopedBackgroundService<TAsynchronousExecutableService> public UFScopedBackgroundService(IServiceProvider services, ILogger<UFScopedBackgroundService<TAsynchronousExecutableService>> logger) Parameters services IServiceProvider logger ILogger<UFScopedBackgroundService<TAsynchronousExecutableService>> Properties Services Reference to the services provider protected IServiceProvider Services { get; } Property Value IServiceProvider Methods ExecuteAsync(CancellationToken) This method is called when the IHostedService starts. The implementation should return a task that represents the lifetime of the long running operation(s) being performed. protected override Task ExecuteAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Triggered when StopAsync(CancellationToken) is called. Returns Task A Task that represents the long running operations. Remarks See Worker Services in .NET for implementation guidelines. StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public override Task StopAsync(CancellationToken stoppingToken) Parameters stoppingToken CancellationToken Returns Task A Task that represents the asynchronous Stop operation."
  },
  "api/UltraForce.Library.Core.Asp.Services.UFTheme.html": {
    "href": "api/UltraForce.Library.Core.Asp.Services.UFTheme.html",
    "title": "Class UFTheme | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTheme Namespace UltraForce.Library.Core.Asp.Services Assembly UltraForce.Library.Core.Asp.dll UFTheme can be used as a base class for themes. It returns empty strings for html and css classes methods. public class UFTheme : IUFTheme Inheritance object UFTheme Implements IUFTheme Derived UFFontAwesomeTheme Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetButtonCaptionClasses(IUFButtonProperties) Gets the css classes to use for the caption element within a button. public virtual string GetButtonCaptionClasses(IUFButtonProperties aProperties) Parameters aProperties IUFButtonProperties The button property values Returns string One or more css classes to style the caption. GetButtonClasses(IUFButtonProperties) Gets the css classes to use for the button element. public virtual string GetButtonClasses(IUFButtonProperties aProperties) Parameters aProperties IUFButtonProperties The button property values Returns string One or more css classes to style the button. GetButtonIconHtml(IUFButtonProperties) Gets the html for an icon. public virtual string GetButtonIconHtml(IUFButtonProperties aProperties) Parameters aProperties IUFButtonProperties Returns string Html snippet or empty string if there is no icon GetCheckboxExtraHtml() Gets the extra html to render after the checkbox input element. It can be used when using custom graphics. public virtual string GetCheckboxExtraHtml() Returns string GetCheckboxInputClasses() Returns the css classes to use for the checkbox input element. public virtual string GetCheckboxInputClasses() Returns string GetCheckboxLabelClasses() Returns the css classes to use for the label of a checkbox element. public virtual string GetCheckboxLabelClasses() Returns string GetCheckboxLabelDescriptionClasses() Returns the css classes to use for the description within the checkbox label element. public virtual string GetCheckboxLabelDescriptionClasses() Returns string GetCheckboxLabelSpanClasses() Returns the css classes to use for the text within the checkbox label element. public virtual string GetCheckboxLabelSpanClasses() Returns string GetCheckboxWrapperClasses() Returns the css classes to use for the wrapper of a checkbox element. public virtual string GetCheckboxWrapperClasses() Returns string GetColumnClasses(IUFFlexProperties) Returns the css classes to use for the column element. public virtual string GetColumnClasses(IUFFlexProperties aProperties) Parameters aProperties IUFFlexProperties Returns string GetContainerClasses(IUFContainerProperties) Gets the css classes to use for the container element. public virtual string GetContainerClasses(IUFContainerProperties aProperties) Parameters aProperties IUFContainerProperties The container property values Returns string One or more css classes to style the container. GetDataListClasses() Gets the css classes to use for the data list element. public virtual string GetDataListClasses() Returns string One or more css classes to style the data list. GetDataNameClasses() Gets the css classes to use for the data name element. public virtual string GetDataNameClasses() Returns string One or more css classes to style the data name. GetDataValueClasses() Gets the css classes to use for the data value element. public virtual string GetDataValueClasses() Returns string One or more css classes to style the data value. GetFieldErrorsClasses() Returns the css classes to use for the wrapper of the errors. public virtual string GetFieldErrorsClasses() Returns string GetFieldErrorsHtml(ModelStateDictionary, string) Renders the errors for an input field. The default implementation calls GetErrors(ModelStateDictionary, string, string, string, string) using br-tag as separator. public virtual string GetFieldErrorsHtml(ModelStateDictionary aModelState, string aName) Parameters aModelState ModelStateDictionary aName string Returns string GetFilterButtonClasses() Returns the css classes to use for button element within the filter container. public virtual string GetFilterButtonClasses() Returns string GetFilterContainerClasses() Returns the css classes to use for the filter container element shown above the table if Filter is true. public virtual string GetFilterContainerClasses() Returns string GetFilterInputClasses() Returns the css classes to use for input element within the filter container. public virtual string GetFilterInputClasses() Returns string GetRadioExtraHtml() The default implementation returns the value of GetCheckboxExtraHtml(). public virtual string GetRadioExtraHtml() Returns string GetRadioInputClasses() The default implementation returns the value of GetCheckboxInputClasses(). public virtual string GetRadioInputClasses() Returns string GetRadioLabelClasses() The default implementation returns the value of GetCheckboxLabelClasses(). public virtual string GetRadioLabelClasses() Returns string GetRadioLabelDescriptionClasses() The default implementation returns the value of GetCheckboxLabelDescriptionClasses(). public virtual string GetRadioLabelDescriptionClasses() Returns string GetRadioLabelSpanClasses() The default implementation returns the value of GetCheckboxLabelSpanClasses(). public virtual string GetRadioLabelSpanClasses() Returns string GetRadioWrapperClasses() The default implementation returns the value of GetCheckboxWrapperClasses(). public virtual string GetRadioWrapperClasses() Returns string GetRowClasses(IUFFlexProperties) Returns the css classes to use for the row element. public virtual string GetRowClasses(IUFFlexProperties aProperties) Parameters aProperties IUFFlexProperties Returns string GetSelectClasses(IUFInputProperties) The default implementation returns the value of GetTextInputClasses(IUFInputProperties, string). public virtual string GetSelectClasses(IUFInputProperties aProperties) Parameters aProperties IUFInputProperties Returns string GetSortAscendingClasses() Returns the css classes to use for a table header element when the rows are sorted in ascending order for that column. The css classes are added to the result from GetTableRowClasses(IUFTableRowProperties, IUFTableProperties). public virtual string GetSortAscendingClasses() Returns string GetSortDescendingClasses() Returns the css classes to use for a table header element when the rows are sorted in descending order for that column. The css classes are added to the result from GetTableRowClasses(IUFTableRowProperties, IUFTableProperties). public virtual string GetSortDescendingClasses() Returns string GetSpacerClasses(IUFSpacerProperties) Returns the css classes to use for the spacer element. public virtual string GetSpacerClasses(IUFSpacerProperties aProperties) Parameters aProperties IUFSpacerProperties Returns string GetStackClasses(IUFContainerProperties) Gets the css classes to use for a stack element. public virtual string GetStackClasses(IUFContainerProperties aProperties) Parameters aProperties IUFContainerProperties Returns string GetStackItemClasses(IUFStackItemProperties) Gets the css classes to use for a stack item element (that is placed within a stack element). public virtual string GetStackItemClasses(IUFStackItemProperties aProperties) Parameters aProperties IUFStackItemProperties Returns string GetTabContentWrapperClasses(IUFTabProperties) Gets the css classes to use for the content wrapper element with a tab. public virtual string GetTabContentWrapperClasses(IUFTabProperties aProperties) Parameters aProperties IUFTabProperties Returns string GetTabLabelClasses(IUFTabProperties) Gets the css classes to use for the label element with a tab. public virtual string GetTabLabelClasses(IUFTabProperties aProperties) Parameters aProperties IUFTabProperties Returns string GetTabRadioClasses(IUFTabProperties) Gets the css classes to use for the radio element with a tab. public virtual string GetTabRadioClasses(IUFTabProperties aProperties) Parameters aProperties IUFTabProperties Returns string GetTableCellClasses(IUFCellProperties, UFTableCellType, IUFTableProperties, IUFTableRowProperties) Returns the css classes to use for the table cell (td/th) element. public virtual string GetTableCellClasses(IUFCellProperties aProperties, UFTableCellType aType, IUFTableProperties aTableProperties, IUFTableRowProperties aRowProperties) Parameters aProperties IUFCellProperties aType UFTableCellType aTableProperties IUFTableProperties aRowProperties IUFTableRowProperties Returns string GetTableClasses(IUFTableProperties) Returns the css classes to use for the table element. public virtual string GetTableClasses(IUFTableProperties aProperties) Parameters aProperties IUFTableProperties Returns string GetTableHeaderButtonClasses(IUFCellProperties, IUFTableProperties, IUFTableRowProperties) Returns the css classes to use for the button element within a table header cell that is added when the table is sortable. public virtual string GetTableHeaderButtonClasses(IUFCellProperties aProperties, IUFTableProperties aTableProperties, IUFTableRowProperties aRowProperties) Parameters aProperties IUFCellProperties aTableProperties IUFTableProperties aRowProperties IUFTableRowProperties Returns string GetTableRowClasses(IUFTableRowProperties, IUFTableProperties) Returns the css classes to use for the table row (tr) element. public virtual string GetTableRowClasses(IUFTableRowProperties aProperties, IUFTableProperties aTableProperties) Parameters aProperties IUFTableRowProperties aTableProperties IUFTableProperties Returns string GetTabsClasses(int) Gets the css classes to use for the tabs container element. public virtual string GetTabsClasses(int aCount) Parameters aCount int Number of tabs the container contains Returns string GetTextInputClasses(IUFInputProperties, string) Returns the css classes to use with the text input element. public virtual string GetTextInputClasses(IUFInputProperties aProperties, string aType) Parameters aProperties IUFInputProperties aType string Type the input is created for Returns string GetTextInputLabelClasses(IUFInputProperties, string) Returns the css classes to use with the label for text input and select elements. public virtual string GetTextInputLabelClasses(IUFInputProperties aProperties, string aType) Parameters aProperties IUFInputProperties aType string Type the input is created for Returns string GetTextInputLabelDescriptionClasses(IUFInputProperties, string) Returns the css classes to use with the description within label for text input and select elements. public virtual string GetTextInputLabelDescriptionClasses(IUFInputProperties aProperties, string aType) Parameters aProperties IUFInputProperties aType string Type the input is created for Returns string GetTextInputLabelSpanClasses(IUFInputProperties, string) Returns the css classes to use with the span within the label for text input and select elements. public virtual string GetTextInputLabelSpanClasses(IUFInputProperties aProperties, string aType) Parameters aProperties IUFInputProperties aType string Type the input is created for Returns string GetTextInputWrapperClasses(IUFInputProperties, string) Returns the css classes to use with the wrapper element for text input and select elements. public virtual string GetTextInputWrapperClasses(IUFInputProperties aProperties, string aType) Parameters aProperties IUFInputProperties aType string Type the input is created for Returns string GetValidationFeedbackClasses() Returns css classes to use for the validation feedback container. The default implementation returns the value of GetFieldErrorsClasses(). protected virtual string GetValidationFeedbackClasses() Returns string GetValidationFeedbackContainerHtml(string) Returns the html for the validation feedback container. The default implementation returns: <span class=\"{GetValidationFeedbackClasses()}\" data-valmsg-for=\"{anId}\" data-valmsg-replace=\"true\"></span> public virtual string GetValidationFeedbackContainerHtml(string anId) Parameters anId string Returns string"
  },
  "api/UltraForce.Library.Core.Asp.Services.UFViewDataService.html": {
    "href": "api/UltraForce.Library.Core.Asp.Services.UFViewDataService.html",
    "title": "Class UFViewDataService | UltraForce.Library.Core.Asp",
    "keywords": "Class UFViewDataService Namespace UltraForce.Library.Core.Asp.Services Assembly UltraForce.Library.Core.Asp.dll Implements the IUFViewDataService interface. public class UFViewDataService : IUFViewDataService Inheritance object UFViewDataService Implements IUFViewDataService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Title This property is used to store the title of the page. The UFDataTitleTagHelper uses this property to set or read the title. public string Title { get; set; } Property Value string Methods Clear() Clears all data. public virtual void Clear()"
  },
  "api/UltraForce.Library.Core.Asp.Services.html": {
    "href": "api/UltraForce.Library.Core.Asp.Services.html",
    "title": "Namespace UltraForce.Library.Core.Asp.Services | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.Services Classes UFDutchIdentityErrorDescriber This class uses error messages in Dutch. UFModelExpressionRenderer An implementation of IUFModelExpressionRenderer. UFRazorViewRenderer A service to help renders a razor view to a string. Register this class as a Transient service with the service collection. UFScopedBackgroundService<TAsynchronousExecutableService> A background service helper class to execute a service in the background using its own service scope. Note: do not forget to register the TAsynchronousExecutableService type at the service provider. The code is based on: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-5.0#consuming-a-scoped-service-in-a-background-task-1 UFViewDataService Implements the IUFViewDataService interface. Interfaces IUFAsynchronousExecutableService An interface defining a method that will be run asynchronously. It is based on the BackgroundService. IUFModelExpressionRenderer Defines a renderer for ModelExpressions. IUFViewDataService Defines an interface for a service that provides data for a view which is shared between all (partial) views and controllers using typed properties. Register this service in the DI container as a singleton."
  },
  "api/UltraForce.Library.Core.Asp.Sessions.IUFSessionMessages.html": {
    "href": "api/UltraForce.Library.Core.Asp.Sessions.IUFSessionMessages.html",
    "title": "Interface IUFSessionMessages | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFSessionMessages Namespace UltraForce.Library.Core.Asp.Sessions Assembly UltraForce.Library.Core.Asp.dll Interface with properties that map to session data. public interface IUFSessionMessages Methods Add(string) Adds a message to show in page void Add(string aMessage) Parameters aMessage string Message to show AddError(string) Adds an error message to show in page void AddError(string aMessage) Parameters aMessage string Message to show AddWarning(string) Adds a warning message to show in page void AddWarning(string aMessage) Parameters aMessage string Message to show Clear() Clears all stored messages void Clear() GetErrorMessages() Gets all error messages IEnumerable<string> GetErrorMessages() Returns IEnumerable<string> messages GetMessages() Gets all messages IEnumerable<string> GetMessages() Returns IEnumerable<string> messages GetWarningMessages() Gets all warning messages IEnumerable<string> GetWarningMessages() Returns IEnumerable<string> messages HasMessages() Checks if there are any messages. bool HasMessages() Returns bool True if there is at least one message"
  },
  "api/UltraForce.Library.Core.Asp.Sessions.UFSessionKeyedStorage.html": {
    "href": "api/UltraForce.Library.Core.Asp.Sessions.UFSessionKeyedStorage.html",
    "title": "Class UFSessionKeyedStorage | UltraForce.Library.Core.Asp",
    "keywords": "Class UFSessionKeyedStorage Namespace UltraForce.Library.Core.Asp.Sessions Assembly UltraForce.Library.Core.Asp.dll This class maps a UltraForce.Library.NetStandard.Storage.UFKeyedStorage to a ISession. It uses System.Text.Json to serialize and deserialize objects. Note that the factory function in DeserializeObject(string, Type?, Func<Type, object>) is not used, since this is not supported by the Json implementation. public class UFSessionKeyedStorage : UFKeyedStorage Inheritance object UFKeyedStorage UFSessionKeyedStorage Inherited Members UFKeyedStorage.GetString(string) UFKeyedStorage.GetByte(string, byte) UFKeyedStorage.GetByte(string) UFKeyedStorage.SetByte(string, byte) UFKeyedStorage.GetSByte(string, sbyte) UFKeyedStorage.GetSByte(string) UFKeyedStorage.SetSByte(string, sbyte) UFKeyedStorage.GetShort(string, short) UFKeyedStorage.GetShort(string) UFKeyedStorage.SetShort(string, short) UFKeyedStorage.GetUShort(string, ushort) UFKeyedStorage.GetUShort(string) UFKeyedStorage.SetUShort(string, ushort) UFKeyedStorage.GetInt(string) UFKeyedStorage.GetUInt(string, uint) UFKeyedStorage.GetUInt(string) UFKeyedStorage.SetUInt(string, uint) UFKeyedStorage.GetLong(string, long) UFKeyedStorage.GetLong(string) UFKeyedStorage.SetLong(string, long) UFKeyedStorage.GetULong(string, ulong) UFKeyedStorage.GetULong(string) UFKeyedStorage.SetULong(string, ulong) UFKeyedStorage.GetFloat(string, float) UFKeyedStorage.GetFloat(string) UFKeyedStorage.SetFloat(string, float) UFKeyedStorage.GetDouble(string, double) UFKeyedStorage.GetDouble(string) UFKeyedStorage.SetDouble(string, double) UFKeyedStorage.GetBool(string, bool) UFKeyedStorage.GetBool(string) UFKeyedStorage.SetBool(string, bool) UFKeyedStorage.GetChar(string, char) UFKeyedStorage.GetChar(string) UFKeyedStorage.SetChar(string, char) UFKeyedStorage.GetBytes(string, byte[]) UFKeyedStorage.GetBytes(string) UFKeyedStorage.SetBytes(string, byte[]) UFKeyedStorage.GetDateTime(string, DateTime) UFKeyedStorage.GetDateTime(string) UFKeyedStorage.SetDateTime(string, DateTime) UFKeyedStorage.GetGuid(string, Guid) UFKeyedStorage.GetGuid(string) UFKeyedStorage.SetGuid(string, Guid) UFKeyedStorage.GetStorableObject(string, IUFStorableObject) UFKeyedStorage.SetStorableObject(string, IUFStorableObject) UFKeyedStorage.GetObject(string, Type) UFKeyedStorage.GetObject<T>(string) UFKeyedStorage.GetObject(string, Type, Func<Type, object>) UFKeyedStorage.SetObject(string, object, Type) UFKeyedStorage.SetObject(string, object) UFKeyedStorage.SetObject<T>(string, T) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFSessionKeyedStorage(ISession) This class maps a UltraForce.Library.NetStandard.Storage.UFKeyedStorage to a ISession. It uses System.Text.Json to serialize and deserialize objects. Note that the factory function in DeserializeObject(string, Type?, Func<Type, object>) is not used, since this is not supported by the Json implementation. public UFSessionKeyedStorage(ISession session) Parameters session ISession Methods DeleteAll() Deletes all stored data. public override void DeleteAll() DeleteKey(string) Deletes the data for specific key. public override void DeleteKey(string key) Parameters key string DeserializeObject(string, Type?, Func<Type, object>) Deserializes an object that was stored previously with SerializeObject(string, object). protected override object DeserializeObject(string key, Type? type, Func<Type, object> factory) Parameters key string type Type factory Func<Type, object> Returns object Retrieved object GetInt(string, int) Gets an integer. The default implementation uses GetString(string) and uses Parse(string) to convert it back to a integer. public override int GetInt(string key, int defaultValue) Parameters key string defaultValue int Returns int The stored integer or aDefault. GetString(string, string) Gets a string. public override string GetString(string key, string defaultValue) Parameters key string defaultValue string Returns string The stored string or aDefault. HasKey(string) Checks if there is a locally stored data for a specific key. public override bool HasKey(string key) Parameters key string Returns bool True if has there is data for the key; otherwise, false. SerializeObject(string, object) Serializes an object. This method is called when the class can not store the object in any other way. The default implementation throws an exception. protected override void SerializeObject(string key, object value) Parameters key string value object SetInt(string, int) Stores an integer in the storage. The default implementation convert the value to a string and uses SetString(string, string) to store it. public override void SetInt(string key, int value) Parameters key string value int SetString(string, string) Stores a string in the storage. public override void SetString(string key, string value) Parameters key string value string"
  },
  "api/UltraForce.Library.Core.Asp.Sessions.UFSessionMessages.html": {
    "href": "api/UltraForce.Library.Core.Asp.Sessions.UFSessionMessages.html",
    "title": "Class UFSessionMessages | UltraForce.Library.Core.Asp",
    "keywords": "Class UFSessionMessages Namespace UltraForce.Library.Core.Asp.Sessions Assembly UltraForce.Library.Core.Asp.dll UFSessionMessages can be used to store messages in a session or retrieve them to be show them inside a view. To use this class, register this class as a scoped service. If there is no session because either the class fails to get a HttpContext or the ISession; messages will be not be stored and the get messages methods will return empty lists. public sealed class UFSessionMessages Inheritance object UFSessionMessages Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Constructors UFSessionMessages(IHttpContextAccessor) UFSessionMessages can be used to store messages in a session or retrieve them to be show them inside a view. To use this class, register this class as a scoped service. If there is no session because either the class fails to get a HttpContext or the ISession; messages will be not be stored and the get messages methods will return empty lists. public UFSessionMessages(IHttpContextAccessor anAccessor) Parameters anAccessor IHttpContextAccessor Methods Add(string) Adds a message to show in page public void Add(string message) Parameters message string Message to show AddError(string) Adds an error message to show in page public void AddError(string message) Parameters message string Message to show AddWarning(string) Adds a warning message to show in page public void AddWarning(string message) Parameters message string Message to show Clear() Clears all stored messages public void Clear() GetErrorMessages() Gets all error messages public IEnumerable<string> GetErrorMessages() Returns IEnumerable<string> messages GetMessages() Gets all messages public IEnumerable<string> GetMessages() Returns IEnumerable<string> messages GetWarningMessages() Gets all warning messages public IEnumerable<string> GetWarningMessages() Returns IEnumerable<string> messages HasMessages() Checks if there are any messages. public bool HasMessages() Returns bool True if there is at least one message"
  },
  "api/UltraForce.Library.Core.Asp.Sessions.UFSessionMiddleware.html": {
    "href": "api/UltraForce.Library.Core.Asp.Sessions.UFSessionMiddleware.html",
    "title": "Class UFSessionMiddleware | UltraForce.Library.Core.Asp",
    "keywords": "Class UFSessionMiddleware Namespace UltraForce.Library.Core.Asp.Sessions Assembly UltraForce.Library.Core.Asp.dll UFSessionMiddleware is UltraForce.Library.NetStandard.Storage.UFKeyedStorage implementation mapping to Session. Use Instance to access the singleton instance. To use UFSessionMiddleware, import UFWebExtensions in Startup.cs or Program.cs and register it at IApplicationBuilder as middleware: `builder.UseUFSession();` UseUFSession() will make a call to UseSession(). public class UFSessionMiddleware : UFKeyedStorage Inheritance object UFKeyedStorage UFSessionMiddleware Inherited Members UFKeyedStorage.GetString(string) UFKeyedStorage.GetByte(string, byte) UFKeyedStorage.GetByte(string) UFKeyedStorage.SetByte(string, byte) UFKeyedStorage.GetSByte(string, sbyte) UFKeyedStorage.GetSByte(string) UFKeyedStorage.SetSByte(string, sbyte) UFKeyedStorage.GetShort(string, short) UFKeyedStorage.GetShort(string) UFKeyedStorage.SetShort(string, short) UFKeyedStorage.GetUShort(string, ushort) UFKeyedStorage.GetUShort(string) UFKeyedStorage.SetUShort(string, ushort) UFKeyedStorage.GetInt(string) UFKeyedStorage.GetUInt(string, uint) UFKeyedStorage.GetUInt(string) UFKeyedStorage.SetUInt(string, uint) UFKeyedStorage.GetLong(string, long) UFKeyedStorage.GetLong(string) UFKeyedStorage.SetLong(string, long) UFKeyedStorage.GetULong(string, ulong) UFKeyedStorage.GetULong(string) UFKeyedStorage.SetULong(string, ulong) UFKeyedStorage.GetFloat(string, float) UFKeyedStorage.GetFloat(string) UFKeyedStorage.SetFloat(string, float) UFKeyedStorage.GetDouble(string, double) UFKeyedStorage.GetDouble(string) UFKeyedStorage.SetDouble(string, double) UFKeyedStorage.GetBool(string, bool) UFKeyedStorage.GetBool(string) UFKeyedStorage.SetBool(string, bool) UFKeyedStorage.GetChar(string, char) UFKeyedStorage.GetChar(string) UFKeyedStorage.SetChar(string, char) UFKeyedStorage.GetBytes(string, byte[]) UFKeyedStorage.GetBytes(string) UFKeyedStorage.SetBytes(string, byte[]) UFKeyedStorage.GetDateTime(string, DateTime) UFKeyedStorage.GetDateTime(string) UFKeyedStorage.SetDateTime(string, DateTime) UFKeyedStorage.GetGuid(string, Guid) UFKeyedStorage.GetGuid(string) UFKeyedStorage.SetGuid(string, Guid) UFKeyedStorage.GetStorableObject(string, IUFStorableObject) UFKeyedStorage.SetStorableObject(string, IUFStorableObject) UFKeyedStorage.GetObject(string, Type) UFKeyedStorage.GetObject<T>(string) UFKeyedStorage.GetObject(string, Type, Func<Type, object>) UFKeyedStorage.SetObject(string, object, Type) UFKeyedStorage.SetObject(string, object) UFKeyedStorage.SetObject<T>(string, object) UFKeyedStorage.SerializeObject(string, object) UFKeyedStorage.DeserializeObject(string, Type, Func<Type, object>) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFSessionMiddleware(RequestDelegate) Constructs an instance of the UFSession middleware. public UFSessionMiddleware(RequestDelegate aNext) Parameters aNext RequestDelegate Next middleware Properties Instance Reference to singleton instance. public static UFSessionMiddleware Instance { get; } Property Value UFSessionMiddleware Methods DeleteAll() public override void DeleteAll() DeleteKey(string) public override void DeleteKey(string aKey) Parameters aKey string GetInt(string, int) public override int GetInt(string aKey, int aDefault) Parameters aKey string aDefault int Returns int GetString(string, string) public override string GetString(string aKey, string aDefault) Parameters aKey string aDefault string Returns string HasKey(string) public override bool HasKey(string aKey) Parameters aKey string Returns bool Invoke(HttpContext) This method is called by the http rendering pipeline. public Task Invoke(HttpContext aContext) Parameters aContext HttpContext Current HttpContext Returns Task result from next middleware SetInt(string, int) public override void SetInt(string aKey, int aValue) Parameters aKey string aValue int SetString(string, string) public override void SetString(string aKey, string aValue) Parameters aKey string aValue string"
  },
  "api/UltraForce.Library.Core.Asp.Sessions.html": {
    "href": "api/UltraForce.Library.Core.Asp.Sessions.html",
    "title": "Namespace UltraForce.Library.Core.Asp.Sessions | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.Sessions Classes UFSessionKeyedStorage This class maps a UltraForce.Library.NetStandard.Storage.UFKeyedStorage to a ISession. It uses System.Text.Json to serialize and deserialize objects. Note that the factory function in DeserializeObject(string, Type?, Func<Type, object>) is not used, since this is not supported by the Json implementation. UFSessionMessages UFSessionMessages can be used to store messages in a session or retrieve them to be show them inside a view. To use this class, register this class as a scoped service. If there is no session because either the class fails to get a HttpContext or the ISession; messages will be not be stored and the get messages methods will return empty lists."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Buttons.UFBaseButtonTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Buttons.UFBaseButtonTagHelperBase.html",
    "title": "Class UFBaseButtonTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFBaseButtonTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Buttons Assembly UltraForce.Library.Core.Asp.dll Renders a button or link using a button styling. This class is the base class for all button tag helpers. When rendering a button the default type is `button`; use the Submit property to change it to submit. Renders: <{a|button|div} class=\"{GetButtonClasses()}\" {href} {disabled} {target}> {GetBeforeCaptionHtml()} <span class=\"{GetButtonCaptionClasses()}\">{children}</span> {GetAfterCaptionHtml()} </{a|button|div}> Part of the code is based on the AnchorTagHelper implemenation. public abstract class UFBaseButtonTagHelperBase : UFClickableTagHelperBase, ITagHelper, ITagHelperComponent Inheritance object TagHelper AnchorTagHelper UFClickableTagHelperBase UFBaseButtonTagHelperBase Implements ITagHelper ITagHelperComponent Derived UFButtonTagHelperBase UFTableButtonTagHelperBase<TTable, TRow, TCell> Inherited Members UFClickableTagHelperBase.Href UFClickableTagHelperBase.NewTab UFClickableTagHelperBase.Call UFClickableTagHelperBase.CallParameterSeparator UFClickableTagHelperBase.EndpointDataSource UFClickableTagHelperBase.ProcessHref(TagHelperOutput) AnchorTagHelper.Process(TagHelperContext, TagHelperOutput) AnchorTagHelper.Order AnchorTagHelper.Generator AnchorTagHelper.Action AnchorTagHelper.Controller AnchorTagHelper.Area AnchorTagHelper.Page AnchorTagHelper.PageHandler AnchorTagHelper.Protocol AnchorTagHelper.Host AnchorTagHelper.Fragment AnchorTagHelper.Route AnchorTagHelper.RouteValues AnchorTagHelper.ViewContext TagHelper.Init(TagHelperContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFBaseButtonTagHelperBase(EndpointDataSource, IHtmlGenerator, IUFModelExpressionRenderer) Renders a button or link using a button styling. This class is the base class for all button tag helpers. When rendering a button the default type is `button`; use the Submit property to change it to submit. Renders: <{a|button|div} class=\"{GetButtonClasses()}\" {href} {disabled} {target}> {GetBeforeCaptionHtml()} <span class=\"{GetButtonCaptionClasses()}\">{children}</span> {GetAfterCaptionHtml()} </{a|button|div}> Part of the code is based on the AnchorTagHelper implemenation. protected UFBaseButtonTagHelperBase(EndpointDataSource endpointDataSource, IHtmlGenerator htmlGenerator, IUFModelExpressionRenderer modelExpressionRenderer) Parameters endpointDataSource EndpointDataSource htmlGenerator IHtmlGenerator modelExpressionRenderer IUFModelExpressionRenderer Properties Clipboard When set, an onclick handler is added to copy the value to the clipboard. public string? Clipboard { get; set; } Property Value string Disabled If the button is an anchor, a div tag is used instead of a tag. With buttons the disabled attribute is set. [HtmlAttributeName(\"disabled\")] public bool Disabled { get; set; } Property Value bool For When set, use it to get a name for. The Name property is ignored. public ModelExpression? For { get; set; } Property Value ModelExpression ModelExpressionRenderer protected IUFModelExpressionRenderer ModelExpressionRenderer { get; } Property Value IUFModelExpressionRenderer Name When set, set a name attribute. This property is not used if For is set. public string? Name { get; set; } Property Value string OnClick Value to set for the onclick attribute of the button. This property is ignored if Clipboard has been set. [HtmlAttributeName(\"on-click\")] public string? OnClick { get; set; } Property Value string Static When true the button is rendered with a div element. [HtmlAttributeName(\"static\")] public bool Static { get; set; } Property Value bool Submit When true the button type is set to submit. This property is only of use if the button is placed inside a form element. [HtmlAttributeName(\"submit\")] public bool Submit { get; set; } Property Value bool Value When set, set a value attribute. public string? Value { get; set; } Property Value string Methods GetAfterCaptionHtml(TagHelperContext, TagHelperOutput, bool, bool) Gets the html after the caption. protected abstract string GetAfterCaptionHtml(TagHelperContext context, TagHelperOutput output, bool hasCaption, bool isStatic) Parameters context TagHelperContext output TagHelperOutput hasCaption bool True if the tag has any content isStatic bool True if the tag is rendered as a div element Returns string GetBeforeCaptionHtml(TagHelperContext, TagHelperOutput, bool, bool) Gets the html before the caption. protected abstract string GetBeforeCaptionHtml(TagHelperContext context, TagHelperOutput output, bool hasCaption, bool isStatic) Parameters context TagHelperContext output TagHelperOutput hasCaption bool True if the tag has any content isStatic bool True if the tag is rendered as a div element Returns string GetButtonCaptionClasses(TagHelperContext, TagHelperOutput, bool) Gets the css classes to use for the caption span. protected abstract string GetButtonCaptionClasses(TagHelperContext context, TagHelperOutput output, bool isStatic) Parameters context TagHelperContext output TagHelperOutput isStatic bool True if the tag is rendered as a div element Returns string GetButtonClasses(TagHelperContext, TagHelperOutput, bool, bool) Gets the css classes to use for the button. protected abstract string GetButtonClasses(TagHelperContext context, TagHelperOutput output, bool hasCaption, bool isStatic) Parameters context TagHelperContext output TagHelperOutput hasCaption bool True if the tag has any content isStatic bool True if the tag is rendered as a div element Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Buttons.UFButtonTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Buttons.UFButtonTagHelperBase.html",
    "title": "Class UFButtonTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFButtonTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Buttons Assembly UltraForce.Library.Core.Asp.dll Base class for buttons. Renders: <{a|button|div} class=\"{GetButtonClasses()}\" {href} {disabled} {target}> {GetBeforeCaptionHtml()} <span class=\"{GetButtonCaptionClasses()}\">{children}</span> {GetAfterCaptionHtml()} </{a|button|div}> public abstract class UFButtonTagHelperBase : UFBaseButtonTagHelperBase, ITagHelper, ITagHelperComponent Inheritance object TagHelper AnchorTagHelper UFClickableTagHelperBase UFBaseButtonTagHelperBase UFButtonTagHelperBase Implements ITagHelper ITagHelperComponent Inherited Members UFBaseButtonTagHelperBase.Disabled UFBaseButtonTagHelperBase.Static UFBaseButtonTagHelperBase.Submit UFBaseButtonTagHelperBase.OnClick UFBaseButtonTagHelperBase.Clipboard UFBaseButtonTagHelperBase.For UFBaseButtonTagHelperBase.Name UFBaseButtonTagHelperBase.Value UFBaseButtonTagHelperBase.ProcessAsync(TagHelperContext, TagHelperOutput) UFBaseButtonTagHelperBase.ModelExpressionRenderer UFClickableTagHelperBase.Href UFClickableTagHelperBase.NewTab UFClickableTagHelperBase.Call UFClickableTagHelperBase.CallParameterSeparator UFClickableTagHelperBase.EndpointDataSource UFClickableTagHelperBase.ProcessHref(TagHelperOutput) AnchorTagHelper.Process(TagHelperContext, TagHelperOutput) AnchorTagHelper.Order AnchorTagHelper.Generator AnchorTagHelper.Action AnchorTagHelper.Controller AnchorTagHelper.Area AnchorTagHelper.Page AnchorTagHelper.PageHandler AnchorTagHelper.Protocol AnchorTagHelper.Host AnchorTagHelper.Fragment AnchorTagHelper.Route AnchorTagHelper.RouteValues AnchorTagHelper.ViewContext TagHelper.Init(TagHelperContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFButtonTagHelperBase(EndpointDataSource, IHtmlGenerator, IUFModelExpressionRenderer) Base class for buttons. Renders: <{a|button|div} class=\"{GetButtonClasses()}\" {href} {disabled} {target}> {GetBeforeCaptionHtml()} <span class=\"{GetButtonCaptionClasses()}\">{children}</span> {GetAfterCaptionHtml()} </{a|button|div}> protected UFButtonTagHelperBase(EndpointDataSource endpointDataSource, IHtmlGenerator htmlGenerator, IUFModelExpressionRenderer modelExpressionRenderer) Parameters endpointDataSource EndpointDataSource htmlGenerator IHtmlGenerator modelExpressionRenderer IUFModelExpressionRenderer Methods GetAfterCaptionHtml(TagHelperContext, TagHelperOutput, bool, bool) Gets the html after the caption. protected override sealed string GetAfterCaptionHtml(TagHelperContext context, TagHelperOutput output, bool hasCaption, bool isStatic) Parameters context TagHelperContext output TagHelperOutput hasCaption bool True if the tag has any content isStatic bool True if the tag is rendered as a div element Returns string GetAfterCaptionHtml(bool, bool) The default implementation returns empty string. protected virtual string GetAfterCaptionHtml(bool hasCaption, bool isStatic) Parameters hasCaption bool True if there is content for the caption isStatic bool True if the button will be rendered with a div tag Returns string string containing html formatting GetBeforeCaptionHtml(TagHelperContext, TagHelperOutput, bool, bool) Gets the html before the caption. protected override sealed string GetBeforeCaptionHtml(TagHelperContext context, TagHelperOutput output, bool hasCaption, bool isStatic) Parameters context TagHelperContext output TagHelperOutput hasCaption bool True if the tag has any content isStatic bool True if the tag is rendered as a div element Returns string GetBeforeCaptionHtml(bool, bool) The default implementation returns empty string. protected virtual string GetBeforeCaptionHtml(bool hasCaption, bool isStatic) Parameters hasCaption bool True if there is content for the caption isStatic bool True if the button will be rendered with a div tag Returns string string containing html formatting GetButtonCaptionClasses(TagHelperContext, TagHelperOutput, bool) Gets the css classes to use for the caption span. protected override sealed string GetButtonCaptionClasses(TagHelperContext context, TagHelperOutput output, bool isStatic) Parameters context TagHelperContext output TagHelperOutput isStatic bool True if the tag is rendered as a div element Returns string GetButtonCaptionClasses(bool) The default implementation returns empty string. protected virtual string GetButtonCaptionClasses(bool isStatic) Parameters isStatic bool True if the button will be rendered with a div tag Returns string css classes GetButtonClasses(TagHelperContext, TagHelperOutput, bool, bool) Gets the css classes to use for the button. protected override sealed string GetButtonClasses(TagHelperContext context, TagHelperOutput output, bool hasCaption, bool isStatic) Parameters context TagHelperContext output TagHelperOutput hasCaption bool True if the tag has any content isStatic bool True if the tag is rendered as a div element Returns string GetButtonClasses(bool, bool) The default implementation returns empty string. protected virtual string GetButtonClasses(bool hasCaption, bool isStatic) Parameters hasCaption bool True if there is content for the caption isStatic bool True if the button will be rendered with a div tag Returns string css classes"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Buttons.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Buttons.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Buttons | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Buttons Classes UFBaseButtonTagHelperBase Renders a button or link using a button styling. This class is the base class for all button tag helpers. When rendering a button the default type is `button`; use the Submit property to change it to submit. Renders: <{a|button|div} class=\"{GetButtonClasses()}\" {href} {disabled} {target}> {GetBeforeCaptionHtml()} <span class=\"{GetButtonCaptionClasses()}\">{children}</span> {GetAfterCaptionHtml()} </{a|button|div}> Part of the code is based on the AnchorTagHelper implemenation. UFButtonTagHelperBase Base class for buttons. Renders: <{a|button|div} class=\"{GetButtonClasses()}\" {href} {disabled} {target}> {GetBeforeCaptionHtml()} <span class=\"{GetButtonCaptionClasses()}\">{children}</span> {GetAfterCaptionHtml()} </{a|button|div}>"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Containers.UFTabTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Containers.UFTabTagHelperBase.html",
    "title": "Class UFTabTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTabTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Containers Assembly UltraForce.Library.Core.Asp.dll This tag helper is used to render a tab container. It expects to be used as a child of a UFTabsTagHelperBase. The class renders the following html: <input type=\"radio\" name=\"..\" id=\"{internal}\" class=\"{GetRadioClasses()}\" [checked] /> <label for=\"{internal}\" class=\"{GetLabelClasses()}\">{Caption}</label> <div class=\"{GetContentWrapperClasses()}\"> {children} </div> The css classes should use '+' with the selectors. public class UFTabTagHelperBase : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTabTagHelperBase Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Caption Caption of the tag. Can be html formatted. [HtmlAttributeName(\"caption\")] public string Caption { get; set; } Property Value string Selected Initial state of the tab. If true, the tab will be selected. [HtmlAttributeName(\"selected\")] public bool Selected { get; set; } Property Value bool Methods GetContentWrapperClasses() The default implementation returns an empty string. protected virtual string GetContentWrapperClasses() Returns string GetLabelClasses() The default implementation returns an empty string. protected virtual string GetLabelClasses() Returns string GetRadioClasses() The default implementation returns an empty string. protected virtual string GetRadioClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Containers.UFTabsTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Containers.UFTabsTagHelperBase.html",
    "title": "Class UFTabsTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTabsTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Containers Assembly UltraForce.Library.Core.Asp.dll This tag helper is used to render a tab container. It expects its children to be instances of UFTabTagHelperBase. The class will render: <div class=\"{GetTabsClasses}\"> {children} </div> public abstract class UFTabsTagHelperBase : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTabsTagHelperBase Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields TabsRadioName The key that UFTabTagHelperBase can use to get the name of the radio button from the Items. public const string TabsRadioName = \"uf_tabs_radio_name\" Field Value string Methods GetTabsClasses(int) The default implementation returns an empty string. protected virtual string GetTabsClasses(int count) Parameters count int Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Containers.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Containers.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Containers | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Containers Classes UFTabTagHelperBase This tag helper is used to render a tab container. It expects to be used as a child of a UFTabsTagHelperBase. The class renders the following html: <input type=\"radio\" name=\"..\" id=\"{internal}\" class=\"{GetRadioClasses()}\" [checked] /> <label for=\"{internal}\" class=\"{GetLabelClasses()}\">{Caption}</label> <div class=\"{GetContentWrapperClasses()}\"> {children} </div> The css classes should use '+' with the selectors. UFTabsTagHelperBase This tag helper is used to render a tab container. It expects its children to be instances of UFTabTagHelperBase. The class will render: <div class=\"{GetTabsClasses}\"> {children} </div>"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Data.UFDataItemTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Data.UFDataItemTagHelperBase.html",
    "title": "Class UFDataItemTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataItemTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Data Assembly UltraForce.Library.Core.Asp.dll Base class for rendering a data definition. How it renders depends on the presence of For and Name properties. If For is set and the tag has no content, both the name and value or obtained from the object referenced by For. If the tag has content and For is set, only the name is obtained from the object and the content is used for the value. If For is not set, Name is used for the name and the value from the content of the tag. It renders the following: <dt class=\"{GetDataNameClasses()}\">{For name|For name|Name}</dt> <dd class=\"{GetDataValueClasses()}\">{For value|content|content}</dd> public abstract class UFDataItemTagHelperBase : UFTagHelperWithModelExpressionRenderer, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer UFDataItemTagHelperBase Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithModelExpressionRenderer.ModelExpressionRenderer UFTagHelperWithViewContext.ViewContext TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFDataItemTagHelperBase(IUFModelExpressionRenderer) Base class for rendering a data definition. How it renders depends on the presence of For and Name properties. If For is set and the tag has no content, both the name and value or obtained from the object referenced by For. If the tag has content and For is set, only the name is obtained from the object and the content is used for the value. If For is not set, Name is used for the name and the value from the content of the tag. It renders the following: <dt class=\"{GetDataNameClasses()}\">{For name|For name|Name}</dt> <dd class=\"{GetDataValueClasses()}\">{For value|content|content}</dd> protected UFDataItemTagHelperBase(IUFModelExpressionRenderer modelExpressionRenderer) Parameters modelExpressionRenderer IUFModelExpressionRenderer Properties For When no content is set, use the (display) name of the model property. public ModelExpression? For { get; set; } Property Value ModelExpression Name When set and For is null, the name content is set to this value and the content of this tag is used for the value part. If For is not null, this value is ignored. public string Name { get; set; } Property Value string Methods GetDataNameClasses() The default implementation returns an empty string. protected virtual string GetDataNameClasses() Returns string GetDataValueClasses() The default implementation returns an empty string. protected virtual string GetDataValueClasses() Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Data.UFDataListTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Data.UFDataListTagHelperBase.html",
    "title": "Class UFDataListTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataListTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Data Assembly UltraForce.Library.Core.Asp.dll Base class for rendering a data list. It just sets the tag to \"dl\". public abstract class UFDataListTagHelperBase : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFDataListTagHelperBase Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDataListClasses() The default implementation returns an empty string. protected virtual string GetDataListClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Data.UFDataNameTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Data.UFDataNameTagHelperBase.html",
    "title": "Class UFDataNameTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataNameTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Data Assembly UltraForce.Library.Core.Asp.dll Base class for rendering a data definition. If For is set, the content is set to the name of the referenced element. Else the children of this tag are rendered. It renders the following: <dt class=\"{GetDataNameClasses()}\">{content|For name}</dt> public abstract class UFDataNameTagHelperBase : UFTagHelperWithModelExpressionRenderer, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer UFDataNameTagHelperBase Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithModelExpressionRenderer.ModelExpressionRenderer UFTagHelperWithViewContext.ViewContext TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFDataNameTagHelperBase(IUFModelExpressionRenderer) Base class for rendering a data definition. If For is set, the content is set to the name of the referenced element. Else the children of this tag are rendered. It renders the following: <dt class=\"{GetDataNameClasses()}\">{content|For name}</dt> protected UFDataNameTagHelperBase(IUFModelExpressionRenderer modelExpressionRenderer) Parameters modelExpressionRenderer IUFModelExpressionRenderer Properties For When no content is set, use the (display) name of the model property. public ModelExpression? For { get; set; } Property Value ModelExpression Methods GetDataNameClasses() The default returns an empty string. protected virtual string GetDataNameClasses() Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Data.UFDataValueTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Data.UFDataValueTagHelperBase.html",
    "title": "Class UFDataValueTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataValueTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Data Assembly UltraForce.Library.Core.Asp.dll Base class for rendering a data value. If For is set, the content is set to the value of the referenced element. Else the children of this tag are rendered. It renders the following: <dd class=\"{GetDataNameClasses()}\">{content|For value}</dd> public abstract class UFDataValueTagHelperBase : UFTagHelperWithModelExpressionRenderer, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer UFDataValueTagHelperBase Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithModelExpressionRenderer.ModelExpressionRenderer UFTagHelperWithViewContext.ViewContext TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFDataValueTagHelperBase(IUFModelExpressionRenderer) Base class for rendering a data value. If For is set, the content is set to the value of the referenced element. Else the children of this tag are rendered. It renders the following: <dd class=\"{GetDataNameClasses()}\">{content|For value}</dd> protected UFDataValueTagHelperBase(IUFModelExpressionRenderer modelExpressionRenderer) Parameters modelExpressionRenderer IUFModelExpressionRenderer Properties For When no content is set, use the (display) name of the model property. public ModelExpression? For { get; set; } Property Value ModelExpression Methods GetDataValueClasses() The default implementation returns an empty string. protected virtual string GetDataValueClasses() Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Data.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Data.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Data | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Data Classes UFDataItemTagHelperBase Base class for rendering a data definition. How it renders depends on the presence of For and Name properties. If For is set and the tag has no content, both the name and value or obtained from the object referenced by For. If the tag has content and For is set, only the name is obtained from the object and the content is used for the value. If For is not set, Name is used for the name and the value from the content of the tag. It renders the following: <dt class=\"{GetDataNameClasses()}\">{For name|For name|Name}</dt> <dd class=\"{GetDataValueClasses()}\">{For value|content|content}</dd> UFDataListTagHelperBase Base class for rendering a data list. It just sets the tag to \"dl\". UFDataNameTagHelperBase Base class for rendering a data definition. If For is set, the content is set to the name of the referenced element. Else the children of this tag are rendered. It renders the following: <dt class=\"{GetDataNameClasses()}\">{content|For name}</dt> UFDataValueTagHelperBase Base class for rendering a data value. If For is set, the content is set to the value of the referenced element. Else the children of this tag are rendered. It renders the following: <dd class=\"{GetDataNameClasses()}\">{content|For value}</dd>"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Forms.UFInputTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Forms.UFInputTagHelperBase.html",
    "title": "Class UFInputTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFInputTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Forms Assembly UltraForce.Library.Core.Asp.dll Renders either a text input, a checkbox or a radio button. If no id is set and NoWrap is true the class will generate an id so the label can reference the input element. If there are no field errors, the field error block is not rendered. Since the pseudo selectors ::after and ::before can not be used no input and textarea elements, it is possible to override GetTextInputPreHtml(string) and GetTextInputPostHtml(string) to add extra html before and after the input element. To set a label, there are three options: Set the Label property/attribute Add one or more child elements/texts to the tag (they will be moved to the label) Set the For property Renders text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextInputLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextInputLabelSpanClasses(type)}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetTextInputLabelDescriptionClasses(type)}\">{description}</span> </label> {GetTextInputPreHtml()} <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> {GetTextInputPreHtml()} <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders text input without wrapping: <input class=\"{GetTextInputClasses(type) .../> Renders multiline text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextInputLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextInputLabelSpanClasses(type)}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetTextInputLabelDescriptionClasses(type)}\">{description}</span> </label> {GetTextInputPreHtml()} <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders multiline text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> {GetTextInputPreHtml(type)} <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders multiline text input without wrapping: <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> Renders radio input with wrapping and a label: <div class=\"{GetRadioWrapperClasses()}\"> <label class=\"{GetRadioLabelClasses()}\"> {GetRadioExtraHtml()} <input type=\"radio\" class=\"{GetRadioInputClasses()}\" .../> <span class=\"{GetRadioLabelSpanClasses()}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input with wrapping but no label: <div class=\"{GetRadioWrapperClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" .../> {GetRadioExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input without wrapping but with a label: <label class=\"{GetRadioLabelClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" .../> {GetRadioExtraHtml()} <span class=\"{GetRadiiLabelSpanClasses()}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> Renders radio input without wrapping and without a label: <input type=\"radio\" class=\"{GetRadioInputClasses()}\" .../> {GetRadioExtraHtml()} Renders checkbox input with wrapping and a label: <div class=\"{GetCheckboxWrapperClasses()}\"> <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" .../> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input with wrapping but no label: <div class=\"{GetCheckboxWrapperClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" .../> {GetCheckboxExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input without wrapping but with a label: <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} ... /> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> Renders checkbox input without wrapping and without a label: <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} public abstract class UFInputTagHelperBase : InputTagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper InputTagHelper UFInputTagHelperBase Implements ITagHelper ITagHelperComponent Inherited Members InputTagHelper.Process(TagHelperContext, TagHelperOutput) InputTagHelper.GetInputType(ModelExplorer, out string) InputTagHelper.Order InputTagHelper.Generator InputTagHelper.ViewContext InputTagHelper.For InputTagHelper.Format InputTagHelper.InputTypeName InputTagHelper.FormName InputTagHelper.Name InputTagHelper.Value TagHelper.Init(TagHelperContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFInputTagHelperBase(IHtmlGenerator) Renders either a text input, a checkbox or a radio button. If no id is set and NoWrap is true the class will generate an id so the label can reference the input element. If there are no field errors, the field error block is not rendered. Since the pseudo selectors ::after and ::before can not be used no input and textarea elements, it is possible to override GetTextInputPreHtml(string) and GetTextInputPostHtml(string) to add extra html before and after the input element. To set a label, there are three options: Set the Label property/attribute Add one or more child elements/texts to the tag (they will be moved to the label) Set the For property Renders text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextInputLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextInputLabelSpanClasses(type)}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetTextInputLabelDescriptionClasses(type)}\">{description}</span> </label> {GetTextInputPreHtml()} <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> {GetTextInputPreHtml()} <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders text input without wrapping: <input class=\"{GetTextInputClasses(type) .../> Renders multiline text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextInputLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextInputLabelSpanClasses(type)}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetTextInputLabelDescriptionClasses(type)}\">{description}</span> </label> {GetTextInputPreHtml()} <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders multiline text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> {GetTextInputPreHtml(type)} <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders multiline text input without wrapping: <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> Renders radio input with wrapping and a label: <div class=\"{GetRadioWrapperClasses()}\"> <label class=\"{GetRadioLabelClasses()}\"> {GetRadioExtraHtml()} <input type=\"radio\" class=\"{GetRadioInputClasses()}\" .../> <span class=\"{GetRadioLabelSpanClasses()}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input with wrapping but no label: <div class=\"{GetRadioWrapperClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" .../> {GetRadioExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input without wrapping but with a label: <label class=\"{GetRadioLabelClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" .../> {GetRadioExtraHtml()} <span class=\"{GetRadiiLabelSpanClasses()}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> Renders radio input without wrapping and without a label: <input type=\"radio\" class=\"{GetRadioInputClasses()}\" .../> {GetRadioExtraHtml()} Renders checkbox input with wrapping and a label: <div class=\"{GetCheckboxWrapperClasses()}\"> <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" .../> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input with wrapping but no label: <div class=\"{GetCheckboxWrapperClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" .../> {GetCheckboxExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input without wrapping but with a label: <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} ... /> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> Renders checkbox input without wrapping and without a label: <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} protected UFInputTagHelperBase(IHtmlGenerator generator) Parameters generator IHtmlGenerator Properties Description Additional text that is shown below the label. It is only used if NoWrap is not true. [HtmlAttributeName(\"description\")] public string Description { get; set; } Property Value string Label When set, use this value for label instead of getting from the For property. When NoWrap is false, the property is only used with checkbox and radio elements. For other input elements the value is ignored. [HtmlAttributeName(\"label\")] public string Label { get; set; } Property Value string Multiline When true show a multiline text input (textarea). [HtmlAttributeName(\"multiline\")] public bool Multiline { get; set; } Property Value bool NoLabel When true do not render a label element. [HtmlAttributeName(\"no-label\")] public bool NoLabel { get; set; } Property Value bool NoWrap When true, do not the wrap input element in a div. [HtmlAttributeName(\"no-wrap\")] public bool NoWrap { get; set; } Property Value bool Methods GetCheckboxExtraHtml() Returns the html to use for the checkbox extra content. protected virtual string GetCheckboxExtraHtml() Returns string GetCheckboxInputClasses() Returns the classes to use for the checkbox input element. protected virtual string GetCheckboxInputClasses() Returns string GetCheckboxLabelClasses() Returns the classes to use for the checkbox label element. protected virtual string GetCheckboxLabelClasses() Returns string GetCheckboxLabelDescriptionClasses() Returns the classes to use for the description span element inside the checkbox label. protected virtual string GetCheckboxLabelDescriptionClasses() Returns string GetCheckboxLabelSpanClasses() Returns the classes to use for the span element inside the checkbox label. protected virtual string GetCheckboxLabelSpanClasses() Returns string GetCheckboxWrapperClasses() Returns the classes to use for the checkbox wrapper div element. protected virtual string GetCheckboxWrapperClasses() Returns string GetFieldErrorsClasses() Returns the classes to use for the field errors div element. protected virtual string GetFieldErrorsClasses() Returns string GetFieldErrorsHtml(ModelStateDictionary, string) Returns the html to use for the field errors. protected virtual string GetFieldErrorsHtml(ModelStateDictionary states, string name) Parameters states ModelStateDictionary name string Returns string GetLabelHtmlAsync(TagHelperContext, TagHelperOutput) Returns the label html. The default implementation checks if Label has a value, if it does return that value. Else check if the tag has any children and return that content. If there are no children and Label is empty, try to determine the value from the For property. protected virtual Task<string> GetLabelHtmlAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext output TagHelperOutput Returns Task<string> GetRadioExtraHtml() Returns the html to use for the radio extra content. protected virtual string GetRadioExtraHtml() Returns string GetRadioInputClasses() Returns the classes to use for the radio input element. protected virtual string GetRadioInputClasses() Returns string GetRadioLabelClasses() Returns the classes to use for the radio label element. protected virtual string GetRadioLabelClasses() Returns string GetRadioLabelDescriptionClasses() Returns the classes to use for the description span element inside the radio label. protected virtual string GetRadioLabelDescriptionClasses() Returns string GetRadioLabelSpanClasses() Returns the classes to use for the span element inside the radio label. protected virtual string GetRadioLabelSpanClasses() Returns string GetRadioWrapperClasses() Returns the classes to use for the radio wrapper div element. protected virtual string GetRadioWrapperClasses() Returns string GetTextInputClasses(string) Returns the classes to use for the input element. protected virtual string GetTextInputClasses(string type) Parameters type string Returns string GetTextInputLabelClasses(string) Returns the classes to use for the label element. protected virtual string GetTextInputLabelClasses(string type) Parameters type string Returns string GetTextInputLabelDescriptionClasses(string) Returns the classes to use for the description span element inside the label. protected virtual string GetTextInputLabelDescriptionClasses(string type) Parameters type string Returns string GetTextInputLabelSpanClasses(string) Returns the classes to use for the span element inside the label. protected virtual string GetTextInputLabelSpanClasses(string type) Parameters type string Returns string GetTextInputPostHtml(string) Gets html code inserted after the input element. protected virtual string GetTextInputPostHtml(string type) Parameters type string Returns string GetTextInputPreHtml(string) Gets html code inserted before the input element. protected virtual string GetTextInputPreHtml(string type) Parameters type string Returns string GetTextInputWrapperClasses(string) Returns the classes to use for the wrapper div element. protected virtual string GetTextInputWrapperClasses(string type) Parameters type string Returns string GetValidationFeedbackContainerHtml(string, string) Returns the classes to use for the validation feedback container. protected virtual string GetValidationFeedbackContainerHtml(string id, string name) Parameters id string id of element or empty string if no id is used name string name of form field Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Forms.UFSelectTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Forms.UFSelectTagHelperBase.html",
    "title": "Class UFSelectTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFSelectTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Forms Assembly UltraForce.Library.Core.Asp.dll Base class to help with rendering a select element. If not id is set and NoWrap is false, the code will generate an id so the label can reference the select element. If there are no field errors, the field error block is not rendered. Renders with wrapping: <div class=\"{GetInputWrapperClasses()}\"> <label class=\"{GetInputLabelClasses()}\" for=\"{id}\">{label}</label> <select class=\"{GetSelectClasses() id={} ...\" > {children} </select> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders without wrapping: <select class=\"{GetSelectClasses()}\" > {children} </select> public abstract class UFSelectTagHelperBase : SelectTagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper SelectTagHelper UFSelectTagHelperBase Implements ITagHelper ITagHelperComponent Inherited Members SelectTagHelper.Init(TagHelperContext) SelectTagHelper.Order SelectTagHelper.Generator SelectTagHelper.ViewContext SelectTagHelper.For SelectTagHelper.Items SelectTagHelper.Name TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFSelectTagHelperBase(IHtmlGenerator) Base class to help with rendering a select element. If not id is set and NoWrap is false, the code will generate an id so the label can reference the select element. If there are no field errors, the field error block is not rendered. Renders with wrapping: <div class=\"{GetInputWrapperClasses()}\"> <label class=\"{GetInputLabelClasses()}\" for=\"{id}\">{label}</label> <select class=\"{GetSelectClasses() id={} ...\" > {children} </select> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders without wrapping: <select class=\"{GetSelectClasses()}\" > {children} </select> protected UFSelectTagHelperBase(IHtmlGenerator generator) Parameters generator IHtmlGenerator Properties Description Additional text that is shown below the label. It is only used if NoWrap is not true. [HtmlAttributeName(\"description\")] public string Description { get; set; } Property Value string Label When set, use this value for label instead of getting from the For property. When NoWrap is false, the property is only used with checkbox and radio elements. For other input elements the value is ignored. [HtmlAttributeName(\"label\")] public string Label { get; set; } Property Value string NoLabel When true do not render a label element. [HtmlAttributeName(\"no-label\")] public bool NoLabel { get; set; } Property Value bool NoWrap When true, do not the wrap input element in a div. [HtmlAttributeName(\"no-wrap\")] public bool NoWrap { get; set; } Property Value bool Methods GetFieldErrorsClasses() Returns the css classes for the field errors block. protected virtual string GetFieldErrorsClasses() Returns string GetFieldErrorsHtml(ModelStateDictionary, string) Returns the html for the field errors block. protected virtual string GetFieldErrorsHtml(ModelStateDictionary states, string name) Parameters states ModelStateDictionary name string Returns string GetSelectClasses() Returns css classes for the select element. protected virtual string GetSelectClasses() Returns string GetTextLabelClasses(string) Returns css classes for the label element. protected virtual string GetTextLabelClasses(string type) Parameters type string Returns string GetTextWrapperClasses(string) Returns css classes for the wrapper element. protected virtual string GetTextWrapperClasses(string type) Parameters type string Returns string GetValidationFeedbackContainerHtml(string, string) Returns the html for the validation feedback container. protected virtual string GetValidationFeedbackContainerHtml(string id, string name) Parameters id string id of element or empty string if no id is set name string name of field Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Remarks Does nothing if For is null."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Forms.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Forms.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Forms | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Forms Classes UFInputTagHelperBase Renders either a text input, a checkbox or a radio button. If no id is set and NoWrap is true the class will generate an id so the label can reference the input element. If there are no field errors, the field error block is not rendered. Since the pseudo selectors ::after and ::before can not be used no input and textarea elements, it is possible to override GetTextInputPreHtml(string) and GetTextInputPostHtml(string) to add extra html before and after the input element. To set a label, there are three options: Set the Label property/attribute Add one or more child elements/texts to the tag (they will be moved to the label) Set the For property Renders text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextInputLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextInputLabelSpanClasses(type)}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetTextInputLabelDescriptionClasses(type)}\">{description}</span> </label> {GetTextInputPreHtml()} <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> {GetTextInputPreHtml()} <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders text input without wrapping: <input class=\"{GetTextInputClasses(type) .../> Renders multiline text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextInputLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextInputLabelSpanClasses(type)}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetTextInputLabelDescriptionClasses(type)}\">{description}</span> </label> {GetTextInputPreHtml()} <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders multiline text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> {GetTextInputPreHtml(type)} <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders multiline text input without wrapping: <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> Renders radio input with wrapping and a label: <div class=\"{GetRadioWrapperClasses()}\"> <label class=\"{GetRadioLabelClasses()}\"> {GetRadioExtraHtml()} <input type=\"radio\" class=\"{GetRadioInputClasses()}\" .../> <span class=\"{GetRadioLabelSpanClasses()}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input with wrapping but no label: <div class=\"{GetRadioWrapperClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" .../> {GetRadioExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input without wrapping but with a label: <label class=\"{GetRadioLabelClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" .../> {GetRadioExtraHtml()} <span class=\"{GetRadiiLabelSpanClasses()}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> Renders radio input without wrapping and without a label: <input type=\"radio\" class=\"{GetRadioInputClasses()}\" .../> {GetRadioExtraHtml()} Renders checkbox input with wrapping and a label: <div class=\"{GetCheckboxWrapperClasses()}\"> <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" .../> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input with wrapping but no label: <div class=\"{GetCheckboxWrapperClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" .../> {GetCheckboxExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input without wrapping but with a label: <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} ... /> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}\"> {GetLabelAsync(context,output)} </span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> Renders checkbox input without wrapping and without a label: <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} UFSelectTagHelperBase Base class to help with rendering a select element. If not id is set and NoWrap is false, the code will generate an id so the label can reference the select element. If there are no field errors, the field error block is not rendered. Renders with wrapping: <div class=\"{GetInputWrapperClasses()}\"> <label class=\"{GetInputLabelClasses()}\" for=\"{id}\">{label}</label> <select class=\"{GetSelectClasses() id={} ...\" > {children} </select> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders without wrapping: <select class=\"{GetSelectClasses()}\" > {children} </select>"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.UFCellTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.UFCellTagHelperBase.html",
    "title": "Class UFCellTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFCellTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Table Assembly UltraForce.Library.Core.Asp.dll Creates a table cell. The cell can be self-closing or can contain content with a separate closing tag. The generated td or th element always uses an opening and closing tag. Rendered html for header: <th class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]>{children}</th> Rendered html for data: <td class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]>{children}</td> Rendered html for buttons (a div is used so that flex or grid styling can be used): <td class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]> <div class=\"{GetTableHeaderButtonClasses()} > {children} </div> </td> public abstract class UFCellTagHelperBase : UFTagHelperWithModelExpressionRenderer, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer UFCellTagHelperBase Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithModelExpressionRenderer.ModelExpressionRenderer UFTagHelperWithViewContext.ViewContext TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFCellTagHelperBase(IUFModelExpressionRenderer) Creates a table cell. The cell can be self-closing or can contain content with a separate closing tag. The generated td or th element always uses an opening and closing tag. Rendered html for header: <th class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]>{children}</th> Rendered html for data: <td class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]>{children}</td> Rendered html for buttons (a div is used so that flex or grid styling can be used): <td class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]> <div class=\"{GetTableHeaderButtonClasses()} > {children} </div> </td> protected UFCellTagHelperBase(IUFModelExpressionRenderer aModelExpressionRenderer) Parameters aModelExpressionRenderer IUFModelExpressionRenderer Properties For An expression to be evaluated against the current model. When set, the method will use the type to adjust the sort type (if SortType is set to Auto). Date values are formatted using mysql format (so there is no confusion on month and day positions): \"yyyy-mm-dd hh:mm:ss\" If the type of this value is a `bool`, an attribute `data-sort-value` is set with either `0` or `1`. For data cells, the value is used as content for the cell. For header cells, the name is used as content for the cell. [HtmlAttributeName(\"for\")] public ModelExpression? For { get; set; } Property Value ModelExpression NoCaching When true the cell contents will not be cached with sorting. This is useful when the cell contents will be changed while using a sorted table. [HtmlAttributeName(\"no-caching\")] public bool NoCaching { get; set; } Property Value bool NoFilter When true data in the cell can be found via the filter. When false an attribute with the name \"data-no-filter\" is added to the cell tag. This property is only processed when Type is Data. [HtmlAttributeName(\"no-filter\")] public bool NoFilter { get; set; } Property Value bool SortType Type of sorting (only of use with Header). If type is set to Auto (default) the method will try to determine the type from For. An attribute with the name \"data-sort-type\" will be added to the cell. This attribute contains one of the following values: - \"text\" - \"number\" - \"date\" [HtmlAttributeName(\"sort-type\")] public UFTableSortTypeEnum SortType { get; set; } Property Value UFTableSortTypeEnum Type Type of cell. [HtmlAttributeName(\"type\")] public UFTableCellTypeEnum Type { get; set; } Property Value UFTableCellTypeEnum Width When non empty, set this value as width value. This can either be a css class or a unit definition. The method IsCssValue(string) is used to determine which. [HtmlAttributeName(\"width\")] public string Width { get; set; } Property Value string Methods GetTableCellClasses(UFTableCellTypeEnum, UFTableTagHelperBase, UFTableRowTagHelperBase) Returns the css classes for the cell. protected virtual string GetTableCellClasses(UFTableCellTypeEnum aType, UFTableTagHelperBase aTable, UFTableRowTagHelperBase aTableRow) Parameters aType UFTableCellTypeEnum aTable UFTableTagHelperBase aTableRow UFTableRowTagHelperBase Returns string GetTableHeaderButtonClasses(UFTableTagHelperBase, UFTableRowTagHelperBase) Returns the css classes for the buttons in the header. protected virtual string GetTableHeaderButtonClasses(UFTableTagHelperBase aTable, UFTableRowTagHelperBase aTableRow) Parameters aTable UFTableTagHelperBase aTableRow UFTableRowTagHelperBase Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext aContext, TagHelperOutput anOutput) Parameters aContext TagHelperContext anOutput TagHelperOutput Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.UFTableButtonTagHelperBase-3.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.UFTableButtonTagHelperBase-3.html",
    "title": "Class UFTableButtonTagHelperBase<TTable, TRow, TCell> | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTableButtonTagHelperBase<TTable, TRow, TCell> Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Table Assembly UltraForce.Library.Core.Asp.dll This class is the base class for all table button tag helpers. public abstract class UFTableButtonTagHelperBase<TTable, TRow, TCell> : UFBaseButtonTagHelperBase, ITagHelper, ITagHelperComponent where TTable : UFTableTagHelperBase where TRow : class where TCell : class Type Parameters TTable Subclass of UFTableTagHelperBase. TRow Any class (normally a subclass of UFTableRowTagHelperBase<TTable>). TCell Any class (normally a subclass of UFTableCellTagHelperBase<TTable, TTableRow>). Inheritance object TagHelper AnchorTagHelper UFClickableTagHelperBase UFBaseButtonTagHelperBase UFTableButtonTagHelperBase<TTable, TRow, TCell> Implements ITagHelper ITagHelperComponent Inherited Members UFBaseButtonTagHelperBase.Disabled UFBaseButtonTagHelperBase.Static UFBaseButtonTagHelperBase.Submit UFBaseButtonTagHelperBase.OnClick UFBaseButtonTagHelperBase.Clipboard UFBaseButtonTagHelperBase.For UFBaseButtonTagHelperBase.Name UFBaseButtonTagHelperBase.Value UFBaseButtonTagHelperBase.ProcessAsync(TagHelperContext, TagHelperOutput) UFBaseButtonTagHelperBase.ModelExpressionRenderer UFClickableTagHelperBase.Href UFClickableTagHelperBase.NewTab UFClickableTagHelperBase.Call UFClickableTagHelperBase.CallParameterSeparator UFClickableTagHelperBase.EndpointDataSource UFClickableTagHelperBase.ProcessHref(TagHelperOutput) AnchorTagHelper.Process(TagHelperContext, TagHelperOutput) AnchorTagHelper.Order AnchorTagHelper.Generator AnchorTagHelper.Action AnchorTagHelper.Controller AnchorTagHelper.Area AnchorTagHelper.Page AnchorTagHelper.PageHandler AnchorTagHelper.Protocol AnchorTagHelper.Host AnchorTagHelper.Fragment AnchorTagHelper.Route AnchorTagHelper.RouteValues AnchorTagHelper.ViewContext TagHelper.Init(TagHelperContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTableButtonTagHelperBase(EndpointDataSource, IHtmlGenerator, IUFModelExpressionRenderer) This class is the base class for all table button tag helpers. protected UFTableButtonTagHelperBase(EndpointDataSource endpointDataSource, IHtmlGenerator htmlGenerator, IUFModelExpressionRenderer modelExpressionRenderer) Parameters endpointDataSource EndpointDataSource htmlGenerator IHtmlGenerator modelExpressionRenderer IUFModelExpressionRenderer Methods GetAfterCaptionHtml(TagHelperContext, TagHelperOutput, bool, bool) Gets the html after the caption. protected override sealed string GetAfterCaptionHtml(TagHelperContext context, TagHelperOutput output, bool hasCaption, bool isStatic) Parameters context TagHelperContext output TagHelperOutput hasCaption bool True if the tag has any content isStatic bool True if the tag is rendered as a div element Returns string GetAfterCaptionHtml(TTable, TRow, TCell, bool, bool) The default implementation returns an empty string. protected virtual string GetAfterCaptionHtml(TTable table, TRow row, TCell cell, bool hasCaption, bool isStatic) Parameters table TTable Table the button is rendered within. row TRow Row the button is rendered within. cell TCell Cell the button is rendered within. hasCaption bool True if the button has any content. isStatic bool True if the button is rendered as a div element. Returns string GetBeforeCaptionHtml(TagHelperContext, TagHelperOutput, bool, bool) Gets the html before the caption. protected override sealed string GetBeforeCaptionHtml(TagHelperContext context, TagHelperOutput output, bool hasCaption, bool isStatic) Parameters context TagHelperContext output TagHelperOutput hasCaption bool True if the tag has any content isStatic bool True if the tag is rendered as a div element Returns string GetBeforeCaptionHtml(TTable, TRow, TCell, bool, bool) The default implementation returns an empty string. protected virtual string GetBeforeCaptionHtml(TTable table, TRow row, TCell cell, bool hasCaption, bool isStatic) Parameters table TTable Table the button is rendered within. row TRow Row the button is rendered within. cell TCell Cell the button is rendered within. hasCaption bool True if the button has any content. isStatic bool True if the button is rendered as a div element. Returns string GetButtonCaptionClasses(TagHelperContext, TagHelperOutput, bool) Gets the css classes to use for the caption span. protected override sealed string GetButtonCaptionClasses(TagHelperContext context, TagHelperOutput output, bool isStatic) Parameters context TagHelperContext output TagHelperOutput isStatic bool True if the tag is rendered as a div element Returns string GetButtonCaptionClasses(TTable, TRow, TCell, bool) The default implementation returns an empty string. protected virtual string GetButtonCaptionClasses(TTable table, TRow row, TCell cell, bool isStatic) Parameters table TTable Table the button is rendered within. row TRow Row the button is rendered within. cell TCell Cell the button is rendered within. isStatic bool True if the button is rendered as a div element. Returns string GetButtonClasses(TagHelperContext, TagHelperOutput, bool, bool) Gets the css classes to use for the button. protected override sealed string GetButtonClasses(TagHelperContext context, TagHelperOutput output, bool hasCaption, bool isStatic) Parameters context TagHelperContext output TagHelperOutput hasCaption bool True if the tag has any content isStatic bool True if the tag is rendered as a div element Returns string GetButtonClasses(TTable, TRow, TCell, bool, bool) The default implementation returns an empty string. protected virtual string GetButtonClasses(TTable table, TRow row, TCell cell, bool hasCaption, bool isStatic) Parameters table TTable Table the button is rendered within. row TRow Row the button is rendered within. cell TCell Cell the button is rendered within. hasCaption bool True if the button has any content. isStatic bool True if the button is rendered as a div element. Returns string"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.UFTableCellTagHelperBase-2.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.UFTableCellTagHelperBase-2.html",
    "title": "Class UFTableCellTagHelperBase<TTable, TTableRow> | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTableCellTagHelperBase<TTable, TTableRow> Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Table Assembly UltraForce.Library.Core.Asp.dll Creates a table cell. The cell can be self-closing or can contain content with a separate closing tag. The generated td or th element always uses an opening and closing tag. Rendered html for header: <th class=\"{GetTableCellClasses()}}\" [style=\"min-width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]>{children}</th> Rendered html for data: <td class=\"{GetTableCellClasses()}}\" [style=\"width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]>{children}</td> Rendered html for buttons (a div is used so that flex or grid styling can be used): <td class=\"{GetTableCellClasses()}}\" [style=\"width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]> <div class=\"{GetTableHeaderButtonClasses()} > {children} </div> </td> public abstract class UFTableCellTagHelperBase<TTable, TTableRow> : UFTagHelperWithModelExpressionRenderer, ITagHelper, ITagHelperComponent where TTable : UFTableTagHelperBase where TTableRow : UFTableRowTagHelperBase<TTable> Type Parameters TTable Creates a table cell. The cell can be self-closing or can contain content with a separate closing tag. The generated td or th element always uses an opening and closing tag. Rendered html for header: <th class=\"{GetTableCellClasses()}}\" [style=\"min-width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]>{children}</th> Rendered html for data: <td class=\"{GetTableCellClasses()}}\" [style=\"width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]>{children}</td> Rendered html for buttons (a div is used so that flex or grid styling can be used): <td class=\"{GetTableCellClasses()}}\" [style=\"width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]> <div class=\"{GetTableHeaderButtonClasses()} > {children} </div> </td> TTableRow Creates a table cell. The cell can be self-closing or can contain content with a separate closing tag. The generated td or th element always uses an opening and closing tag. Rendered html for header: <th class=\"{GetTableCellClasses()}}\" [style=\"min-width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]>{children}</th> Rendered html for data: <td class=\"{GetTableCellClasses()}}\" [style=\"width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]>{children}</td> Rendered html for buttons (a div is used so that flex or grid styling can be used): <td class=\"{GetTableCellClasses()}}\" [style=\"width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]> <div class=\"{GetTableHeaderButtonClasses()} > {children} </div> </td> Inheritance object TagHelper UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer UFTableCellTagHelperBase<TTable, TTableRow> Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithModelExpressionRenderer.ModelExpressionRenderer UFTagHelperWithViewContext.ViewContext TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTableCellTagHelperBase(IUFModelExpressionRenderer) Creates a table cell. The cell can be self-closing or can contain content with a separate closing tag. The generated td or th element always uses an opening and closing tag. Rendered html for header: <th class=\"{GetTableCellClasses()}}\" [style=\"min-width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]>{children}</th> Rendered html for data: <td class=\"{GetTableCellClasses()}}\" [style=\"width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]>{children}</td> Rendered html for buttons (a div is used so that flex or grid styling can be used): <td class=\"{GetTableCellClasses()}}\" [style=\"width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]> <div class=\"{GetTableHeaderButtonClasses()} > {children} </div> </td> protected UFTableCellTagHelperBase(IUFModelExpressionRenderer modelExpressionRenderer) Parameters modelExpressionRenderer IUFModelExpressionRenderer Properties For An expression to be evaluated against the current model. When set, the method will use the type to adjust the sort type (if SortType is set to Auto). Date values are formatted using mysql format (so there is no confusion on month and day positions): \"yyyy-mm-dd hh:mm:ss\" If the type of this value is a `bool`, an attribute `data-sort-value` is set with either `0` or `1`. For data cells, the value is used as content for the cell. For header cells, the name is used as content for the cell. [HtmlAttributeName(\"for\")] public ModelExpression? For { get; set; } Property Value ModelExpression MaxWidth When not empty, set this value as max-width value via the style tag. [HtmlAttributeName(\"max-width\")] public string MaxWidth { get; set; } Property Value string MinWidth When not empty, set this value as min-width value via the style tag. [HtmlAttributeName(\"min-width\")] public string MinWidth { get; set; } Property Value string NoFilter When true data in the cell can be found via the filter. When false an attribute with the name \"data-no-filter\" is added to the cell tag. This property is only processed when Type is Data. [HtmlAttributeName(\"no-filter\")] public bool NoFilter { get; set; } Property Value bool SortType Type of sorting (only of use with Header). If type is set to Auto (default) the method will try to determine the type from For. An attribute with the name \"data-sort-type\" will be added to the cell. This attribute contains one of the following values: - \"text\" - \"number\" - \"date\" [HtmlAttributeName(\"sort-type\")] public UFTableSortTypeEnum SortType { get; set; } Property Value UFTableSortTypeEnum Type Type of cell. [HtmlAttributeName(\"type\")] public UFTableCellTypeEnum Type { get; set; } Property Value UFTableCellTypeEnum Methods GetTableCellClasses(UFTableCellTypeEnum, TTable, TTableRow) Returns the css classes for the cell. protected virtual string GetTableCellClasses(UFTableCellTypeEnum type, TTable table, TTableRow tableRow) Parameters type UFTableCellTypeEnum table TTable tableRow TTableRow Returns string GetTableHeaderButtonClasses(TTable, TTableRow) Returns the css classes for the buttons in the header. protected virtual string GetTableHeaderButtonClasses(TTable table, TTableRow tableRow) Parameters table TTable tableRow TTableRow Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.UFTableChildTagHelperBase-3.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.UFTableChildTagHelperBase-3.html",
    "title": "Class UFTableChildTagHelperBase<TTable, TRow, TCell> | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTableChildTagHelperBase<TTable, TRow, TCell> Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Table Assembly UltraForce.Library.Core.Asp.dll This base class can be used for tag helpers that are placed with a UFTableTagHelperBase. The class defines protected methods to get a reference to the table, row and cell instance. public class UFTableChildTagHelperBase<TTable, TRow, TCell> : TagHelper, ITagHelper, ITagHelperComponent where TTable : UFTableTagHelperBase where TRow : class where TCell : class Type Parameters TTable Subclass of UFTableTagHelperBase. TRow Any class (normally a subclass of UFTableRowTagHelperBase<TTable>). TCell Any class (normally a subclass of UFTableCellTagHelperBase<TTable, TTableRow>). Inheritance object TagHelper UFTableChildTagHelperBase<TTable, TRow, TCell> Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetTable(TagHelperContext) Returns the current table. protected TTable GetTable(TagHelperContext context) Parameters context TagHelperContext Context of the tag helper. Returns TTable GetTableCell(TagHelperContext) Returns the current cell. protected TCell GetTableCell(TagHelperContext context) Parameters context TagHelperContext Context of the tag helper. Returns TCell GetTableRow(TagHelperContext) Returns the current row. protected TRow GetTableRow(TagHelperContext context) Parameters context TagHelperContext Context of the tag helper. Returns TRow"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.UFTableRowTagHelperBase-1.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.UFTableRowTagHelperBase-1.html",
    "title": "Class UFTableRowTagHelperBase<TTable> | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTableRowTagHelperBase<TTable> Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Table Assembly UltraForce.Library.Core.Asp.dll Creates a table row. Renders: <tr class=\"{GetTableRowClasses()}> {children} </tr> public abstract class UFTableRowTagHelperBase<TTable> : TagHelper, ITagHelper, ITagHelperComponent where TTable : UFTableTagHelperBase Type Parameters TTable Creates a table row. Renders: <tr class=\"{GetTableRowClasses()}> {children} </tr> Inheritance object TagHelper UFTableRowTagHelperBase<TTable> Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties SortLocation Keep the row at top or bottom if table gets sorted Setting this value to Top or Bottom will create a `data-sort-location` attribute with either \"top\" or \"bottom\" as value. [HtmlAttributeName(\"sort-location\")] public UFTableSortLocationEnum SortLocation { get; set; } Property Value UFTableSortLocationEnum Type The type of row [HtmlAttributeName(\"type\")] public UFTableRowTypeEnum Type { get; set; } Property Value UFTableRowTypeEnum Methods GetTableRowClasses(TTable) Returns the classes for the table row. protected virtual string GetTableRowClasses(TTable table) Parameters table TTable Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.UFTableRowTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.UFTableRowTagHelperBase.html",
    "title": "Class UFTableRowTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTableRowTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Table Assembly UltraForce.Library.Core.Asp.dll Creates a table row. Renders: <tr class=\"{GetTableRowClasses()}> {children} </tr> public abstract class UFTableRowTagHelperBase : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTableRowTagHelperBase Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTableRowTagHelperBase() Creates a table row. Renders: <tr class=\"{GetTableRowClasses()}> {children} </tr> protected UFTableRowTagHelperBase() Fields Row The key that children can use to access this instance. public const string Row = \"uf_row\" Field Value string Properties SortLocation Keep the row at top or bottom if table gets sorted Setting this value to Top or Bottom will create a `data-sort-location` attribute with either \"top\" or \"bottom\" as value. [HtmlAttributeName(\"sort-location\")] public UFTableSortLocationEnum SortLocation { get; set; } Property Value UFTableSortLocationEnum Type The type of row [HtmlAttributeName(\"type\")] public UFTableRowTypeEnum Type { get; set; } Property Value UFTableRowTypeEnum Methods GetTableRowClasses(UFTableTagHelperBase) Returns the classes for the table row. protected virtual string GetTableRowClasses(UFTableTagHelperBase aTable) Parameters aTable UFTableTagHelperBase Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput anOutput) Parameters context TagHelperContext Contains information associated with the current HTML tag. anOutput TagHelperOutput"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.UFTableTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.UFTableTagHelperBase.html",
    "title": "Class UFTableTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTableTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Table Assembly UltraForce.Library.Core.Asp.dll Tag helper to render a table. The table assumes all header rows are the first rows in the table and are grouped together. The tag helper will insert thead and tbody tags if there are header and data rows. To skip this, call the constructor with skipHeadBody set to true. Table without filter and sorting: <table class=\"GetTableClasses()\"> {children} </table> Table with a filter: <div class=\"GetTableContainerClasses()\"> <div class=\"GetFilterContainerClasses()\"> <input {id} class=\"GetFilterInputClasses()\" placeholder=\"GetFilterPlaceholder()\" data-uf-filter-table=\"{id}\" /> <button class=\"GetFilterButtonClasses()\" data-uf-set-field-selector=\"#{id}\"> GetFilterCaptionHtml() </button> </div> <table class=\"GetTableClasses()\"> {children} </table> </div> Table with sorting: <table class=\"GetTableClasses()\" data-uf-sorting=\"1\" data-uf-sort-ascending=\"GetSortAscendingClasses()\" data-uf-sort-descending=\"GetSortDescendingClasses()\" > {children} </table> public abstract class UFTableTagHelperBase : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTableTagHelperBase Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTableTagHelperBase(bool) Tag helper to render a table. The table assumes all header rows are the first rows in the table and are grouped together. The tag helper will insert thead and tbody tags if there are header and data rows. To skip this, call the constructor with skipHeadBody set to true. Table without filter and sorting: <table class=\"GetTableClasses()\"> {children} </table> Table with a filter: <div class=\"GetTableContainerClasses()\"> <div class=\"GetFilterContainerClasses()\"> <input {id} class=\"GetFilterInputClasses()\" placeholder=\"GetFilterPlaceholder()\" data-uf-filter-table=\"{id}\" /> <button class=\"GetFilterButtonClasses()\" data-uf-set-field-selector=\"#{id}\"> GetFilterCaptionHtml() </button> </div> <table class=\"GetTableClasses()\"> {children} </table> </div> Table with sorting: <table class=\"GetTableClasses()\" data-uf-sorting=\"1\" data-uf-sort-ascending=\"GetSortAscendingClasses()\" data-uf-sort-descending=\"GetSortDescendingClasses()\" > {children} </table> protected UFTableTagHelperBase(bool skipHeadBody = false) Parameters skipHeadBody bool When true do not insert thead and tbody tags. The class will not call GetBodyClasses() and GetHeadClasses(). Properties Filter When true add a data-filter attribute with the value \"1\" to the table. [HtmlAttributeName(\"filter\")] public bool Filter { get; set; } Property Value bool PageSize Number of rows per page (only used if Paging is true). It will set data-page-size attribute on the table. [HtmlAttributeName(\"page-size\")] public int PageSize { get; set; } Property Value int Paging When true add a data-paging attribute with the value \"1\" to the table. [HtmlAttributeName(\"paging\")] public bool Paging { get; set; } Property Value bool Sorting When true add data-sorting attribute with the value \"1\" to the table. [HtmlAttributeName(\"sorting\")] public bool Sorting { get; set; } Property Value bool StorageId Assign a value to preserve the sorting and paging state of the table between sessions. When set the state is stored in a local storage of the browser. public string StorageId { get; set; } Property Value string Methods GetBodyClasses() Returns the classes to use with the tbody tag. protected virtual string GetBodyClasses() Returns string GetFilterButtonClasses() Returns the classes for the filter button. protected virtual string GetFilterButtonClasses() Returns string GetFilterCaptionHtml() Returns the html to use for the filter button caption (the child of the button tag). The default implementation returns \"clear\". protected virtual string GetFilterCaptionHtml() Returns string GetFilterContainerClasses() Returns the classes for the filter container. protected virtual string GetFilterContainerClasses() Returns string GetFilterInputClasses() Returns the classes for the filter input. protected virtual string GetFilterInputClasses() Returns string GetFilterPlaceholder() Returns the text to be used as the place-holder for the filter input. protected virtual string GetFilterPlaceholder() Returns string GetHeadClasses() Returns the classes to use with the thead tag. protected virtual string GetHeadClasses() Returns string GetSortAscendingClasses() Returns the classes for the sort ascending icon. protected virtual string GetSortAscendingClasses() Returns string GetSortDescendingClasses() Returns the classes for the sort descending icon. protected virtual string GetSortDescendingClasses() Returns string GetTableClasses() Returns the classes for the table. protected virtual string GetTableClasses() Returns string GetTableContainerClasses() Returns the classes for the element containing the table. This method is only used when Filter is true. protected virtual string GetTableContainerClasses() Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.Table.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Table | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Base.Table Classes UFTableButtonTagHelperBase<TTable, TRow, TCell> This class is the base class for all table button tag helpers. UFTableCellTagHelperBase<TTable, TTableRow> Creates a table cell. The cell can be self-closing or can contain content with a separate closing tag. The generated td or th element always uses an opening and closing tag. Rendered html for header: <th class=\"{GetTableCellClasses()}}\" [style=\"min-width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]>{children}</th> Rendered html for data: <td class=\"{GetTableCellClasses()}}\" [style=\"width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]>{children}</td> Rendered html for buttons (a div is used so that flex or grid styling can be used): <td class=\"{GetTableCellClasses()}}\" [style=\"width: {MinWidth}; max-width: {MaxWidth}; box-sizing: content-box\"]> <div class=\"{GetTableHeaderButtonClasses()} > {children} </div> </td> UFTableChildTagHelperBase<TTable, TRow, TCell> This base class can be used for tag helpers that are placed with a UFTableTagHelperBase. The class defines protected methods to get a reference to the table, row and cell instance. UFTableRowTagHelperBase<TTable> Creates a table row. Renders: <tr class=\"{GetTableRowClasses()}> {children} </tr> UFTableTagHelperBase Tag helper to render a table. The table assumes all header rows are the first rows in the table and are grouped together. The tag helper will insert thead and tbody tags if there are header and data rows. To skip this, call the constructor with skipHeadBody set to true. Table without filter and sorting: <table class=\"GetTableClasses()\"> {children} </table> Table with a filter: <div class=\"GetTableContainerClasses()\"> <div class=\"GetFilterContainerClasses()\"> <input {id} class=\"GetFilterInputClasses()\" placeholder=\"GetFilterPlaceholder()\" data-uf-filter-table=\"{id}\" /> <button class=\"GetFilterButtonClasses()\" data-uf-set-field-selector=\"#{id}\"> GetFilterCaptionHtml() </button> </div> <table class=\"GetTableClasses()\"> {children} </table> </div> Table with sorting: <table class=\"GetTableClasses()\" data-uf-sorting=\"1\" data-uf-sort-ascending=\"GetSortAscendingClasses()\" data-uf-sort-descending=\"GetSortDescendingClasses()\" > {children} </table>"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.UFClickableTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.UFClickableTagHelperBase.html",
    "title": "Class UFClickableTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFClickableTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base Assembly UltraForce.Library.Core.Asp.dll UFClickableTagHelperBase can be used as base class for elements that can be clicked upon and will jump to some other page. It is a subclass of AnchorTagHelper adding some additional properties. Subclasses can call ProcessHref(TagHelperOutput) to determine the href value and process the additional properties. public abstract class UFClickableTagHelperBase : AnchorTagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper AnchorTagHelper UFClickableTagHelperBase Implements ITagHelper ITagHelperComponent Derived UFBaseButtonTagHelperBase Inherited Members AnchorTagHelper.Process(TagHelperContext, TagHelperOutput) AnchorTagHelper.Order AnchorTagHelper.Generator AnchorTagHelper.Action AnchorTagHelper.Controller AnchorTagHelper.Area AnchorTagHelper.Page AnchorTagHelper.PageHandler AnchorTagHelper.Protocol AnchorTagHelper.Host AnchorTagHelper.Fragment AnchorTagHelper.Route AnchorTagHelper.RouteValues AnchorTagHelper.ViewContext TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFClickableTagHelperBase(EndpointDataSource, IHtmlGenerator) Constructs an instance UFClickableTagHelperBase. protected UFClickableTagHelperBase(EndpointDataSource endpointDataSource, IHtmlGenerator htmlGenerator) Parameters endpointDataSource EndpointDataSource htmlGenerator IHtmlGenerator Used to generate an href value Properties Call This property can be used as a shorthand combining Controller, Action and RouteValues values. It 'calls' a controller action by building a href from the value. Use the following format: [Controller.]Action[(RouteValue1,RouteValue2,...)] Values between square brackets are optional. If the controller is not set the current controller is used. The text separating parameters is set by the CallParameterSeparator; the default value is a comma. If the action does not expect any parameters, do not use the round brackets! Else the code assumes there is one parameter that has an empty string as value. [HtmlAttributeName(\"call\")] public string? Call { get; set; } Property Value string CallParameterSeparator The separator used to separate parameters in the Call property. [HtmlAttributeName(\"call-parameter-separator\")] public string? CallParameterSeparator { get; set; } Property Value string EndpointDataSource Routing information protected EndpointDataSource EndpointDataSource { get; } Property Value EndpointDataSource Href Use this value if no other route is set. [HtmlAttributeName(\"href\")] public string? Href { get; set; } Property Value string NewTab When true add the target=\"_blank\" attribute. [HtmlAttributeName(\"new-tab\")] public bool NewTab { get; set; } Property Value bool Methods ProcessHref(TagHelperOutput) Checks if a href attribute is set; if not create one based on the Href property. protected bool ProcessHref(TagHelperOutput output) Parameters output TagHelperOutput Returns bool True if a href value could be determined"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.UFStyledTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.UFStyledTagHelperBase.html",
    "title": "Class UFStyledTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFStyledTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Base Assembly UltraForce.Library.Core.Asp.dll A base class for simple tag helpers that render a styled tag. It renders the following: <{tag} class=\"{GetClasses()}\"> {children} </{tag}> Subclasses can override the GetClasses() method to provide alternative custom css classes. public abstract class UFStyledTagHelperBase : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFStyledTagHelperBase Implements ITagHelper ITagHelperComponent Derived UFBasicFlexTagHelperBase Inherited Members TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFStyledTagHelperBase(string, TagMode, string) A base class for simple tag helpers that render a styled tag. It renders the following: <{tag} class=\"{GetClasses()}\"> {children} </{tag}> Subclasses can override the GetClasses() method to provide alternative custom css classes. protected UFStyledTagHelperBase(string tag, TagMode mode = TagMode.StartTagAndEndTag, string classes = \"\") Parameters tag string tag to use mode TagMode tag mode to use classes string css classes to use Methods GetClasses() The default implementation returns the value of the classes variable passed in the constructor. Subclasses can override this method if some logic is needed to determine the css classes. protected virtual string GetClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.UFTagHelperWithModelExpressionRenderer.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.UFTagHelperWithModelExpressionRenderer.html",
    "title": "Class UFTagHelperWithModelExpressionRenderer | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTagHelperWithModelExpressionRenderer Namespace UltraForce.Library.Core.Asp.TagHelpers.Base Assembly UltraForce.Library.Core.Asp.dll This class extends UFTagHelperWithViewContext and adds a ModelExpressionRenderer property. It assumes a tag helper using a model expression renderer will also need a view context. public abstract class UFTagHelperWithModelExpressionRenderer : UFTagHelperWithViewContext, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer Implements ITagHelper ITagHelperComponent Derived UFDataItemTagHelperBase UFDataNameTagHelperBase UFDataValueTagHelperBase UFTableCellTagHelperBase<TTable, TTableRow> Inherited Members UFTagHelperWithViewContext.ViewContext TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTagHelperWithModelExpressionRenderer(IUFModelExpressionRenderer) Constructs an instance of the UFTagHelperWithModelExpressionRenderer. protected UFTagHelperWithModelExpressionRenderer(IUFModelExpressionRenderer modelExpressionRenderer) Parameters modelExpressionRenderer IUFModelExpressionRenderer Properties ModelExpressionRenderer protected IUFModelExpressionRenderer ModelExpressionRenderer { get; } Property Value IUFModelExpressionRenderer"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.UFTagHelperWithViewContext.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.UFTagHelperWithViewContext.html",
    "title": "Class UFTagHelperWithViewContext | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTagHelperWithViewContext Namespace UltraForce.Library.Core.Asp.TagHelpers.Base Assembly UltraForce.Library.Core.Asp.dll Base class for tag helpers. It exposes ViewContext property. public abstract class UFTagHelperWithViewContext : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithViewContext Implements ITagHelper ITagHelperComponent Derived UFTagHelperWithModelExpressionRenderer UFDataTagHelperBase Inherited Members TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ViewContext View context (will be set externally by the razor engine) [HtmlAttributeNotBound] [ViewContext] public ViewContext ViewContext { get; set; } Property Value ViewContext"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Base.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Base.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Base | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Base Classes UFClickableTagHelperBase UFClickableTagHelperBase can be used as base class for elements that can be clicked upon and will jump to some other page. It is a subclass of AnchorTagHelper adding some additional properties. Subclasses can call ProcessHref(TagHelperOutput) to determine the href value and process the additional properties. UFStyledTagHelperBase A base class for simple tag helpers that render a styled tag. It renders the following: <{tag} class=\"{GetClasses()}\"> {children} </{tag}> Subclasses can override the GetClasses() method to provide alternative custom css classes. UFTagHelperWithModelExpressionRenderer This class extends UFTagHelperWithViewContext and adds a ModelExpressionRenderer property. It assumes a tag helper using a model expression renderer will also need a view context. UFTagHelperWithViewContext Base class for tag helpers. It exposes ViewContext property."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Buttons.UFButtonTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Buttons.UFButtonTagHelper.html",
    "title": "Class UFButtonTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFButtonTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Buttons Assembly UltraForce.Library.Core.Asp.dll Renders a button or link using a button styling. When rendering a button the default type is button; use the Submit property to change it to submit. Renders: <{a|button|div} class=\"{GetButtonClasses()}\" {href} {disabled} {target}> {GetBeforeCaptionHtml()} <span class=\"{GetButtonCaptionClasses()}\">{children}</span> {GetAfterCaptionHtml()} </{a|button|div}> Part of the code is based on the AnchorTagHelper implemenation. public abstract class UFButtonTagHelper : UFClickableTagHelperBase, ITagHelper, ITagHelperComponent Inheritance object TagHelper AnchorTagHelper UFClickableTagHelperBase UFButtonTagHelper Implements ITagHelper ITagHelperComponent Inherited Members UFClickableTagHelperBase.Href UFClickableTagHelperBase.NewTab UFClickableTagHelperBase.Call UFClickableTagHelperBase.CallParameterSeparator UFClickableTagHelperBase.EndpointDataSource UFClickableTagHelperBase.ProcessHref(TagHelperOutput) AnchorTagHelper.Process(TagHelperContext, TagHelperOutput) AnchorTagHelper.Order AnchorTagHelper.Generator AnchorTagHelper.Action AnchorTagHelper.Controller AnchorTagHelper.Area AnchorTagHelper.Page AnchorTagHelper.PageHandler AnchorTagHelper.Protocol AnchorTagHelper.Host AnchorTagHelper.Fragment AnchorTagHelper.Route AnchorTagHelper.RouteValues AnchorTagHelper.ViewContext TagHelper.Init(TagHelperContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFButtonTagHelper(EndpointDataSource, IHtmlGenerator, IUFModelExpressionRenderer) Renders a button or link using a button styling. When rendering a button the default type is button; use the Submit property to change it to submit. Renders: <{a|button|div} class=\"{GetButtonClasses()}\" {href} {disabled} {target}> {GetBeforeCaptionHtml()} <span class=\"{GetButtonCaptionClasses()}\">{children}</span> {GetAfterCaptionHtml()} </{a|button|div}> Part of the code is based on the AnchorTagHelper implemenation. protected UFButtonTagHelper(EndpointDataSource anEndpointDataSource, IHtmlGenerator aHtmlGenerator, IUFModelExpressionRenderer aModelExpressionRenderer) Parameters anEndpointDataSource EndpointDataSource aHtmlGenerator IHtmlGenerator aModelExpressionRenderer IUFModelExpressionRenderer Properties Clipboard When set, an onclick handler is added to copy the value to the clipboard. public string? Clipboard { get; set; } Property Value string Disabled If the button is an anchor, a div tag is used instead of a tag. With buttons the disabled attribute is set. [HtmlAttributeName(\"disabled\")] public bool Disabled { get; set; } Property Value bool For When set, use it to get a name for. The Name property is ignored. public ModelExpression? For { get; set; } Property Value ModelExpression ModelExpressionRenderer protected IUFModelExpressionRenderer ModelExpressionRenderer { get; } Property Value IUFModelExpressionRenderer Name When set, set a name attribute. This property is not used if For is set. public string? Name { get; set; } Property Value string OnClick Value to set for the onclick attribute of the button. This property is ignored if Clipboard has been set. [HtmlAttributeName(\"on-click\")] public string? OnClick { get; set; } Property Value string Static When true the button is rendered with a div element. [HtmlAttributeName(\"static\")] public bool Static { get; set; } Property Value bool Submit When true the button type is set to submit. This property is only of use if the button is placed inside a form element. [HtmlAttributeName(\"submit\")] public bool Submit { get; set; } Property Value bool Value When set, set a value attribute. public string? Value { get; set; } Property Value string Methods GetAfterCaptionHtml() The default implementation returns empty string. protected virtual string GetAfterCaptionHtml() Returns string GetBeforeCaptionHtml() The default implementation returns empty string. protected virtual string GetBeforeCaptionHtml() Returns string GetButtonCaptionClasses() The default implementation returns empty string. protected virtual string GetButtonCaptionClasses() Returns string GetButtonClasses() The default implementation returns empty string. protected virtual string GetButtonClasses() Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Buttons.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Buttons.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Buttons | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Buttons Classes UFButtonTagHelper Renders a button or link using a button styling. When rendering a button the default type is button; use the Submit property to change it to submit. Renders: <{a|button|div} class=\"{GetButtonClasses()}\" {href} {disabled} {target}> {GetBeforeCaptionHtml()} <span class=\"{GetButtonCaptionClasses()}\">{children}</span> {GetAfterCaptionHtml()} </{a|button|div}> Part of the code is based on the AnchorTagHelper implemenation."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Containers.UFTabTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Containers.UFTabTagHelper.html",
    "title": "Class UFTabTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTabTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Containers Assembly UltraForce.Library.Core.Asp.dll This tag helper is used to render a tab container. It expects to be used as a child of a UFTabsTagHelper. The class renders the following html: <input type=\"radio\" name=\"..\" id=\"{internal}\" class=\"{GetRadioClasses()}\" [checked] /> <label for=\"{internal}\" class=\"{GetLabelClasses()}\">{Caption}</label> <div class=\"{GetContentWrapperClasses()}\"> {children} </div> The css classes should use '+' with the selectors. [HtmlTargetElement(\"uf-tab\")] public class UFTabTagHelper : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTabTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTabTagHelper() This tag helper is used to render a tab container. It expects to be used as a child of a UFTabsTagHelper. The class renders the following html: <input type=\"radio\" name=\"..\" id=\"{internal}\" class=\"{GetRadioClasses()}\" [checked] /> <label for=\"{internal}\" class=\"{GetLabelClasses()}\">{Caption}</label> <div class=\"{GetContentWrapperClasses()}\"> {children} </div> The css classes should use '+' with the selectors. public UFTabTagHelper() Properties Caption Caption of the tag. Can be html formatted. [HtmlAttributeName(\"caption\")] public string Caption { get; set; } Property Value string Selected Initial state of the tab. If true, the tab will be selected. [HtmlAttributeName(\"selected\")] public bool Selected { get; set; } Property Value bool Methods GetContentWrapperClasses() The default implementation returns an empty string. protected virtual string GetContentWrapperClasses() Returns string GetLabelClasses() The default implementation returns an empty string. protected virtual string GetLabelClasses() Returns string GetRadioClasses() The default implementation returns an empty string. protected virtual string GetRadioClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Containers.UFTabsTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Containers.UFTabsTagHelper.html",
    "title": "Class UFTabsTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTabsTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Containers Assembly UltraForce.Library.Core.Asp.dll This tag helper is used to render a tab container. It expects its children to be instances of UFTabTagHelper. The class will render: <div class=\"{GetTabsClasses}\"> {children} </div> public abstract class UFTabsTagHelper : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTabsTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTabsTagHelper() This tag helper is used to render a tab container. It expects its children to be instances of UFTabTagHelper. The class will render: <div class=\"{GetTabsClasses}\"> {children} </div> protected UFTabsTagHelper() Fields TabsRadioName The key that UFTabTagHelper can use to get the name of the radio button from the Items. public const string TabsRadioName = \"uf_tabs_radio_name\" Field Value string Methods GetTabsClasses(int) The default implementation returns an empty string. protected virtual string GetTabsClasses(int aCount) Parameters aCount int Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Containers.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Containers.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Containers | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Containers Classes UFTabTagHelper This tag helper is used to render a tab container. It expects to be used as a child of a UFTabsTagHelper. The class renders the following html: <input type=\"radio\" name=\"..\" id=\"{internal}\" class=\"{GetRadioClasses()}\" [checked] /> <label for=\"{internal}\" class=\"{GetLabelClasses()}\">{Caption}</label> <div class=\"{GetContentWrapperClasses()}\"> {children} </div> The css classes should use '+' with the selectors. UFTabsTagHelper This tag helper is used to render a tab container. It expects its children to be instances of UFTabTagHelper. The class will render: <div class=\"{GetTabsClasses}\"> {children} </div>"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Data.UFDataItemTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Data.UFDataItemTagHelper.html",
    "title": "Class UFDataItemTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataItemTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Data Assembly UltraForce.Library.Core.Asp.dll Base class for rendering a data definition. For the name part if For is set, the content is set to the name of the referenced element. Else the children of this tag are rendered. For the data part the content is set to the value of the referenced element. If For is null, the data part is empty. It renders the following: <dt class=\"{GetDataNameClasses()}\">{content|For name}</dt> <dd class=\"{GetDataValueClasses()}\">{empty|For value}</dd> public abstract class UFDataItemTagHelper : UFTagHelperWithModelExpressionRenderer, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer UFDataItemTagHelper Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithModelExpressionRenderer.ModelExpressionRenderer UFTagHelperWithViewContext.ViewContext TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFDataItemTagHelper(IUFModelExpressionRenderer) Base class for rendering a data definition. For the name part if For is set, the content is set to the name of the referenced element. Else the children of this tag are rendered. For the data part the content is set to the value of the referenced element. If For is null, the data part is empty. It renders the following: <dt class=\"{GetDataNameClasses()}\">{content|For name}</dt> <dd class=\"{GetDataValueClasses()}\">{empty|For value}</dd> protected UFDataItemTagHelper(IUFModelExpressionRenderer aModelExpressionRenderer) Parameters aModelExpressionRenderer IUFModelExpressionRenderer Properties For When no content is set, use the (display) name of the model property. public ModelExpression? For { get; set; } Property Value ModelExpression Methods GetDataNameClasses() The default implementation returns an empty string. protected virtual string GetDataNameClasses() Returns string GetDataValueClasses() The default implementation returns an empty string. protected virtual string GetDataValueClasses() Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Data.UFDataListTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Data.UFDataListTagHelper.html",
    "title": "Class UFDataListTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataListTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Data Assembly UltraForce.Library.Core.Asp.dll Base class for rendering a data list. It just sets the tag to \"dl\". public abstract class UFDataListTagHelper : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFDataListTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFDataListTagHelper() Base class for rendering a data list. It just sets the tag to \"dl\". protected UFDataListTagHelper() Methods GetDataListClasses() The default implementation returns an empty string. protected virtual string GetDataListClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Data.UFDataNameTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Data.UFDataNameTagHelper.html",
    "title": "Class UFDataNameTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataNameTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Data Assembly UltraForce.Library.Core.Asp.dll Base class for rendering a data definition. If For is set, the content is set to the name of the referenced element. Else the children of this tag are rendered. It renders the following: <dt class=\"{GetDataNameClasses()}\">{content|For name}</dt> [HtmlTargetElement(\"uf-data-name\")] public abstract class UFDataNameTagHelper : UFTagHelperWithModelExpressionRenderer, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer UFDataNameTagHelper Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithModelExpressionRenderer.ModelExpressionRenderer UFTagHelperWithViewContext.ViewContext TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFDataNameTagHelper(IUFModelExpressionRenderer) Base class for rendering a data definition. If For is set, the content is set to the name of the referenced element. Else the children of this tag are rendered. It renders the following: <dt class=\"{GetDataNameClasses()}\">{content|For name}</dt> protected UFDataNameTagHelper(IUFModelExpressionRenderer aModelExpressionRenderer) Parameters aModelExpressionRenderer IUFModelExpressionRenderer Properties For When no content is set, use the (display) name of the model property. public ModelExpression? For { get; set; } Property Value ModelExpression Methods GetDataNameClasses() The default returns an empty string. protected virtual string GetDataNameClasses() Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Data.UFDataValueTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Data.UFDataValueTagHelper.html",
    "title": "Class UFDataValueTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataValueTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Data Assembly UltraForce.Library.Core.Asp.dll Base class for rendering a data value. If For is set, the content is set to the value of the referenced element. Else the children of this tag are rendered. It renders the following: <dd class=\"{GetDataNameClasses()}\">{content|For value}</dd> public abstract class UFDataValueTagHelper : UFTagHelperWithModelExpressionRenderer, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer UFDataValueTagHelper Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithModelExpressionRenderer.ModelExpressionRenderer UFTagHelperWithViewContext.ViewContext TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFDataValueTagHelper(IUFModelExpressionRenderer) Base class for rendering a data value. If For is set, the content is set to the value of the referenced element. Else the children of this tag are rendered. It renders the following: <dd class=\"{GetDataNameClasses()}\">{content|For value}</dd> protected UFDataValueTagHelper(IUFModelExpressionRenderer aModelExpressionRenderer) Parameters aModelExpressionRenderer IUFModelExpressionRenderer Properties For When no content is set, use the (display) name of the model property. public ModelExpression? For { get; set; } Property Value ModelExpression Methods GetDataValueClasses() The default implementation returns an empty string. protected virtual string GetDataValueClasses() Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Data.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Data.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Data | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Data Classes UFDataItemTagHelper Base class for rendering a data definition. For the name part if For is set, the content is set to the name of the referenced element. Else the children of this tag are rendered. For the data part the content is set to the value of the referenced element. If For is null, the data part is empty. It renders the following: <dt class=\"{GetDataNameClasses()}\">{content|For name}</dt> <dd class=\"{GetDataValueClasses()}\">{empty|For value}</dd> UFDataListTagHelper Base class for rendering a data list. It just sets the tag to \"dl\". UFDataNameTagHelper Base class for rendering a data definition. If For is set, the content is set to the name of the referenced element. Else the children of this tag are rendered. It renders the following: <dt class=\"{GetDataNameClasses()}\">{content|For name}</dt> UFDataValueTagHelper Base class for rendering a data value. If For is set, the content is set to the value of the referenced element. Else the children of this tag are rendered. It renders the following: <dd class=\"{GetDataNameClasses()}\">{content|For value}</dd>"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Forms.UFInputTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Forms.UFInputTagHelper.html",
    "title": "Class UFInputTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFInputTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Forms Assembly UltraForce.Library.Core.Asp.dll Renders either a text input, a checkbox or a radio button. If no id is set and NoWrap is true the class will generate an id so the label can reference the input element. If there are no field errors, the field error block is not rendered. Since the pseudo selectors ::after and ::before can not be used no input and textarea elements, it is possible to override GetTextInputPreHtml(string) and GetTextInputPostHtml(string) to add extra html before and after the input element. Renders text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextInputLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextInputLabelSpanClasses(type)}\">{label}</span> <span class=\"{GetTextInputLabelDescriptionClasses(type)}\">{description}</span> </label> {GetTextInputPreHtml()} <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> {GetTextInputPreHtml()} <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders text input without wrapping: <input class=\"{GetTextInputClasses(type) .../> Renders multiline text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextInputLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextInputLabelSpanClasses(type)}\">{label}</span> <span class=\"{GetTextInputLabelDescriptionClasses(type)}\">{description}</span> </label> {GetTextInputPreHtml()} <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders multiline text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> {GetTextInputPreHtml(type)} <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders multiline text input without wrapping: <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> Renders radio input with wrapping and a label: <div class=\"{GetRadioWrapperClasses()}\"> <label class=\"{GetRadioLabelClasses()}\"> {GetRadioExtraHtml()} <span class=\"{GetRadioLabelSpanClasses()}>{label}</span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input with wrapping but no label: <div class=\"{GetRadioWrapperClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input without wrapping but with a label: <label class=\"{GetRadioLabelClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} <span class=\"{GetRadioLabelSpanClasses()}>{label}</span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> Renders radio input without wrapping and without a label: <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} Renders checkbox input with wrapping and a label: <div class=\"{GetCheckboxWrapperClasses()}\"> <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}>{label}</span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input with wrapping but no label: <div class=\"{GetCheckboxWrapperClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input without wrapping but with a label: <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} ... /> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}>{label}</span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> Renders checkbox input without wrapping and without a label: <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} [HtmlTargetElement(\"uf-input\")] public abstract class UFInputTagHelper : InputTagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper InputTagHelper UFInputTagHelper Implements ITagHelper ITagHelperComponent Inherited Members InputTagHelper.GetInputType(ModelExplorer, out string) InputTagHelper.Order InputTagHelper.Generator InputTagHelper.ViewContext InputTagHelper.For InputTagHelper.Format InputTagHelper.InputTypeName InputTagHelper.FormName InputTagHelper.Name InputTagHelper.Value TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFInputTagHelper(IHtmlGenerator) Renders either a text input, a checkbox or a radio button. If no id is set and NoWrap is true the class will generate an id so the label can reference the input element. If there are no field errors, the field error block is not rendered. Since the pseudo selectors ::after and ::before can not be used no input and textarea elements, it is possible to override GetTextInputPreHtml(string) and GetTextInputPostHtml(string) to add extra html before and after the input element. Renders text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextInputLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextInputLabelSpanClasses(type)}\">{label}</span> <span class=\"{GetTextInputLabelDescriptionClasses(type)}\">{description}</span> </label> {GetTextInputPreHtml()} <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> {GetTextInputPreHtml()} <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders text input without wrapping: <input class=\"{GetTextInputClasses(type) .../> Renders multiline text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextInputLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextInputLabelSpanClasses(type)}\">{label}</span> <span class=\"{GetTextInputLabelDescriptionClasses(type)}\">{description}</span> </label> {GetTextInputPreHtml()} <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders multiline text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> {GetTextInputPreHtml(type)} <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders multiline text input without wrapping: <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> Renders radio input with wrapping and a label: <div class=\"{GetRadioWrapperClasses()}\"> <label class=\"{GetRadioLabelClasses()}\"> {GetRadioExtraHtml()} <span class=\"{GetRadioLabelSpanClasses()}>{label}</span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input with wrapping but no label: <div class=\"{GetRadioWrapperClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input without wrapping but with a label: <label class=\"{GetRadioLabelClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} <span class=\"{GetRadioLabelSpanClasses()}>{label}</span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> Renders radio input without wrapping and without a label: <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} Renders checkbox input with wrapping and a label: <div class=\"{GetCheckboxWrapperClasses()}\"> <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}>{label}</span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input with wrapping but no label: <div class=\"{GetCheckboxWrapperClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input without wrapping but with a label: <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} ... /> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}>{label}</span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> Renders checkbox input without wrapping and without a label: <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} protected UFInputTagHelper(IHtmlGenerator generator) Parameters generator IHtmlGenerator Properties Description Additional text that is shown below the label. It is only used if NoWrap is not true. [HtmlAttributeName(\"description\")] public string Description { get; set; } Property Value string Label When set, use this value for label instead of getting from the For property. When NoWrap is false, the property is only used with checkbox and radio elements. For other input elements the value is ignored. [HtmlAttributeName(\"label\")] public string Label { get; set; } Property Value string Multiline When true show a multiline text input (textarea). [HtmlAttributeName(\"multiline\")] public bool Multiline { get; set; } Property Value bool NoLabel When true do not render a label element. [HtmlAttributeName(\"no-label\")] public bool NoLabel { get; set; } Property Value bool NoWrap When true, do not the wrap input element in a div. [HtmlAttributeName(\"no-wrap\")] public bool NoWrap { get; set; } Property Value bool Methods GetCheckboxExtraHtml() Returns the html to use for the checkbox extra content. protected virtual string GetCheckboxExtraHtml() Returns string GetCheckboxInputClasses() Returns the classes to use for the checkbox input element. protected virtual string GetCheckboxInputClasses() Returns string GetCheckboxLabelClasses() Returns the classes to use for the checkbox label element. protected virtual string GetCheckboxLabelClasses() Returns string GetCheckboxLabelDescriptionClasses() Returns the classes to use for the description span element inside the checkbox label. protected virtual string GetCheckboxLabelDescriptionClasses() Returns string GetCheckboxLabelSpanClasses() Returns the classes to use for the span element inside the checkbox label. protected virtual string GetCheckboxLabelSpanClasses() Returns string GetCheckboxWrapperClasses() Returns the classes to use for the checkbox wrapper div element. protected virtual string GetCheckboxWrapperClasses() Returns string GetFieldErrorsClasses() Returns the classes to use for the field errors div element. protected virtual string GetFieldErrorsClasses() Returns string GetFieldErrorsHtml(ModelStateDictionary, string) Returns the html to use for the field errors. protected virtual string GetFieldErrorsHtml(ModelStateDictionary states, string name) Parameters states ModelStateDictionary name string Returns string GetRadioExtraHtml() Returns the html to use for the radio extra content. protected virtual string GetRadioExtraHtml() Returns string GetRadioInputClasses() Returns the classes to use for the radio input element. protected virtual string GetRadioInputClasses() Returns string GetRadioLabelClasses() Returns the classes to use for the radio label element. protected virtual string GetRadioLabelClasses() Returns string GetRadioLabelDescriptionClasses() Returns the classes to use for the description span element inside the radio label. protected virtual string GetRadioLabelDescriptionClasses() Returns string GetRadioLabelSpanClasses() Returns the classes to use for the span element inside the radio label. protected virtual string GetRadioLabelSpanClasses() Returns string GetRadioWrapperClasses() Returns the classes to use for the radio wrapper div element. protected virtual string GetRadioWrapperClasses() Returns string GetTextInputClasses(string) Returns the classes to use for the input element. protected virtual string GetTextInputClasses(string aType) Parameters aType string Returns string GetTextInputLabelClasses(string) Returns the classes to use for the label element. protected virtual string GetTextInputLabelClasses(string aType) Parameters aType string Returns string GetTextInputLabelDescriptionClasses(string) Returns the classes to use for the description span element inside the label. protected virtual string GetTextInputLabelDescriptionClasses(string aType) Parameters aType string Returns string GetTextInputLabelSpanClasses(string) Returns the classes to use for the span element inside the label. protected virtual string GetTextInputLabelSpanClasses(string aType) Parameters aType string Returns string GetTextInputPostHtml(string) Gets html code inserted after the input element. protected virtual string GetTextInputPostHtml(string aType) Parameters aType string Returns string GetTextInputPreHtml(string) Gets html code inserted before the input element. protected virtual string GetTextInputPreHtml(string aType) Parameters aType string Returns string GetTextInputWrapperClasses(string) Returns the classes to use for the wrapper div element. protected virtual string GetTextInputWrapperClasses(string aType) Parameters aType string Returns string GetValidationFeedbackContainerHtml(string) Returns the classes to use for the validation feedback container. protected virtual string GetValidationFeedbackContainerHtml(string anId) Parameters anId string Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Remarks Does nothing if For is null. Exceptions InvalidOperationException Thrown if Format is non-null but For is null."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Forms.UFSelectTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Forms.UFSelectTagHelper.html",
    "title": "Class UFSelectTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFSelectTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Forms Assembly UltraForce.Library.Core.Asp.dll Base class to help with rendering a select element. If not id is set and NoWrap is false, the code will generate an id so the label can reference the select element. If there are no field errors, the field error block is not rendered. Renders with wrapping: <div class=\"{GetInputWrapperClasses()}\"> <label class=\"{GetInputLabelClasses()}\" for=\"{id}\">{label}</label> <select class=\"{GetSelectClasses() id={} ...\" > {children} </select> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders without wrapping: <select class=\"{GetSelectClasses()}\" > {children} </select> [HtmlTargetElement(\"uf-select\", TagStructure = TagStructure.NormalOrSelfClosing)] public abstract class UFSelectTagHelper : SelectTagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper SelectTagHelper UFSelectTagHelper Implements ITagHelper ITagHelperComponent Inherited Members SelectTagHelper.Init(TagHelperContext) SelectTagHelper.Order SelectTagHelper.Generator SelectTagHelper.ViewContext SelectTagHelper.For SelectTagHelper.Items SelectTagHelper.Name TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFSelectTagHelper(IHtmlGenerator) Base class to help with rendering a select element. If not id is set and NoWrap is false, the code will generate an id so the label can reference the select element. If there are no field errors, the field error block is not rendered. Renders with wrapping: <div class=\"{GetInputWrapperClasses()}\"> <label class=\"{GetInputLabelClasses()}\" for=\"{id}\">{label}</label> <select class=\"{GetSelectClasses() id={} ...\" > {children} </select> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders without wrapping: <select class=\"{GetSelectClasses()}\" > {children} </select> protected UFSelectTagHelper(IHtmlGenerator aGenerator) Parameters aGenerator IHtmlGenerator Properties Description Additional text that is shown below the label. It is only used if NoWrap is not true. [HtmlAttributeName(\"description\")] public string Description { get; set; } Property Value string Label When set, use this value for label instead of getting from the For property. When NoWrap is false, the property is only used with checkbox and radio elements. For other input elements the value is ignored. [HtmlAttributeName(\"label\")] public string Label { get; set; } Property Value string NoLabel When true do not render a label element. [HtmlAttributeName(\"no-label\")] public bool NoLabel { get; set; } Property Value bool NoWrap When true, do not the wrap input element in a div. [HtmlAttributeName(\"no-wrap\")] public bool NoWrap { get; set; } Property Value bool Methods GetFieldErrorsClasses() Returns the css classes for the field errors block. protected virtual string GetFieldErrorsClasses() Returns string GetFieldErrorsHtml(ModelStateDictionary, string) Returns the html for the field errors block. protected virtual string GetFieldErrorsHtml(ModelStateDictionary states, string name) Parameters states ModelStateDictionary name string Returns string GetSelectClasses() Returns css classes for the select element. protected virtual string GetSelectClasses() Returns string GetTextLabelClasses(string) Returns css classes for the label element. protected virtual string GetTextLabelClasses(string aType) Parameters aType string Returns string GetTextWrapperClasses(string) Returns css classes for the wrapper element. protected virtual string GetTextWrapperClasses(string aType) Parameters aType string Returns string GetValidationFeedbackContainerHtml(string) Returns the html for the validation feedback container. protected virtual string GetValidationFeedbackContainerHtml(string anId) Parameters anId string Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Remarks Does nothing if For is null."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Forms.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Forms.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Forms | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Forms Classes UFInputTagHelper Renders either a text input, a checkbox or a radio button. If no id is set and NoWrap is true the class will generate an id so the label can reference the input element. If there are no field errors, the field error block is not rendered. Since the pseudo selectors ::after and ::before can not be used no input and textarea elements, it is possible to override GetTextInputPreHtml(string) and GetTextInputPostHtml(string) to add extra html before and after the input element. Renders text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextInputLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextInputLabelSpanClasses(type)}\">{label}</span> <span class=\"{GetTextInputLabelDescriptionClasses(type)}\">{description}</span> </label> {GetTextInputPreHtml()} <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> {GetTextInputPreHtml()} <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders text input without wrapping: <input class=\"{GetTextInputClasses(type) .../> Renders multiline text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextInputLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextInputLabelSpanClasses(type)}\">{label}</span> <span class=\"{GetTextInputLabelDescriptionClasses(type)}\">{description}</span> </label> {GetTextInputPreHtml()} <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders multiline text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> {GetTextInputPreHtml(type)} <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetTextInputPostHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders multiline text input without wrapping: <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> Renders radio input with wrapping and a label: <div class=\"{GetRadioWrapperClasses()}\"> <label class=\"{GetRadioLabelClasses()}\"> {GetRadioExtraHtml()} <span class=\"{GetRadioLabelSpanClasses()}>{label}</span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input with wrapping but no label: <div class=\"{GetRadioWrapperClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input without wrapping but with a label: <label class=\"{GetRadioLabelClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} <span class=\"{GetRadioLabelSpanClasses()}>{label}</span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> Renders radio input without wrapping and without a label: <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} Renders checkbox input with wrapping and a label: <div class=\"{GetCheckboxWrapperClasses()}\"> <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}>{label}</span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input with wrapping but no label: <div class=\"{GetCheckboxWrapperClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input without wrapping but with a label: <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} ... /> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}>{label}</span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> Renders checkbox input without wrapping and without a label: <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} UFSelectTagHelper Base class to help with rendering a select element. If not id is set and NoWrap is false, the code will generate an id so the label can reference the select element. If there are no field errors, the field error block is not rendered. Renders with wrapping: <div class=\"{GetInputWrapperClasses()}\"> <label class=\"{GetInputLabelClasses()}\" for=\"{id}\">{label}</label> <select class=\"{GetSelectClasses() id={} ...\" > {children} </select> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders without wrapping: <select class=\"{GetSelectClasses()}\" > {children} </select>"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.Base.UFBasicFlexTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.Base.UFBasicFlexTagHelperBase.html",
    "title": "Class UFBasicFlexTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFBasicFlexTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Layout.Base Assembly UltraForce.Library.Core.Asp.dll Abstract class for basic flex containers. It only offers properties to position the contents. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> Renders: <div class=\"{GetClasses()}\"> {children} </div> public abstract class UFBasicFlexTagHelperBase : UFStyledTagHelperBase, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFStyledTagHelperBase UFBasicFlexTagHelperBase Implements ITagHelper ITagHelperComponent Derived UFFlexTagHelperBase Inherited Members UFStyledTagHelperBase.Process(TagHelperContext, TagHelperOutput) TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFBasicFlexTagHelperBase(UFFlexTypeEnum, string) Abstract class for basic flex containers. It only offers properties to position the contents. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> Renders: <div class=\"{GetClasses()}\"> {children} </div> protected UFBasicFlexTagHelperBase(UFFlexTypeEnum flexType, string tag = \"div\") Parameters flexType UFFlexTypeEnum tag string Properties AlignCrossAxis How to align the items in the opposite direction. public UFFlexAlignItemsEnum AlignCrossAxis { get; set; } Property Value UFFlexAlignItemsEnum DistributeMainAxis How to distribute the items in the direction of the main axis. [HtmlAttributeName(\"distribute-main-axis\")] public UFFlexDistributeContentEnum DistributeMainAxis { get; set; } Property Value UFFlexDistributeContentEnum Reverse When true, reverse the order of the items. [HtmlAttributeName(\"reverse\")] public bool Reverse { get; set; } Property Value bool Methods GetClasses() The default implementation uses styles from 'uf-styles.css'. protected override string GetClasses() Returns string"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.Base.UFDataTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.Base.UFDataTagHelperBase.html",
    "title": "Class UFDataTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Layout.Base Assembly UltraForce.Library.Core.Asp.dll This base class can be used to store or retrieve data. When using the tag with a self-closing tag, the content of this tag will be set to the result from GetDataAsync(). When using the tag with and open and close tag with some content. The content will be used as a parameter for SetDataAsync(string) and the tag helper will not render anything. public abstract class UFDataTagHelperBase : UFTagHelperWithViewContext, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithViewContext UFDataTagHelperBase Implements ITagHelper ITagHelperComponent Derived UFDataTitleTagHelper Inherited Members UFTagHelperWithViewContext.ViewContext TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDataAsync() Returns the stored data to be used as content for the tag. protected abstract Task<string> GetDataAsync() Returns Task<string> Stored text ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput). SetDataAsync(string) Stores the text so it can be used later to create the content for the tag. protected abstract Task SetDataAsync(string text) Parameters text string Text to store Returns Task"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.Base.UFFlexTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.Base.UFFlexTagHelperBase.html",
    "title": "Class UFFlexTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFFlexTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Layout.Base Assembly UltraForce.Library.Core.Asp.dll This class adds additional properties to the UFBasicFlexTagHelperBase class. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> Renders: <div class=\"{GetClasses()}\"> {children} </div> public abstract class UFFlexTagHelperBase : UFBasicFlexTagHelperBase, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFStyledTagHelperBase UFBasicFlexTagHelperBase UFFlexTagHelperBase Implements ITagHelper ITagHelperComponent Derived UFColumnTagHelper UFRowTagHelper Inherited Members UFBasicFlexTagHelperBase.AlignCrossAxis UFBasicFlexTagHelperBase.DistributeMainAxis UFBasicFlexTagHelperBase.Reverse UFStyledTagHelperBase.Process(TagHelperContext, TagHelperOutput) TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFFlexTagHelperBase(UFFlexTypeEnum, string) This class adds additional properties to the UFBasicFlexTagHelperBase class. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> Renders: <div class=\"{GetClasses()}\"> {children} </div> protected UFFlexTagHelperBase(UFFlexTypeEnum flexType, string tag = \"div\") Parameters flexType UFFlexTypeEnum tag string Properties DistributeCrossAxis How to distribute the items in the opposite direction. This property is only of use when Wrap is true and there are multiple rows or columns. [HtmlAttributeName(\"distribute-cross-axis\")] public UFFlexDistributeContentEnum DistributeCrossAxis { get; set; } Property Value UFFlexDistributeContentEnum FullHeight When true use all available vertical space in the parent. [HtmlAttributeName(\"full-height\")] public bool FullHeight { get; set; } Property Value bool FullWidth When true use all available horizontal space in the parent. [HtmlAttributeName(\"full-width\")] public bool FullWidth { get; set; } Property Value bool Wrap When true wrap children across multiple rows or columns when they don\"t fit. [HtmlAttributeName(\"wrap\")] public bool Wrap { get; set; } Property Value bool Methods GetClasses() The default implementation uses styles from 'uf-styles.css'. protected override string GetClasses() Returns string"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.Base.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.Base.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Layout.Base | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Layout.Base Classes UFBasicFlexTagHelperBase Abstract class for basic flex containers. It only offers properties to position the contents. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> Renders: <div class=\"{GetClasses()}\"> {children} </div> UFDataTagHelperBase This base class can be used to store or retrieve data. When using the tag with a self-closing tag, the content of this tag will be set to the result from GetDataAsync(). When using the tag with and open and close tag with some content. The content will be used as a parameter for SetDataAsync(string) and the tag helper will not render anything. UFFlexTagHelperBase This class adds additional properties to the UFBasicFlexTagHelperBase class. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> Renders: <div class=\"{GetClasses()}\"> {children} </div>"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.UFColumnTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.UFColumnTagHelper.html",
    "title": "Class UFColumnTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFColumnTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Layout Assembly UltraForce.Library.Core.Asp.dll A UFFlexTagHelperBase subclass to place the children in a column. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> [HtmlTargetElement(\"uf-column\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFColumnTagHelper : UFFlexTagHelperBase, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFStyledTagHelperBase UFBasicFlexTagHelperBase UFFlexTagHelperBase UFColumnTagHelper Implements ITagHelper ITagHelperComponent Inherited Members UFFlexTagHelperBase.DistributeCrossAxis UFFlexTagHelperBase.FullWidth UFFlexTagHelperBase.FullHeight UFFlexTagHelperBase.Wrap UFFlexTagHelperBase.GetClasses() UFBasicFlexTagHelperBase.AlignCrossAxis UFBasicFlexTagHelperBase.DistributeMainAxis UFBasicFlexTagHelperBase.Reverse UFStyledTagHelperBase.Process(TagHelperContext, TagHelperOutput) TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFColumnTagHelper() A UFFlexTagHelperBase subclass to place the children in a column. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> public UFColumnTagHelper()"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.UFRowTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.UFRowTagHelper.html",
    "title": "Class UFRowTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFRowTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Layout Assembly UltraForce.Library.Core.Asp.dll A UFFlexTagHelperBase subclass to place the children in a column. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> [HtmlTargetElement(\"uf-row\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFRowTagHelper : UFFlexTagHelperBase, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFStyledTagHelperBase UFBasicFlexTagHelperBase UFFlexTagHelperBase UFRowTagHelper Implements ITagHelper ITagHelperComponent Inherited Members UFFlexTagHelperBase.DistributeCrossAxis UFFlexTagHelperBase.FullWidth UFFlexTagHelperBase.FullHeight UFFlexTagHelperBase.Wrap UFFlexTagHelperBase.GetClasses() UFBasicFlexTagHelperBase.AlignCrossAxis UFBasicFlexTagHelperBase.DistributeMainAxis UFBasicFlexTagHelperBase.Reverse UFStyledTagHelperBase.Process(TagHelperContext, TagHelperOutput) TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFRowTagHelper() A UFFlexTagHelperBase subclass to place the children in a column. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> public UFRowTagHelper()"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.UFStackItemTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.UFStackItemTagHelper.html",
    "title": "Class UFStackItemTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFStackItemTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Layout Assembly UltraForce.Library.Core.Asp.dll This tag should be used with UFStackTagHelper, each child within the stack should be wrapped with this tag. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> Renders: <div class=\"{GetStackItemClasses()}\"> {children} </div> [HtmlTargetElement(\"uf-stack-item\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFStackItemTagHelper : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFStackItemTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Horizontal How to position this item horizontally within the container. [HtmlAttributeName(\"horizontal\")] public UFContentPositionEnum Horizontal { get; set; } Property Value UFContentPositionEnum NoInteraction When true prevent interaction with the stack item. [HtmlAttributeName(\"no-interaction\")] public bool NoInteraction { get; set; } Property Value bool Vertical How to position this item vertically within the container. [HtmlAttributeName(\"vertical\")] public UFContentPositionEnum Vertical { get; set; } Property Value UFContentPositionEnum Methods GetStackItemClasses() The default implementation uses styles from 'uf-styles.css'. protected virtual string GetStackItemClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.UFStackTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.UFStackTagHelper.html",
    "title": "Class UFStackTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFStackTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Layout Assembly UltraForce.Library.Core.Asp.dll Places children on top of each other. Each child should be wrapped with a UFStackItemTagHelper. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> Renders: <div class=\"{GetStackClasses()}\"> {children} </div> [HtmlTargetElement(\"uf-stack\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFStackTagHelper : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFStackTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FullHeight When true use the height of the parent, otherwise use the height of the content. [HtmlAttributeName(\"full-height\")] public bool FullHeight { get; set; } Property Value bool FullWidth When true use the width of the parent, otherwise use the width of the content. [HtmlAttributeName(\"full-width\")] public bool FullWidth { get; set; } Property Value bool Horizontal How to position the child horizontally within the container. [HtmlAttributeName(\"horizontal\")] public UFContentPositionEnum Horizontal { get; set; } Property Value UFContentPositionEnum Vertical How to position the child vertically within the container. [HtmlAttributeName(\"vertical\")] public UFContentPositionEnum Vertical { get; set; } Property Value UFContentPositionEnum Methods GetStackClasses() The default implementation uses styles from 'uf-styles.css'. protected virtual string GetStackClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Layout.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Layout | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Layout Classes UFColumnTagHelper A UFFlexTagHelperBase subclass to place the children in a column. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> UFRowTagHelper A UFFlexTagHelperBase subclass to place the children in a column. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> UFStackItemTagHelper This tag should be used with UFStackTagHelper, each child within the stack should be wrapped with this tag. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> Renders: <div class=\"{GetStackItemClasses()}\"> {children} </div> UFStackTagHelper Places children on top of each other. Each child should be wrapped with a UFStackItemTagHelper. When using this tag helper, make sure to include the stylesheet in the html: <link rel=\"stylesheet\" href=\"/_content/UltraForce.Library.Core.Asp/css/uf-styles.css\"/> Renders: <div class=\"{GetStackClasses()}\"> {children} </div>"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Lib.UFClickableTagHelperBase.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Lib.UFClickableTagHelperBase.html",
    "title": "Class UFClickableTagHelperBase | UltraForce.Library.Core.Asp",
    "keywords": "Class UFClickableTagHelperBase Namespace UltraForce.Library.Core.Asp.TagHelpers.Lib Assembly UltraForce.Library.Core.Asp.dll UFClickableTagHelperBase can be used as base class for elements that can be clicked upon and will jump to some other page. It is a subclass of AnchorTagHelper adding some additional properties. Subclasses can call ProcessHref(TagHelperOutput) to determine the href value and process the additional properties. public abstract class UFClickableTagHelperBase : AnchorTagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper AnchorTagHelper UFClickableTagHelperBase Implements ITagHelper ITagHelperComponent Derived UFButtonTagHelper Inherited Members AnchorTagHelper.Process(TagHelperContext, TagHelperOutput) AnchorTagHelper.Order AnchorTagHelper.Generator AnchorTagHelper.Action AnchorTagHelper.Controller AnchorTagHelper.Area AnchorTagHelper.Page AnchorTagHelper.PageHandler AnchorTagHelper.Protocol AnchorTagHelper.Host AnchorTagHelper.Fragment AnchorTagHelper.Route AnchorTagHelper.RouteValues AnchorTagHelper.ViewContext TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFClickableTagHelperBase(EndpointDataSource, IHtmlGenerator, IUFTheme) Constructs an instance UFClickableTagHelperBase. protected UFClickableTagHelperBase(EndpointDataSource anEndpointDataSource, IHtmlGenerator aHtmlGenerator, IUFTheme aTheme) Parameters anEndpointDataSource EndpointDataSource aHtmlGenerator IHtmlGenerator Used to generate an href value aTheme IUFTheme Properties Call This property can be used as a shorthand combining Controller, Action and RouteValues values. It 'calls' a controller action by building a href from the value. Use the following format: \"[Controller.]Action[(RouteValue1,RouteValue2,...)]\" Values between square brackets are optional. If the controller is not set the current controller is used. The text separating parameters is set by the CallParameterSeparator; the default value is a comma. If the action does not expect any parameters, do not use the round brackets! Else the code assumes there is one parameter that has an empty string as value. [HtmlAttributeName(\"call\")] public string? Call { get; set; } Property Value string CallParameterSeparator The separator used to separate parameters in the Call property. [HtmlAttributeName(\"call-parameter-separator\")] public string? CallParameterSeparator { get; set; } Property Value string EndpointDataSource Routing information protected EndpointDataSource EndpointDataSource { get; } Property Value EndpointDataSource Href Use this value if no other route is set. [HtmlAttributeName(\"href\")] public string? Href { get; set; } Property Value string NewTab When true add the target=\"_blank\" attribute. [HtmlAttributeName(\"new-tab\")] public bool NewTab { get; set; } Property Value bool Theme Theme to use for styling. protected IUFTheme Theme { get; } Property Value IUFTheme Methods ProcessHref(TagHelperOutput) Checks if a href attribute is set; if not create one based on the Href property. protected bool ProcessHref(TagHelperOutput anOutput) Parameters anOutput TagHelperOutput Returns bool True if a href value could be determined"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Lib.UFTagHelperWithModelExpressionRenderer.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Lib.UFTagHelperWithModelExpressionRenderer.html",
    "title": "Class UFTagHelperWithModelExpressionRenderer | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTagHelperWithModelExpressionRenderer Namespace UltraForce.Library.Core.Asp.TagHelpers.Lib Assembly UltraForce.Library.Core.Asp.dll This class extends UFTagHelperWithViewContext and adds a ModelExpressionRenderer property. It assumes a tag helper using a model expression renderer will also need a view context. public abstract class UFTagHelperWithModelExpressionRenderer : UFTagHelperWithViewContext, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithTheme UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer Implements ITagHelper ITagHelperComponent Derived UFDataItemTagHelper UFDataNameTagHelper UFDataValueTagHelper UFCellTagHelper Inherited Members UFTagHelperWithViewContext.ViewContext UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTagHelperWithModelExpressionRenderer(IUFModelExpressionRenderer, IUFTheme) Constructs an instance of the UFTagHelperWithModelExpressionRenderer. protected UFTagHelperWithModelExpressionRenderer(IUFModelExpressionRenderer aModelExpressionRenderer, IUFTheme aTheme) Parameters aModelExpressionRenderer IUFModelExpressionRenderer aTheme IUFTheme Properties ModelExpressionRenderer protected IUFModelExpressionRenderer ModelExpressionRenderer { get; } Property Value IUFModelExpressionRenderer"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Lib.UFTagHelperWithTheme.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Lib.UFTagHelperWithTheme.html",
    "title": "Class UFTagHelperWithTheme | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTagHelperWithTheme Namespace UltraForce.Library.Core.Asp.TagHelpers.Lib Assembly UltraForce.Library.Core.Asp.dll Base class for tag helpers that need a theme. public class UFTagHelperWithTheme : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithTheme Implements ITagHelper ITagHelperComponent Derived UFTagHelperWithViewContext UFContainerTagHelper UFStackItemTagHelper UFStackTagHelper UFTabTagHelper UFTabsTagHelper UFDataListTagHelper UFColumnTagHelper UFRowTagHelper UFSpacerTagHelper UFTableRowTagHelper UFTableTagHelper Inherited Members TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTagHelperWithTheme(IUFTheme) Constructs an instance of UFTagHelperWithTheme protected UFTagHelperWithTheme(IUFTheme aTheme) Parameters aTheme IUFTheme Properties Theme Theme to use for styling. protected IUFTheme Theme { get; } Property Value IUFTheme"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Lib.UFTagHelperWithViewContext.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Lib.UFTagHelperWithViewContext.html",
    "title": "Class UFTagHelperWithViewContext | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTagHelperWithViewContext Namespace UltraForce.Library.Core.Asp.TagHelpers.Lib Assembly UltraForce.Library.Core.Asp.dll Base class for tag helpers. It exposes ViewContext property. public class UFTagHelperWithViewContext : UFTagHelperWithTheme, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithTheme UFTagHelperWithViewContext Implements ITagHelper ITagHelperComponent Derived UFTagHelperWithModelExpressionRenderer Inherited Members UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTagHelperWithViewContext(IUFTheme) Constructs an instance of UFTagHelperWithViewContext protected UFTagHelperWithViewContext(IUFTheme aTheme) Parameters aTheme IUFTheme Properties ViewContext View context (will be set externally by the razor engine) [HtmlAttributeNotBound] [ViewContext] public ViewContext ViewContext { get; set; } Property Value ViewContext"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Lib.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Lib.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Lib | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Lib Classes UFClickableTagHelperBase UFClickableTagHelperBase can be used as base class for elements that can be clicked upon and will jump to some other page. It is a subclass of AnchorTagHelper adding some additional properties. Subclasses can call ProcessHref(TagHelperOutput) to determine the href value and process the additional properties. UFTagHelperWithModelExpressionRenderer This class extends UFTagHelperWithViewContext and adds a ModelExpressionRenderer property. It assumes a tag helper using a model expression renderer will also need a view context. UFTagHelperWithTheme Base class for tag helpers that need a theme. UFTagHelperWithViewContext Base class for tag helpers. It exposes ViewContext property."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Buttons.IUFButtonProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Buttons.IUFButtonProperties.html",
    "title": "Interface IUFButtonProperties | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFButtonProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Buttons Assembly UltraForce.Library.Core.Asp.dll The properties for a button. public interface IUFButtonProperties Properties Disabled If the button is an anchor, a div tag is used instead of a tag. With buttons the disabled attribute is set. bool Disabled { get; set; } Property Value bool FullHeight When true stretch the button to the full height of the parent element. bool FullHeight { get; set; } Property Value bool FullWidth When true stretch the button to the full width of the parent element. bool FullWidth { get; set; } Property Value bool HorizontalContentPosition The horizontal position of the caption and icon within the button. UFContentPosition HorizontalContentPosition { get; set; } Property Value UFContentPosition HorizontalPadding Additional horizontal padding to add to the content within the button. Use -1 to auto set the padding. int HorizontalPadding { get; set; } Property Value int Icon Optional icon to show in the button. It depends on the used theme how this value is interpreted. string? Icon { get; set; } Property Value string IconPosition Position of the icon in the button. Only of use if Icon has been set. When Auto is used, the styling will decide the position. UFButtonIconPosition IconPosition { get; set; } Property Value UFButtonIconPosition Size Size of the button. UFSize Size { get; set; } Property Value UFSize Static When true the button is rendered with a div element. bool Static { get; set; } Property Value bool Submit When true the button type is set to submit. This property is only of use if the button is placed inside a form element. bool Submit { get; set; } Property Value bool Type Styling to use for the button. When Auto is used, the styling is decided from the button state. UFButtonType Type { get; set; } Property Value UFButtonType VerticalContentPosition The vertical position of the caption and icon within the button. UFContentPosition VerticalContentPosition { get; set; } Property Value UFContentPosition VerticalPadding Additional vertical padding to add to the content within the button. Use -1 to auto set the padding. int VerticalPadding { get; set; } Property Value int"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Buttons.UFButtonProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Buttons.UFButtonProperties.html",
    "title": "Class UFButtonProperties | UltraForce.Library.Core.Asp",
    "keywords": "Class UFButtonProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Buttons Assembly UltraForce.Library.Core.Asp.dll A simple implementation of the IUFButtonProperties. Assigning default values to each property. public class UFButtonProperties : IUFButtonProperties Inheritance object UFButtonProperties Implements IUFButtonProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFButtonProperties() Constructs a new instance of UFButtonProperties using default values. public UFButtonProperties() UFButtonProperties(IUFButtonProperties) Constructs a new instance of UFButtonProperties copying values from another instance. public UFButtonProperties(IUFButtonProperties aSource) Parameters aSource IUFButtonProperties Properties Disabled If the button is an anchor, a div tag is used instead of a tag. With buttons the disabled attribute is set. public bool Disabled { get; set; } Property Value bool FullHeight When true stretch the button to the full height of the parent element. public bool FullHeight { get; set; } Property Value bool FullWidth When true stretch the button to the full width of the parent element. public bool FullWidth { get; set; } Property Value bool HorizontalContentPosition The horizontal position of the caption and icon within the button. public UFContentPosition HorizontalContentPosition { get; set; } Property Value UFContentPosition HorizontalPadding Additional horizontal padding to add to the content within the button. Use -1 to auto set the padding. public int HorizontalPadding { get; set; } Property Value int Icon Optional icon to show in the button. It depends on the used theme how this value is interpreted. public string? Icon { get; set; } Property Value string IconPosition Position of the icon in the button. Only of use if Icon has been set. When Auto is used, the styling will decide the position. public UFButtonIconPosition IconPosition { get; set; } Property Value UFButtonIconPosition Size Size of the button. public UFSize Size { get; set; } Property Value UFSize Static When true the button is rendered with a div element. public bool Static { get; set; } Property Value bool Submit When true the button type is set to submit. This property is only of use if the button is placed inside a form element. public bool Submit { get; set; } Property Value bool Type Styling to use for the button. When Auto is used, the styling is decided from the button state. public UFButtonType Type { get; set; } Property Value UFButtonType VerticalContentPosition The vertical position of the caption and icon within the button. public UFContentPosition VerticalContentPosition { get; set; } Property Value UFContentPosition VerticalPadding Additional vertical padding to add to the content within the button. Use -1 to auto set the padding. public int VerticalPadding { get; set; } Property Value int"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Buttons.UFButtonTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Buttons.UFButtonTagHelper.html",
    "title": "Class UFButtonTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFButtonTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Buttons Assembly UltraForce.Library.Core.Asp.dll Renders a button or link using a button styling. When rendering a button the default type is button; use the Submit property to change it to submit. If the Type is set to Auto the class will update it to one of the type values depending on the state of the button. Setting the Type to Disabled will style the button as disabled; however so long Disabled is not set to true, the button is still clickable. Renders: <{a|button|div} class=\"{GetButtonCssClasses()}\" {href} {disabled} {target}> {GetButtonIconHtml()} <span class=\"{GetButtonCaptionCssClasses()}\">{children}</span> </{a|button|div}> Part of the code is based on the AnchorTagHelper implemenation. [HtmlTargetElement(\"uf-button\")] public class UFButtonTagHelper : UFClickableTagHelperBase, ITagHelper, ITagHelperComponent, IUFButtonProperties Inheritance object TagHelper AnchorTagHelper UFClickableTagHelperBase UFButtonTagHelper Implements ITagHelper ITagHelperComponent IUFButtonProperties Inherited Members UFClickableTagHelperBase.Href UFClickableTagHelperBase.NewTab UFClickableTagHelperBase.Call UFClickableTagHelperBase.CallParameterSeparator UFClickableTagHelperBase.Theme UFClickableTagHelperBase.EndpointDataSource UFClickableTagHelperBase.ProcessHref(TagHelperOutput) AnchorTagHelper.Process(TagHelperContext, TagHelperOutput) AnchorTagHelper.Order AnchorTagHelper.Generator AnchorTagHelper.Action AnchorTagHelper.Controller AnchorTagHelper.Area AnchorTagHelper.Page AnchorTagHelper.PageHandler AnchorTagHelper.Protocol AnchorTagHelper.Host AnchorTagHelper.Fragment AnchorTagHelper.Route AnchorTagHelper.RouteValues AnchorTagHelper.ViewContext TagHelper.Init(TagHelperContext) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFButtonTagHelper(EndpointDataSource, IHtmlGenerator, IUFModelExpressionRenderer, IUFTheme) Renders a button or link using a button styling. When rendering a button the default type is button; use the Submit property to change it to submit. If the Type is set to Auto the class will update it to one of the type values depending on the state of the button. Setting the Type to Disabled will style the button as disabled; however so long Disabled is not set to true, the button is still clickable. Renders: <{a|button|div} class=\"{GetButtonCssClasses()}\" {href} {disabled} {target}> {GetButtonIconHtml()} <span class=\"{GetButtonCaptionCssClasses()}\">{children}</span> </{a|button|div}> Part of the code is based on the AnchorTagHelper implemenation. public UFButtonTagHelper(EndpointDataSource anEndpointDataSource, IHtmlGenerator aHtmlGenerator, IUFModelExpressionRenderer aModelExpressionRenderer, IUFTheme aTheme) Parameters anEndpointDataSource EndpointDataSource aHtmlGenerator IHtmlGenerator aModelExpressionRenderer IUFModelExpressionRenderer aTheme IUFTheme Properties Clipboard When set, an onclick handler is added to copy the value to the clipboard. public string? Clipboard { get; set; } Property Value string Disabled If the button is an anchor, a div tag is used instead of a tag. With buttons the disabled attribute is set. [HtmlAttributeName(\"disabled\")] public bool Disabled { get; set; } Property Value bool For When set, use it to get a name for. The Name property is ignored. public ModelExpression? For { get; set; } Property Value ModelExpression FullHeight When true stretch the button to the full height of the parent element. [HtmlAttributeName(\"full-height\")] public bool FullHeight { get; set; } Property Value bool FullWidth When true stretch the button to the full width of the parent element. [HtmlAttributeName(\"full-width\")] public bool FullWidth { get; set; } Property Value bool HorizontalContentPosition The horizontal position of the caption and icon within the button. [HtmlAttributeName(\"horizontal-content-position\")] public UFContentPosition HorizontalContentPosition { get; set; } Property Value UFContentPosition HorizontalPadding Additional horizontal padding to add to the content within the button. Use -1 to auto set the padding. [HtmlAttributeName(\"horizontal-padding\")] public int HorizontalPadding { get; set; } Property Value int Icon Optional icon to show in the button. It depends on the used theme how this value is interpreted. [HtmlAttributeName(\"icon\")] public string? Icon { get; set; } Property Value string IconPosition Position of the icon in the button. Only of use if Icon has been set. When Auto is used, the styling will decide the position. [HtmlAttributeName(\"icon-position\")] public UFButtonIconPosition IconPosition { get; set; } Property Value UFButtonIconPosition ModelExpressionRenderer protected IUFModelExpressionRenderer ModelExpressionRenderer { get; } Property Value IUFModelExpressionRenderer Name When set, set a name attribute. This property is not used if For is set. public string? Name { get; set; } Property Value string OnClick Value to set for the onclick attribute of the button. This property is ignored if Clipboard has been set. [HtmlAttributeName(\"on-click\")] public string? OnClick { get; set; } Property Value string Size Size of the button. [HtmlAttributeName(\"size\")] public UFSize Size { get; set; } Property Value UFSize Static When true the button is rendered with a div element. [HtmlAttributeName(\"static\")] public bool Static { get; set; } Property Value bool Submit When true the button type is set to submit. This property is only of use if the button is placed inside a form element. [HtmlAttributeName(\"submit\")] public bool Submit { get; set; } Property Value bool Type Styling to use for the button. When Auto is used, the styling is decided from the button state. [HtmlAttributeName(\"color\")] public UFButtonType Type { get; set; } Property Value UFButtonType Value When set, set a value attribute. public string? Value { get; set; } Property Value string VerticalContentPosition The vertical position of the caption and icon within the button. [HtmlAttributeName(\"vertical-content-position\")] public UFContentPosition VerticalContentPosition { get; set; } Property Value UFContentPosition VerticalPadding Additional vertical padding to add to the content within the button. Use -1 to auto set the padding. [HtmlAttributeName(\"vertical-padding\")] public int VerticalPadding { get; set; } Property Value int Methods GetButtonCaptionClasses(IUFButtonProperties) The default implementation calls GetButtonCaptionClasses(IUFButtonProperties). protected virtual string GetButtonCaptionClasses(IUFButtonProperties aProperties) Parameters aProperties IUFButtonProperties Returns string GetButtonClasses(IUFButtonProperties) The default implementation calls GetButtonClasses(IUFButtonProperties). protected virtual string GetButtonClasses(IUFButtonProperties aProperties) Parameters aProperties IUFButtonProperties Returns string GetButtonIconHtml(IUFButtonProperties) The default implementation calls GetButtonIconHtml(IUFButtonProperties). protected virtual string GetButtonIconHtml(IUFButtonProperties aProperties) Parameters aProperties IUFButtonProperties Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Buttons.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Buttons.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Buttons | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Buttons Classes UFButtonProperties A simple implementation of the IUFButtonProperties. Assigning default values to each property. UFButtonTagHelper Renders a button or link using a button styling. When rendering a button the default type is button; use the Submit property to change it to submit. If the Type is set to Auto the class will update it to one of the type values depending on the state of the button. Setting the Type to Disabled will style the button as disabled; however so long Disabled is not set to true, the button is still clickable. Renders: <{a|button|div} class=\"{GetButtonCssClasses()}\" {href} {disabled} {target}> {GetButtonIconHtml()} <span class=\"{GetButtonCaptionCssClasses()}\">{children}</span> </{a|button|div}> Part of the code is based on the AnchorTagHelper implemenation. Interfaces IUFButtonProperties The properties for a button."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.IUFContainerProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.IUFContainerProperties.html",
    "title": "Interface IUFContainerProperties | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFContainerProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers Assembly UltraForce.Library.Core.Asp.dll Properties for a container that can optionally position its child content. public interface IUFContainerProperties Properties FullHeight When true use the height of the parent, otherwise use the height of the content. bool FullHeight { get; set; } Property Value bool FullWidth When true use the width of the parent, otherwise use the width of the content. bool FullWidth { get; set; } Property Value bool Horizontal How to position the child horizontally within the container. UFContentPosition Horizontal { get; set; } Property Value UFContentPosition Padding Padding to add to the container. int Padding { get; set; } Property Value int PositionChild When true position the children in the container using Horizontal and Vertical. bool PositionChild { get; set; } Property Value bool Vertical How to position the child vertically within the container. UFContentPosition Vertical { get; set; } Property Value UFContentPosition"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.IUFStackItemProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.IUFStackItemProperties.html",
    "title": "Interface IUFStackItemProperties | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFStackItemProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers Assembly UltraForce.Library.Core.Asp.dll Properties for a stack item. public interface IUFStackItemProperties Properties Horizontal How to position this item horizontally within the container. UFContentPosition Horizontal { get; set; } Property Value UFContentPosition NoInteraction When true prevent interaction with the stack item. bool NoInteraction { get; set; } Property Value bool Vertical How to position this item vertically within the container. UFContentPosition Vertical { get; set; } Property Value UFContentPosition"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.IUFTabProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.IUFTabProperties.html",
    "title": "Interface IUFTabProperties | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFTabProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers Assembly UltraForce.Library.Core.Asp.dll Properties for a tab in a web page. public interface IUFTabProperties Properties Caption Caption of the tag. Can be html formatted. string Caption { get; set; } Property Value string Selected Initial state of the tab. If true, the tab will be selected. bool Selected { get; set; } Property Value bool"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.UFContainerProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.UFContainerProperties.html",
    "title": "Class UFContainerProperties | UltraForce.Library.Core.Asp",
    "keywords": "Class UFContainerProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers Assembly UltraForce.Library.Core.Asp.dll Properties for a container in a web page. public class UFContainerProperties : IUFContainerProperties Inheritance object UFContainerProperties Implements IUFContainerProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FullHeight When true use the height of the parent, otherwise use the height of the content. public bool FullHeight { get; set; } Property Value bool FullWidth When true use the width of the parent, otherwise use the width of the content. public bool FullWidth { get; set; } Property Value bool Horizontal How to position the child horizontally within the container. public UFContentPosition Horizontal { get; set; } Property Value UFContentPosition Padding Padding to add to the container. public int Padding { get; set; } Property Value int PositionChild When true position the children in the container using Horizontal and Vertical. public bool PositionChild { get; set; } Property Value bool Vertical How to position the child vertically within the container. public UFContentPosition Vertical { get; set; } Property Value UFContentPosition"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.UFContainerTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.UFContainerTagHelper.html",
    "title": "Class UFContainerTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFContainerTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers Assembly UltraForce.Library.Core.Asp.dll This tag helper renders a container with various options. Renders: <div class=\"{GetContainerClasses()}\"> {children} </div> [HtmlTargetElement(\"uf-container\")] public class UFContainerTagHelper : UFTagHelperWithTheme, ITagHelper, ITagHelperComponent, IUFContainerProperties Inheritance object TagHelper UFTagHelperWithTheme UFContainerTagHelper Implements ITagHelper ITagHelperComponent IUFContainerProperties Inherited Members UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFContainerTagHelper(IUFTheme) This tag helper renders a container with various options. Renders: <div class=\"{GetContainerClasses()}\"> {children} </div> public UFContainerTagHelper(IUFTheme aTheme) Parameters aTheme IUFTheme Properties FullHeight When true use the height of the parent, otherwise use the height of the content. [HtmlAttributeName(\"full-height\")] public bool FullHeight { get; set; } Property Value bool FullWidth When true use the width of the parent, otherwise use the width of the content. [HtmlAttributeName(\"full-width\")] public bool FullWidth { get; set; } Property Value bool Horizontal How to position the child horizontally within the container. [HtmlAttributeName(\"horizontal\")] public UFContentPosition Horizontal { get; set; } Property Value UFContentPosition Padding Padding to add to the container. [HtmlAttributeName(\"padding\")] public int Padding { get; set; } Property Value int PositionChild When true position the children in the container using Horizontal and Vertical. [HtmlAttributeName(\"position-child\")] public bool PositionChild { get; set; } Property Value bool Vertical How to position the child vertically within the container. [HtmlAttributeName(\"vertical\")] public UFContentPosition Vertical { get; set; } Property Value UFContentPosition Methods GetContainerClasses() The default implementation calls GetContainerClasses(IUFContainerProperties). protected virtual string GetContainerClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.UFStackItemTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.UFStackItemTagHelper.html",
    "title": "Class UFStackItemTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFStackItemTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers Assembly UltraForce.Library.Core.Asp.dll This tag should be used with UFStackTagHelper, each child within the stack should be wrapped with this tag. Renders: <div class=\"{GetStackItemClasses()}\"> {children} </div> [HtmlTargetElement(\"uf-stack-item\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFStackItemTagHelper : UFTagHelperWithTheme, ITagHelper, ITagHelperComponent, IUFStackItemProperties Inheritance object TagHelper UFTagHelperWithTheme UFStackItemTagHelper Implements ITagHelper ITagHelperComponent IUFStackItemProperties Inherited Members UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFStackItemTagHelper(IUFTheme) This tag should be used with UFStackTagHelper, each child within the stack should be wrapped with this tag. Renders: <div class=\"{GetStackItemClasses()}\"> {children} </div> public UFStackItemTagHelper(IUFTheme aTheme) Parameters aTheme IUFTheme Properties Horizontal How to position this item horizontally within the container. [HtmlAttributeName(\"horizontal\")] public UFContentPosition Horizontal { get; set; } Property Value UFContentPosition NoInteraction When true prevent interaction with the stack item. [HtmlAttributeName(\"no-interaction\")] public bool NoInteraction { get; set; } Property Value bool Vertical How to position this item vertically within the container. [HtmlAttributeName(\"vertical\")] public UFContentPosition Vertical { get; set; } Property Value UFContentPosition Methods GetStackItemClasses() The default implementation calls GetStackItemClasses(IUFStackItemProperties). protected virtual string GetStackItemClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.UFStackTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.UFStackTagHelper.html",
    "title": "Class UFStackTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFStackTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers Assembly UltraForce.Library.Core.Asp.dll Places children on top of each other. Each child should be wrapped with a UFStackItemTagHelper. Renders: <div class=\"{GetStackClasses()}\"> {children} </div> [HtmlTargetElement(\"uf-stack\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFStackTagHelper : UFTagHelperWithTheme, ITagHelper, ITagHelperComponent, IUFContainerProperties Inheritance object TagHelper UFTagHelperWithTheme UFStackTagHelper Implements ITagHelper ITagHelperComponent IUFContainerProperties Inherited Members UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFStackTagHelper(IUFTheme) Places children on top of each other. Each child should be wrapped with a UFStackItemTagHelper. Renders: <div class=\"{GetStackClasses()}\"> {children} </div> public UFStackTagHelper(IUFTheme aTheme) Parameters aTheme IUFTheme Properties FullHeight When true use the height of the parent, otherwise use the height of the content. [HtmlAttributeName(\"full-height\")] public bool FullHeight { get; set; } Property Value bool FullWidth When true use the width of the parent, otherwise use the width of the content. [HtmlAttributeName(\"full-width\")] public bool FullWidth { get; set; } Property Value bool Horizontal How to position the child horizontally within the container. [HtmlAttributeName(\"horizontal\")] public UFContentPosition Horizontal { get; set; } Property Value UFContentPosition Padding Padding to add to the container. [HtmlAttributeName(\"padding\")] public int Padding { get; set; } Property Value int PositionChild When true position the children in the container using Horizontal and Vertical. [HtmlAttributeName(\"position-child\")] public bool PositionChild { get; set; } Property Value bool Vertical How to position the child vertically within the container. [HtmlAttributeName(\"vertical\")] public UFContentPosition Vertical { get; set; } Property Value UFContentPosition Methods GetStackClasses() The default implementation calls GetStackClasses(IUFContainerProperties). protected virtual string GetStackClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.UFTabTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.UFTabTagHelper.html",
    "title": "Class UFTabTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTabTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers Assembly UltraForce.Library.Core.Asp.dll This tag helper is used to render a tab container. It expects to be used as a child of a UFTabsTagHelper. The class renders the following html: <input type=\"radio\" name=\"..\" id=\"{internal}\" class=\"{GetRadioClasses()}\" [checked] /> <label for=\"{internal}\" class=\"{GetLabelClasses()}\">{Caption}</label> <div class=\"{GetContentWrapperClasses()}\"> {children} </div> The css classes should use '+' with the selectors. [HtmlTargetElement(\"uf-tab\")] public class UFTabTagHelper : UFTagHelperWithTheme, ITagHelper, ITagHelperComponent, IUFTabProperties Inheritance object TagHelper UFTagHelperWithTheme UFTabTagHelper Implements ITagHelper ITagHelperComponent IUFTabProperties Inherited Members UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTabTagHelper(IUFTheme) This tag helper is used to render a tab container. It expects to be used as a child of a UFTabsTagHelper. The class renders the following html: <input type=\"radio\" name=\"..\" id=\"{internal}\" class=\"{GetRadioClasses()}\" [checked] /> <label for=\"{internal}\" class=\"{GetLabelClasses()}\">{Caption}</label> <div class=\"{GetContentWrapperClasses()}\"> {children} </div> The css classes should use '+' with the selectors. public UFTabTagHelper(IUFTheme aTheme) Parameters aTheme IUFTheme Properties Caption Caption of the tag. Can be html formatted. [HtmlAttributeName(\"caption\")] public string Caption { get; set; } Property Value string Selected Initial state of the tab. If true, the tab will be selected. [HtmlAttributeName(\"selected\")] public bool Selected { get; set; } Property Value bool Methods GetContentWrapperClasses() The default implementation returns the result from GetTabContentWrapperClasses(IUFTabProperties). protected virtual string GetContentWrapperClasses() Returns string GetLabelClasses() The default implementation returns the result from GetTabLabelClasses(IUFTabProperties). protected virtual string GetLabelClasses() Returns string GetRadioClasses() The default implementation returns the result from GetTabRadioClasses(IUFTabProperties). protected virtual string GetRadioClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.UFTabsTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.UFTabsTagHelper.html",
    "title": "Class UFTabsTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTabsTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers Assembly UltraForce.Library.Core.Asp.dll This tag helper is used to render a tab container. It expects its children to be instances of UFTabTagHelper. The class will render: <div class=\"{GetTabsClasses}\"> {children} </div> [HtmlTargetElement(\"uf-tabs\")] public class UFTabsTagHelper : UFTagHelperWithTheme, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithTheme UFTabsTagHelper Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTabsTagHelper(IUFTheme) This tag helper is used to render a tab container. It expects its children to be instances of UFTabTagHelper. The class will render: <div class=\"{GetTabsClasses}\"> {children} </div> public UFTabsTagHelper(IUFTheme aTheme) Parameters aTheme IUFTheme Fields TabsRadioName The key that UFTabTagHelper can use to get the name of the radio button from the Items. public const string TabsRadioName = \"uf_tabs_radio_name\" Field Value string Methods GetTabsClasses(int) The default implementation returns the result from GetTabsClasses(int). protected virtual string GetTabsClasses(int aCount) Parameters aCount int Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Containers Classes UFContainerProperties Properties for a container in a web page. UFContainerTagHelper This tag helper renders a container with various options. Renders: <div class=\"{GetContainerClasses()}\"> {children} </div> UFStackItemTagHelper This tag should be used with UFStackTagHelper, each child within the stack should be wrapped with this tag. Renders: <div class=\"{GetStackItemClasses()}\"> {children} </div> UFStackTagHelper Places children on top of each other. Each child should be wrapped with a UFStackItemTagHelper. Renders: <div class=\"{GetStackClasses()}\"> {children} </div> UFTabTagHelper This tag helper is used to render a tab container. It expects to be used as a child of a UFTabsTagHelper. The class renders the following html: <input type=\"radio\" name=\"..\" id=\"{internal}\" class=\"{GetRadioClasses()}\" [checked] /> <label for=\"{internal}\" class=\"{GetLabelClasses()}\">{Caption}</label> <div class=\"{GetContentWrapperClasses()}\"> {children} </div> The css classes should use '+' with the selectors. UFTabsTagHelper This tag helper is used to render a tab container. It expects its children to be instances of UFTabTagHelper. The class will render: <div class=\"{GetTabsClasses}\"> {children} </div> Interfaces IUFContainerProperties Properties for a container that can optionally position its child content. IUFStackItemProperties Properties for a stack item. IUFTabProperties Properties for a tab in a web page."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Data.UFDataItemTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Data.UFDataItemTagHelper.html",
    "title": "Class UFDataItemTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataItemTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Data Assembly UltraForce.Library.Core.Asp.dll This tag helper renders both the name (dt tag) and the value (dd tag) of a data item. public class UFDataItemTagHelper : UFTagHelperWithModelExpressionRenderer, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithTheme UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer UFDataItemTagHelper Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithModelExpressionRenderer.ModelExpressionRenderer UFTagHelperWithViewContext.ViewContext UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFDataItemTagHelper(IUFModelExpressionRenderer, IUFTheme) This tag helper renders both the name (dt tag) and the value (dd tag) of a data item. public UFDataItemTagHelper(IUFModelExpressionRenderer aModelExpressionRenderer, IUFTheme aTheme) Parameters aModelExpressionRenderer IUFModelExpressionRenderer aTheme IUFTheme Properties For When no content is set, use the (display) name of the model property. public ModelExpression? For { get; set; } Property Value ModelExpression Methods GetDataNameClasses() The default implementation calls GetDataNameClasses(). protected virtual string GetDataNameClasses() Returns string GetDataValueClasses() The default implementation calls GetDataValueClasses(). protected virtual string GetDataValueClasses() Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Data.UFDataListTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Data.UFDataListTagHelper.html",
    "title": "Class UFDataListTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataListTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Data Assembly UltraForce.Library.Core.Asp.dll Base class for rendering a data list. It just sets the tag to \"dl\". [HtmlTargetElement(\"uf-data-list\")] public class UFDataListTagHelper : UFTagHelperWithTheme, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithTheme UFDataListTagHelper Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFDataListTagHelper(IUFTheme) Base class for rendering a data list. It just sets the tag to \"dl\". public UFDataListTagHelper(IUFTheme aTheme) Parameters aTheme IUFTheme Methods GetDataListClasses() The default implementation calls GetDataListClasses(). protected virtual string GetDataListClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Data.UFDataNameTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Data.UFDataNameTagHelper.html",
    "title": "Class UFDataNameTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataNameTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Data Assembly UltraForce.Library.Core.Asp.dll Base class for rendering a data definition. [HtmlTargetElement(\"uf-data-name\")] public class UFDataNameTagHelper : UFTagHelperWithModelExpressionRenderer, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithTheme UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer UFDataNameTagHelper Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithModelExpressionRenderer.ModelExpressionRenderer UFTagHelperWithViewContext.ViewContext UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFDataNameTagHelper(IUFModelExpressionRenderer, IUFTheme) Base class for rendering a data definition. public UFDataNameTagHelper(IUFModelExpressionRenderer aModelExpressionRenderer, IUFTheme aTheme) Parameters aModelExpressionRenderer IUFModelExpressionRenderer aTheme IUFTheme Properties For When no content is set, use the (display) name of the model property. public ModelExpression? For { get; set; } Property Value ModelExpression Methods GetDataNameClasses() The default implementation calls GetDataNameClasses(). protected virtual string GetDataNameClasses() Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Data.UFDataValueTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Data.UFDataValueTagHelper.html",
    "title": "Class UFDataValueTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataValueTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Data Assembly UltraForce.Library.Core.Asp.dll Base class for rendering a data definition. [HtmlTargetElement(\"uf-data-value\")] public class UFDataValueTagHelper : UFTagHelperWithModelExpressionRenderer, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithTheme UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer UFDataValueTagHelper Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithModelExpressionRenderer.ModelExpressionRenderer UFTagHelperWithViewContext.ViewContext UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFDataValueTagHelper(IUFModelExpressionRenderer, IUFTheme) Base class for rendering a data definition. public UFDataValueTagHelper(IUFModelExpressionRenderer aModelExpressionRenderer, IUFTheme aTheme) Parameters aModelExpressionRenderer IUFModelExpressionRenderer aTheme IUFTheme Properties For When no content is set, use the (display) name of the model property. public ModelExpression? For { get; set; } Property Value ModelExpression Methods GetDataValueClasses() The default implementation calls GetDataValueClasses(). protected virtual string GetDataValueClasses() Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Data.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Data.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Data | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Data Classes UFDataItemTagHelper This tag helper renders both the name (dt tag) and the value (dd tag) of a data item. UFDataListTagHelper Base class for rendering a data list. It just sets the tag to \"dl\". UFDataNameTagHelper Base class for rendering a data definition. UFDataValueTagHelper Base class for rendering a data definition."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms.IUFInputProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms.IUFInputProperties.html",
    "title": "Interface IUFInputProperties | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFInputProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms Assembly UltraForce.Library.Core.Asp.dll Properties for an input field within a web form. public interface IUFInputProperties Properties Description Additional text that is shown below the label. It is only used if Wrap is true. string Description { get; set; } Property Value string Label When set, use this value for label instead of getting from the For property. When Wrap is false, the property is only used with checkbox and radio elements. For other input elements the value is ignored. string Label { get; set; } Property Value string Multiline When true show a multiline text input (textarea). bool Multiline { get; set; } Property Value bool NoLabel When true do not render a label element. bool NoLabel { get; set; } Property Value bool NoWidth When true do not set a width. bool NoWidth { get; set; } Property Value bool Wrap When true, wrap input element in a div. With false just render the input element. bool Wrap { get; set; } Property Value bool"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms.UFInputProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms.UFInputProperties.html",
    "title": "Class UFInputProperties | UltraForce.Library.Core.Asp",
    "keywords": "Class UFInputProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms Assembly UltraForce.Library.Core.Asp.dll Implements the interface with default values. public class UFInputProperties : IUFInputProperties Inheritance object UFInputProperties Implements IUFInputProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description Additional text that is shown below the label. It is only used if Wrap is true. public string Description { get; set; } Property Value string Label When set, use this value for label instead of getting from the For property. When Wrap is false, the property is only used with checkbox and radio elements. For other input elements the value is ignored. public string Label { get; set; } Property Value string Multiline When true show a multiline text input (textarea). public bool Multiline { get; set; } Property Value bool NoLabel When true do not render a label element. public bool NoLabel { get; set; } Property Value bool NoWidth When true do not set a width. public bool NoWidth { get; set; } Property Value bool Wrap When true, wrap input element in a div. With false just render the input element. public bool Wrap { get; set; } Property Value bool"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms.UFInputTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms.UFInputTagHelper.html",
    "title": "Class UFInputTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFInputTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms Assembly UltraForce.Library.Core.Asp.dll Renders either a text input, a checkbox or a radio button. If no id is set and Wrap is true the class will generate an id so the label can reference the input element. If there are no field errors, the field error block is not rendered. Renders text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextLabelSpanClasses(type)}\">{label}</span> <span class=\"{GetTextLabelDescriptionClasses(type)}\">{description}</span> </label> <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders text input without wrapping: <input class=\"{GetTextInputClasses(type) .../> Renders multiline text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextLabelSpanClasses(type)}\">{label}</span> <span class=\"{GetTextLabelDescriptionClasses(type)}\">{description}</span> </label> <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders multiline text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders multiline text input without wrapping: <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> Renders radio input with wrapping and a label: <div class=\"{GetRadioWrapperClasses()}\"> <label class=\"{GetRadioLabelClasses()}\"> {GetRadioExtraHtml()} <span class=\"{GetRadioLabelSpanClasses()}>{label}</span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input with wrapping but no label: <div class=\"{GetRadioWrapperClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input without wrapping but with a label: <label class=\"{GetRadioLabelClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} <span class=\"{GetRadioLabelSpanClasses()}>{label}</span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> Renders radio input without wrapping and without a label: <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} Renders checkbox input with wrapping and a label: <div class=\"{GetCheckboxWrapperClasses()}\"> <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}>{label}</span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input with wrapping but no label: <div class=\"{GetCheckboxWrapperClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input without wrapping but with a label: <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} ... /> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}>{label}</span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> Renders checkbox input without wrapping and without a label: <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} [HtmlTargetElement(\"uf-input\")] public class UFInputTagHelper : InputTagHelper, ITagHelper, ITagHelperComponent, IUFInputProperties Inheritance object TagHelper InputTagHelper UFInputTagHelper Implements ITagHelper ITagHelperComponent IUFInputProperties Inherited Members InputTagHelper.GetInputType(ModelExplorer, out string) InputTagHelper.Order InputTagHelper.Generator InputTagHelper.ViewContext InputTagHelper.For InputTagHelper.Format InputTagHelper.InputTypeName InputTagHelper.FormName InputTagHelper.Name InputTagHelper.Value TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFInputTagHelper(IHtmlGenerator, IUFTheme) Renders either a text input, a checkbox or a radio button. If no id is set and Wrap is true the class will generate an id so the label can reference the input element. If there are no field errors, the field error block is not rendered. Renders text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextLabelSpanClasses(type)}\">{label}</span> <span class=\"{GetTextLabelDescriptionClasses(type)}\">{description}</span> </label> <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders text input without wrapping: <input class=\"{GetTextInputClasses(type) .../> Renders multiline text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextLabelSpanClasses(type)}\">{label}</span> <span class=\"{GetTextLabelDescriptionClasses(type)}\">{description}</span> </label> <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders multiline text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders multiline text input without wrapping: <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> Renders radio input with wrapping and a label: <div class=\"{GetRadioWrapperClasses()}\"> <label class=\"{GetRadioLabelClasses()}\"> {GetRadioExtraHtml()} <span class=\"{GetRadioLabelSpanClasses()}>{label}</span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input with wrapping but no label: <div class=\"{GetRadioWrapperClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input without wrapping but with a label: <label class=\"{GetRadioLabelClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} <span class=\"{GetRadioLabelSpanClasses()}>{label}</span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> Renders radio input without wrapping and without a label: <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} Renders checkbox input with wrapping and a label: <div class=\"{GetCheckboxWrapperClasses()}\"> <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}>{label}</span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input with wrapping but no label: <div class=\"{GetCheckboxWrapperClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input without wrapping but with a label: <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} ... /> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}>{label}</span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> Renders checkbox input without wrapping and without a label: <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} public UFInputTagHelper(IHtmlGenerator generator, IUFTheme aTheme) Parameters generator IHtmlGenerator aTheme IUFTheme Properties Description Additional text that is shown below the label. It is only used if Wrap is true. [HtmlAttributeName(\"description\")] public string Description { get; set; } Property Value string Label When set, use this value for label instead of getting from the For property. When Wrap is false, the property is only used with checkbox and radio elements. For other input elements the value is ignored. [HtmlAttributeName(\"label\")] public string Label { get; set; } Property Value string Multiline When true show a multiline text input (textarea). [HtmlAttributeName(\"multiline\")] public bool Multiline { get; set; } Property Value bool NoLabel When true do not render a label element. [HtmlAttributeName(\"no-label\")] public bool NoLabel { get; set; } Property Value bool NoWidth When true do not set a width. [HtmlAttributeName(\"no-width\")] public bool NoWidth { get; set; } Property Value bool Theme Shortcut to theme used to style the input. protected IUFTheme Theme { get; } Property Value IUFTheme Wrap When true, wrap input element in a div. With false just render the input element. [HtmlAttributeName(\"wrap\")] public bool Wrap { get; set; } Property Value bool Methods GetCheckboxExtraHtml() Returns the html to use for the checkbox extra content. protected virtual string GetCheckboxExtraHtml() Returns string GetCheckboxInputClasses() Returns the classes to use for the checkbox input element. protected virtual string GetCheckboxInputClasses() Returns string GetCheckboxLabelClasses() Returns the classes to use for the checkbox label element. protected virtual string GetCheckboxLabelClasses() Returns string GetCheckboxLabelDescriptionClasses() Returns the classes to use for the description span element inside the checkbox label. protected virtual string GetCheckboxLabelDescriptionClasses() Returns string GetCheckboxLabelSpanClasses() Returns the classes to use for the span element inside the checkbox label. protected virtual string GetCheckboxLabelSpanClasses() Returns string GetCheckboxWrapperClasses() Returns the classes to use for the checkbox wrapper div element. protected virtual string GetCheckboxWrapperClasses() Returns string GetFieldErrorsClasses() Returns the classes to use for the field errors div element. protected virtual string GetFieldErrorsClasses() Returns string GetFieldErrorsHtml(ModelStateDictionary, string) Returns the html to use for the field errors. protected virtual string GetFieldErrorsHtml(ModelStateDictionary states, string name) Parameters states ModelStateDictionary name string Returns string GetRadioExtraHtml() Returns the html to use for the radio extra content. protected virtual string GetRadioExtraHtml() Returns string GetRadioInputClasses() Returns the classes to use for the radio input element. protected virtual string GetRadioInputClasses() Returns string GetRadioLabelClasses() Returns the classes to use for the radio label element. protected virtual string GetRadioLabelClasses() Returns string GetRadioLabelDescriptionClasses() Returns the classes to use for the description span element inside the radio label. protected virtual string GetRadioLabelDescriptionClasses() Returns string GetRadioLabelSpanClasses() Returns the classes to use for the span element inside the radio label. protected virtual string GetRadioLabelSpanClasses() Returns string GetRadioWrapperClasses() Returns the classes to use for the radio wrapper div element. protected virtual string GetRadioWrapperClasses() Returns string GetTextInputClasses(string) Returns the classes to use for the input element. protected virtual string GetTextInputClasses(string aType) Parameters aType string Returns string GetTextInputWrapperClasses(string) Returns the classes to use for the wrapper div element. protected virtual string GetTextInputWrapperClasses(string aType) Parameters aType string Returns string GetTextLabelClasses(string) Returns the classes to use for the label element. protected virtual string GetTextLabelClasses(string aType) Parameters aType string Returns string GetTextLabelDescriptionClasses(string) Returns the classes to use for the description span element inside the label. protected virtual string GetTextLabelDescriptionClasses(string aType) Parameters aType string Returns string GetTextLabelSpanClasses(string) Returns the classes to use for the span element inside the label. protected virtual string GetTextLabelSpanClasses(string aType) Parameters aType string Returns string GetValidationFeedbackContainerHtml(string) Returns the classes to use for the validation feedback container. protected virtual string GetValidationFeedbackContainerHtml(string anId) Parameters anId string Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Remarks Does nothing if For is null. Exceptions InvalidOperationException Thrown if Format is non-null but For is null."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms.UFSelectTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms.UFSelectTagHelper.html",
    "title": "Class UFSelectTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFSelectTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms Assembly UltraForce.Library.Core.Asp.dll Base class to help with rendering a select element. If not id is set and Wrap is true, the code will generate an id so the label can reference the select element. If there are no field errors, the field error block is not rendered. Renders with wrapping: <div class=\"{GetInputWrapperClasses()}\"> <label class=\"{GetInputLabelClasses()}\" for=\"{id}\">{label}</label> <select class=\"{GetSelectClasses() id={} ...\" > {children} </select> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders without wrapping: <select class=\"{GetSelectClasses()}\" > {children} </select> [HtmlTargetElement(\"uf-select\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFSelectTagHelper : SelectTagHelper, ITagHelper, ITagHelperComponent, IUFInputProperties Inheritance object TagHelper SelectTagHelper UFSelectTagHelper Implements ITagHelper ITagHelperComponent IUFInputProperties Inherited Members SelectTagHelper.Init(TagHelperContext) SelectTagHelper.Order SelectTagHelper.Generator SelectTagHelper.ViewContext SelectTagHelper.For SelectTagHelper.Items SelectTagHelper.Name TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFSelectTagHelper(IHtmlGenerator, IUFTheme) Base class to help with rendering a select element. If not id is set and Wrap is true, the code will generate an id so the label can reference the select element. If there are no field errors, the field error block is not rendered. Renders with wrapping: <div class=\"{GetInputWrapperClasses()}\"> <label class=\"{GetInputLabelClasses()}\" for=\"{id}\">{label}</label> <select class=\"{GetSelectClasses() id={} ...\" > {children} </select> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders without wrapping: <select class=\"{GetSelectClasses()}\" > {children} </select> public UFSelectTagHelper(IHtmlGenerator aGenerator, IUFTheme aTheme) Parameters aGenerator IHtmlGenerator aTheme IUFTheme Properties Description Additional text that is shown below the label. It is only used if Wrap is true. [HtmlAttributeName(\"description\")] public string Description { get; set; } Property Value string Label When set, use this value for label instead of getting from the For property. When Wrap is false, the property is only used with checkbox and radio elements. For other input elements the value is ignored. [HtmlAttributeName(\"label\")] public string Label { get; set; } Property Value string Multiline This property has no effect on this tag helper. [HtmlAttributeNotBound] public bool Multiline { get; set; } Property Value bool NoLabel When true do not render a label element. [HtmlAttributeName(\"no-label\")] public bool NoLabel { get; set; } Property Value bool NoWidth When true do not set a width. [HtmlAttributeName(\"no-width\")] public bool NoWidth { get; set; } Property Value bool Theme Theme to use for styling. protected IUFTheme Theme { get; } Property Value IUFTheme Wrap When true, wrap input element in a div. With false just render the input element. [HtmlAttributeName(\"wrap\")] public bool Wrap { get; set; } Property Value bool Methods GetFieldErrorsClasses() Returns the css classes for the field errors block. protected virtual string GetFieldErrorsClasses() Returns string GetFieldErrorsHtml(ModelStateDictionary, string) Returns the html for the field errors block. protected virtual string GetFieldErrorsHtml(ModelStateDictionary states, string name) Parameters states ModelStateDictionary name string Returns string GetSelectClasses() Returns css classes for the select element. protected virtual string GetSelectClasses() Returns string GetTextLabelClasses(string) Returns css classes for the label element. protected virtual string GetTextLabelClasses(string aType) Parameters aType string Returns string GetTextWrapperClasses(string) Returns css classes for the wrapper element. protected virtual string GetTextWrapperClasses(string aType) Parameters aType string Returns string GetValidationFeedbackContainerHtml(string) Returns the html for the validation feedback container. protected virtual string GetValidationFeedbackContainerHtml(string anId) Parameters anId string Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Remarks Does nothing if For is null."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Forms Classes UFInputTagHelper Renders either a text input, a checkbox or a radio button. If no id is set and Wrap is true the class will generate an id so the label can reference the input element. If there are no field errors, the field error block is not rendered. Renders text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextLabelSpanClasses(type)}\">{label}</span> <span class=\"{GetTextLabelDescriptionClasses(type)}\">{description}</span> </label> <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <input class=\"{GetTextInputClasses(type)}\" id={} .../> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders text input without wrapping: <input class=\"{GetTextInputClasses(type) .../> Renders multiline text input with wrapping and label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <label class=\"{GetTextLabelClasses(type)}\" for=\"{id}\"> <span class=\"{GetTextLabelSpanClasses(type)}\">{label}</span> <span class=\"{GetTextLabelDescriptionClasses(type)}\">{description}</span> </label> <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetValidationFeedbackContainer(id)} {RenderFieldErrors(...)} </div> Renders multiline text input with wrapping and no label: <div class=\"{GetTextInputWrapperClasses(type)}\"> <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders multiline text input without wrapping: <textarea class=\"{GetTextInputClasses(type)}\" id={} ...\" >{value}</textarea> Renders radio input with wrapping and a label: <div class=\"{GetRadioWrapperClasses()}\"> <label class=\"{GetRadioLabelClasses()}\"> {GetRadioExtraHtml()} <span class=\"{GetRadioLabelSpanClasses()}>{label}</span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input with wrapping but no label: <div class=\"{GetRadioWrapperClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders radio input without wrapping but with a label: <label class=\"{GetRadioLabelClasses()}\"> <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} <span class=\"{GetRadioLabelSpanClasses()}>{label}</span> <span class=\"{GetRadioLabelDescriptionClasses()}\">{description}</span> </label> Renders radio input without wrapping and without a label: <input type=\"radio\" class=\"{GetRadioInputClasses()}\" id={} .../> {GetRadioExtraHtml()} Renders checkbox input with wrapping and a label: <div class=\"{GetCheckboxWrapperClasses()}\"> <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}>{label}</span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input with wrapping but no label: <div class=\"{GetCheckboxWrapperClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders checkbox input without wrapping but with a label: <label class=\"{GetCheckboxLabelClasses()}\"> <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} ... /> {GetCheckboxExtraHtml()} <span class=\"{GetCheckboxLabelSpanClasses()}>{label}</span> <span class=\"{GetCheckboxLabelDescriptionClasses()}\">{description}</span> </label> Renders checkbox input without wrapping and without a label: <input type=\"checkbox\" class=\"{GetCheckboxInputClasses()}\" id={} .../> {GetCheckboxExtraHtml()} UFSelectTagHelper Base class to help with rendering a select element. If not id is set and Wrap is true, the code will generate an id so the label can reference the select element. If there are no field errors, the field error block is not rendered. Renders with wrapping: <div class=\"{GetInputWrapperClasses()}\"> <label class=\"{GetInputLabelClasses()}\" for=\"{id}\">{label}</label> <select class=\"{GetSelectClasses() id={} ...\" > {children} </select> {GetValidationFeedbackContainer(id)} <div class=\"{GetFieldErrorsClasses()}\">{GetFieldErrorsHtml()}</div> </div> Renders without wrapping: <select class=\"{GetSelectClasses()}\" > {children} </select> Interfaces IUFInputProperties Properties for an input field within a web form."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.IUFFlexProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.IUFFlexProperties.html",
    "title": "Interface IUFFlexProperties | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFFlexProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout Assembly UltraForce.Library.Core.Asp.dll Properties for a flex container in a web page. public interface IUFFlexProperties Properties AlignCrossAxis How to align the items in the opposite direction. UFFlexAlignItems AlignCrossAxis { get; set; } Property Value UFFlexAlignItems Buttons When true, the container is used to contain buttons. bool Buttons { get; set; } Property Value bool DistributeContentCrossAxis How to distribute the items in the opposite direction. This property is only of use when Wrap is true and there are multiple rows or columns. UFFlexDistributeContent DistributeContentCrossAxis { get; set; } Property Value UFFlexDistributeContent DistributeContentMainAxis How to distribute the items in the direction of the main axis. UFFlexDistributeContent DistributeContentMainAxis { get; set; } Property Value UFFlexDistributeContent FullHeight When true use all available vertical space in the parent. bool FullHeight { get; set; } Property Value bool FullWidth When true use all available horizontal space in the parent. bool FullWidth { get; set; } Property Value bool Gap Gap index, determining minimal space between children. When null, the theme default is used. int? Gap { get; set; } Property Value int? Wrap When true wrap children across multiple rows or columns when they don\"t fit. bool Wrap { get; set; } Property Value bool"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.IUFSpacerProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.IUFSpacerProperties.html",
    "title": "Interface IUFSpacerProperties | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFSpacerProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout Assembly UltraForce.Library.Core.Asp.dll Properties for a spacer element in a container in a web page. public interface IUFSpacerProperties Properties Size Space size. int Size { get; set; } Property Value int"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.UFColumnTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.UFColumnTagHelper.html",
    "title": "Class UFColumnTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFColumnTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout Assembly UltraForce.Library.Core.Asp.dll Places children in a column. Renders: <div class=\"{GetColumnClasses()}\"> {children} </div> [HtmlTargetElement(\"uf-column\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFColumnTagHelper : UFTagHelperWithTheme, ITagHelper, ITagHelperComponent, IUFFlexProperties Inheritance object TagHelper UFTagHelperWithTheme UFColumnTagHelper Implements ITagHelper ITagHelperComponent IUFFlexProperties Inherited Members UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFColumnTagHelper(IUFTheme) Places children in a column. Renders: <div class=\"{GetColumnClasses()}\"> {children} </div> public UFColumnTagHelper(IUFTheme aTheme) Parameters aTheme IUFTheme Properties AlignCrossAxis How to align the items in the opposite direction. [HtmlAttributeName(\"align-cross-axis\")] public UFFlexAlignItems AlignCrossAxis { get; set; } Property Value UFFlexAlignItems Buttons When true, the container is used to contain buttons. [HtmlAttributeName(\"buttons\")] public bool Buttons { get; set; } Property Value bool DistributeContentCrossAxis How to distribute the items in the opposite direction. This property is only of use when Wrap is true and there are multiple rows or columns. [HtmlAttributeName(\"distribute-cross-axis\")] public UFFlexDistributeContent DistributeContentCrossAxis { get; set; } Property Value UFFlexDistributeContent DistributeContentMainAxis How to distribute the items in the direction of the main axis. [HtmlAttributeName(\"distribute-main-axis\")] public UFFlexDistributeContent DistributeContentMainAxis { get; set; } Property Value UFFlexDistributeContent FullHeight When true use all available vertical space in the parent. [HtmlAttributeName(\"full-height\")] public bool FullHeight { get; set; } Property Value bool FullWidth When true use all available horizontal space in the parent. [HtmlAttributeName(\"full-width\")] public bool FullWidth { get; set; } Property Value bool Gap Gap index, determining minimal space between children. When null, the theme default is used. [HtmlAttributeName(\"gap\")] public int? Gap { get; set; } Property Value int? Wrap When true wrap children across multiple rows or columns when they don\"t fit. [HtmlAttributeName(\"wrap\")] public bool Wrap { get; set; } Property Value bool Methods GetColumnClasses() The default implementation calls GetColumnClasses(IUFFlexProperties). protected virtual string GetColumnClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.UFFlexProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.UFFlexProperties.html",
    "title": "Class UFFlexProperties | UltraForce.Library.Core.Asp",
    "keywords": "Class UFFlexProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout Assembly UltraForce.Library.Core.Asp.dll Properties for a flex container in a web page. public class UFFlexProperties : IUFFlexProperties Inheritance object UFFlexProperties Implements IUFFlexProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AlignContent How to distribute the items in the opposite direction. public UFFlexAlignContent AlignContent { get; set; } Property Value UFFlexAlignContent AlignItems How to align the items in the opposite direction. public UFFlexAlignItems AlignItems { get; set; } Property Value UFFlexAlignItems Buttons When true, the container is used to contain buttons. public bool Buttons { get; set; } Property Value bool FullHeight When true use all available vertical space in the parent. public bool FullHeight { get; set; } Property Value bool FullWidth When true use all available horizontal space in the parent. public bool FullWidth { get; set; } Property Value bool Gap Gap index, determining minimal space between children. When null, the theme default is used. public int? Gap { get; set; } Property Value int? JustifyContent How to distribute the items in the direction of the container. public UFFlexJustifyContent JustifyContent { get; set; } Property Value UFFlexJustifyContent Wrap When true wrap children across multiple rows or columns when they don\"t fit. public bool Wrap { get; set; } Property Value bool"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.UFRowTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.UFRowTagHelper.html",
    "title": "Class UFRowTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFRowTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout Assembly UltraForce.Library.Core.Asp.dll Places children in a row. Renders: <div class=\"{GetRowClasses()}\"> {children} </div> [HtmlTargetElement(\"uf-row\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFRowTagHelper : UFTagHelperWithTheme, ITagHelper, ITagHelperComponent, IUFFlexProperties Inheritance object TagHelper UFTagHelperWithTheme UFRowTagHelper Implements ITagHelper ITagHelperComponent IUFFlexProperties Inherited Members UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFRowTagHelper(IUFTheme) Places children in a row. Renders: <div class=\"{GetRowClasses()}\"> {children} </div> public UFRowTagHelper(IUFTheme aTheme) Parameters aTheme IUFTheme Properties AlignCrossAxis How to align the items in the opposite direction. [HtmlAttributeName(\"align-cross-axis\")] public UFFlexAlignItems AlignCrossAxis { get; set; } Property Value UFFlexAlignItems Buttons When true, the container is used to contain buttons. [HtmlAttributeName(\"buttons\")] public bool Buttons { get; set; } Property Value bool DistributeContentCrossAxis How to distribute the items in the opposite direction. This property is only of use when Wrap is true and there are multiple rows or columns. [HtmlAttributeName(\"distribute-cross-axis\")] public UFFlexDistributeContent DistributeContentCrossAxis { get; set; } Property Value UFFlexDistributeContent DistributeContentMainAxis How to distribute the items in the direction of the main axis. [HtmlAttributeName(\"distribute-main-axis\")] public UFFlexDistributeContent DistributeContentMainAxis { get; set; } Property Value UFFlexDistributeContent FullHeight When true use all available vertical space in the parent. [HtmlAttributeName(\"full-height\")] public bool FullHeight { get; set; } Property Value bool FullWidth When true use all available horizontal space in the parent. [HtmlAttributeName(\"full-width\")] public bool FullWidth { get; set; } Property Value bool Gap Gap index, determining minimal space between children. When null, the theme default is used. [HtmlAttributeName(\"gap\")] public int? Gap { get; set; } Property Value int? Wrap When true wrap children across multiple rows or columns when they don\"t fit. [HtmlAttributeName(\"wrap\")] public bool Wrap { get; set; } Property Value bool Methods GetRowClasses() The default implementation calls GetRowClasses(IUFFlexProperties). protected virtual string GetRowClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.UFSpacerProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.UFSpacerProperties.html",
    "title": "Class UFSpacerProperties | UltraForce.Library.Core.Asp",
    "keywords": "Class UFSpacerProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout Assembly UltraForce.Library.Core.Asp.dll Implements the interface with default values. public class UFSpacerProperties : IUFSpacerProperties Inheritance object UFSpacerProperties Implements IUFSpacerProperties Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Size Space size. public int Size { get; set; } Property Value int"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.UFSpacerTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.UFSpacerTagHelper.html",
    "title": "Class UFSpacerTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFSpacerTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout Assembly UltraForce.Library.Core.Asp.dll Adds a space between items in a UFColumnTagHelper or UFRowTagHelper. Renders: <div class=\"{GetCssClasses()}\" /> [HtmlTargetElement(\"uf-spacer\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFSpacerTagHelper : UFTagHelperWithTheme, ITagHelper, ITagHelperComponent, IUFSpacerProperties Inheritance object TagHelper UFTagHelperWithTheme UFSpacerTagHelper Implements ITagHelper ITagHelperComponent IUFSpacerProperties Inherited Members UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFSpacerTagHelper(IUFTheme) Adds a space between items in a UFColumnTagHelper or UFRowTagHelper. Renders: <div class=\"{GetCssClasses()}\" /> public UFSpacerTagHelper(IUFTheme aTheme) Parameters aTheme IUFTheme Properties Size Space size. [HtmlAttributeName(\"size\")] public int Size { get; set; } Property Value int Methods GetSpacerClasses() The default implementation calls GetSpacerClasses(IUFSpacerProperties). protected virtual string GetSpacerClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Layout Classes UFColumnTagHelper Places children in a column. Renders: <div class=\"{GetColumnClasses()}\"> {children} </div> UFRowTagHelper Places children in a row. Renders: <div class=\"{GetRowClasses()}\"> {children} </div> UFSpacerTagHelper Adds a space between items in a UFColumnTagHelper or UFRowTagHelper. Renders: <div class=\"{GetCssClasses()}\" /> Interfaces IUFFlexProperties Properties for a flex container in a web page. IUFSpacerProperties Properties for a spacer element in a container in a web page."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Table.IUFCellProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Table.IUFCellProperties.html",
    "title": "Interface IUFCellProperties | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFCellProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Table Assembly UltraForce.Library.Core.Asp.dll Properties for a table cell in a web page. public interface IUFCellProperties Properties Horizontal Horizontal position of content within the cell UFContentPosition Horizontal { get; set; } Property Value UFContentPosition NoFilter When false (default) the data in the cell can be found via the filter. When true an attribute with the name \"data-no-filter\" is added to the cell tag. This property is only processed when Type is Data. bool NoFilter { get; set; } Property Value bool TextSize Size of text within the cell UFSize TextSize { get; set; } Property Value UFSize Vertical Vertical position of content within the cell UFContentPosition Vertical { get; set; } Property Value UFContentPosition Width When non empty, set this value as width value. This can either be a css class or a style definition. string Width { get; set; } Property Value string Wrap When true wrap content if cell is to small UFWrapType Wrap { get; set; } Property Value UFWrapType"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Table.IUFTableProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Table.IUFTableProperties.html",
    "title": "Interface IUFTableProperties | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFTableProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Table Assembly UltraForce.Library.Core.Asp.dll Propeties for a table in a web page. public interface IUFTableProperties Properties Filter When true add a data-filter attribute with the value \"1\" to the table. bool Filter { get; set; } Property Value bool PageSize Number of rows per page (only used if Paging is true). It will set data-page-size attribute on the table. int PageSize { get; set; } Property Value int Paging When true add a data-paging attribute with the value \"1\" to the table. bool Paging { get; set; } Property Value bool Sorting When true add data-sorting attribute with the value \"1\" to the table. bool Sorting { get; set; } Property Value bool"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Table.IUFTableRowProperties.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Table.IUFTableRowProperties.html",
    "title": "Interface IUFTableRowProperties | UltraForce.Library.Core.Asp",
    "keywords": "Interface IUFTableRowProperties Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Table Assembly UltraForce.Library.Core.Asp.dll Properties for a table row in a web page. public interface IUFTableRowProperties Properties Alternate When true show rows with alternating background colors bool Alternate { get; set; } Property Value bool Hover When true show different background on hover bool Hover { get; set; } Property Value bool SortLocation Keep the row at top or bottom if table gets sorted Setting this value to Top or Bottom will create a `data-sort-location` attribute with either \"top\" or \"bottom\" as value. UFTableSortLocation SortLocation { get; set; } Property Value UFTableSortLocation Type The type of row UFTableRowType Type { get; set; } Property Value UFTableRowType"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Table.UFCellTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Table.UFCellTagHelper.html",
    "title": "Class UFCellTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFCellTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Table Assembly UltraForce.Library.Core.Asp.dll Creates a table cell using custom styling. The cell can be self-closing or can contain content with a separate closing tag. The generated td or th element always uses a opening and closing tag. Rendered html for header: <th class=\"{GetTableCellClasses()}}\">{children}</th> Rendered html for data: <td class=\"{GetTableCellClasses()}}\">{children}</td> Rendered html for buttons (a div is used so that flex or grid styling can be used): <td class=\"{GetTableCellClasses()}}\"> <div class=\"{GetTableHeaderButtonClasses()} > {children} </div> </td> [HtmlTargetElement(\"uf-cell\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFCellTagHelper : UFTagHelperWithModelExpressionRenderer, ITagHelper, ITagHelperComponent, IUFCellProperties Inheritance object TagHelper UFTagHelperWithTheme UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer UFCellTagHelper Implements ITagHelper ITagHelperComponent IUFCellProperties Inherited Members UFTagHelperWithModelExpressionRenderer.ModelExpressionRenderer UFTagHelperWithViewContext.ViewContext UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFCellTagHelper(IUFModelExpressionRenderer, IUFTheme) Creates a table cell using custom styling. The cell can be self-closing or can contain content with a separate closing tag. The generated td or th element always uses a opening and closing tag. Rendered html for header: <th class=\"{GetTableCellClasses()}}\">{children}</th> Rendered html for data: <td class=\"{GetTableCellClasses()}}\">{children}</td> Rendered html for buttons (a div is used so that flex or grid styling can be used): <td class=\"{GetTableCellClasses()}}\"> <div class=\"{GetTableHeaderButtonClasses()} > {children} </div> </td> public UFCellTagHelper(IUFModelExpressionRenderer aModelExpressionRenderer, IUFTheme aTheme) Parameters aModelExpressionRenderer IUFModelExpressionRenderer aTheme IUFTheme Properties For An expression to be evaluated against the current model. When set, the method will use the type to adjust the sort type (if SortType is set to Auto). Date values are formatted using mysql format (so there is no confusion on month and day positions): \"yyyy-mm-dd hh:mm:ss\" If the type of this value is a `bool`, an attribute `data-sort-value` is set with either `0` or `1`. For data cells, the value is used as content for the cell. For header cells, the name is used as content for the cell. [HtmlAttributeName(\"for\")] public ModelExpression? For { get; set; } Property Value ModelExpression Horizontal Horizontal position of content within the cell [HtmlAttributeName(\"horizontal\")] public UFContentPosition Horizontal { get; set; } Property Value UFContentPosition NoCaching When true the cell contents will not be cached with sorting. This is useful when the cell contents will be changed while using a sorted table. [HtmlAttributeName(\"no-caching\")] public bool NoCaching { get; set; } Property Value bool NoFilter When true data in the cell can be found via the filter. When false an attribute with the name \"data-no-filter\" is added to the cell tag. This property is only processed when Type is Data. [HtmlAttributeName(\"no-filter\")] public bool NoFilter { get; set; } Property Value bool SortType Type of sorting (only of use with Header). If type is set to Auto (default) the method will try to determine the type from For. An attribute with the name \"data-sort-type\" will be added to the cell. This attribute contains one of the following values: - \"text\" - \"number\" - \"date\" [HtmlAttributeName(\"sort-type\")] public UFTableSortType SortType { get; set; } Property Value UFTableSortType TextSize Size of text within the cell [HtmlAttributeName(\"text-size\")] public UFSize TextSize { get; set; } Property Value UFSize Type Type of cell. [HtmlAttributeName(\"type\")] public UFTableCellType Type { get; set; } Property Value UFTableCellType Vertical Vertical position of content within the cell [HtmlAttributeName(\"vertical\")] public UFContentPosition Vertical { get; set; } Property Value UFContentPosition Width When non empty, set this value as width value. This can either be a css class or a unit definition. The method IsCssValue(string) is used to determine which. [HtmlAttributeName(\"width\")] public string Width { get; set; } Property Value string Wrap How to wrap the content. [HtmlAttributeName(\"wrap\")] public UFWrapType Wrap { get; set; } Property Value UFWrapType Methods GetTableCellClasses(UFTableCellType, UFTableTagHelper, UFTableRowTagHelper) Returns the css classes for the cell. protected virtual string GetTableCellClasses(UFTableCellType aType, UFTableTagHelper aTable, UFTableRowTagHelper aTableRow) Parameters aType UFTableCellType aTable UFTableTagHelper aTableRow UFTableRowTagHelper Returns string GetTableHeaderButtonClasses(UFTableTagHelper, UFTableRowTagHelper) Returns the css classes for the buttons in the header. protected virtual string GetTableHeaderButtonClasses(UFTableTagHelper aTable, UFTableRowTagHelper aTableRow) Parameters aTable UFTableTagHelper aTableRow UFTableRowTagHelper Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext aContext, TagHelperOutput anOutput) Parameters aContext TagHelperContext anOutput TagHelperOutput Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Table.UFTableRowTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Table.UFTableRowTagHelper.html",
    "title": "Class UFTableRowTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTableRowTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Table Assembly UltraForce.Library.Core.Asp.dll Creates a table row. Renders: <tr class=\"{GetTableRowClasses()}> {children} </tr> [HtmlTargetElement(\"uf-table-row\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFTableRowTagHelper : UFTagHelperWithTheme, ITagHelper, ITagHelperComponent, IUFTableRowProperties Inheritance object TagHelper UFTagHelperWithTheme UFTableRowTagHelper Implements ITagHelper ITagHelperComponent IUFTableRowProperties Inherited Members UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTableRowTagHelper(IUFTheme) Creates a table row. Renders: <tr class=\"{GetTableRowClasses()}> {children} </tr> public UFTableRowTagHelper(IUFTheme aTheme) Parameters aTheme IUFTheme Fields Row The key that children can use to access this instance. public const string Row = \"uf_row\" Field Value string Properties Alternate When true show rows with alternating background colors [HtmlAttributeName(\"alternate\")] public bool Alternate { get; set; } Property Value bool Hover When true show different background on hover [HtmlAttributeName(\"hover\")] public bool Hover { get; set; } Property Value bool SortLocation Keep the row at top or bottom if table gets sorted Setting this value to Top or Bottom will create a `data-sort-location` attribute with either \"top\" or \"bottom\" as value. [HtmlAttributeName(\"sort-location\")] public UFTableSortLocation SortLocation { get; set; } Property Value UFTableSortLocation Type The type of row [HtmlAttributeName(\"type\")] public UFTableRowType Type { get; set; } Property Value UFTableRowType Methods GetTableRowClasses(UFTableTagHelper) Returns the classes for the table row. protected virtual string GetTableRowClasses(UFTableTagHelper aTable) Parameters aTable UFTableTagHelper Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput anOutput) Parameters context TagHelperContext Contains information associated with the current HTML tag. anOutput TagHelperOutput"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Table.UFTableTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Table.UFTableTagHelper.html",
    "title": "Class UFTableTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTableTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Table Assembly UltraForce.Library.Core.Asp.dll Simple tag helper to render a table. Table without filter and sorting: <table class=\"GetTableClasses()\"> {children} </table> Table with a filter: <div> <div class=\"GetFilterContainerClasses()\"> <input {id} class=\"GetFilterInputClasses()\" data-uf-filter-table=\"{id}\" /> <button class=\"GetFilterButtonClasses()\" data-uf-set-field-selector=\"#{id}\"> clear </button> </div> <table class=\"GetTableClasses()\"> {children} </table> </div> Table with sorting: <table class=\"GetTableClasses()\" data-uf-sorting=\"1\" data-uf-sort-ascending=\"GetSortAscendingClasses()\" data-uf-sort-descending=\"GetSortDescendingClasses()\" > {children} </table> [HtmlTargetElement(\"uf-table\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFTableTagHelper : UFTagHelperWithTheme, ITagHelper, ITagHelperComponent, IUFTableProperties Inheritance object TagHelper UFTagHelperWithTheme UFTableTagHelper Implements ITagHelper ITagHelperComponent IUFTableProperties Inherited Members UFTagHelperWithTheme.Theme TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTableTagHelper(IUFTheme) Simple tag helper to render a table. Table without filter and sorting: <table class=\"GetTableClasses()\"> {children} </table> Table with a filter: <div> <div class=\"GetFilterContainerClasses()\"> <input {id} class=\"GetFilterInputClasses()\" data-uf-filter-table=\"{id}\" /> <button class=\"GetFilterButtonClasses()\" data-uf-set-field-selector=\"#{id}\"> clear </button> </div> <table class=\"GetTableClasses()\"> {children} </table> </div> Table with sorting: <table class=\"GetTableClasses()\" data-uf-sorting=\"1\" data-uf-sort-ascending=\"GetSortAscendingClasses()\" data-uf-sort-descending=\"GetSortDescendingClasses()\" > {children} </table> public UFTableTagHelper(IUFTheme aTheme) Parameters aTheme IUFTheme Fields Table The key that children can use to access this instance. public const string Table = \"uf_table\" Field Value string Properties Filter When true add a data-filter attribute with the value \"1\" to the table. [HtmlAttributeName(\"filter\")] public bool Filter { get; set; } Property Value bool PageSize Number of rows per page (only used if Paging is true). It will set data-page-size attribute on the table. [HtmlAttributeName(\"page-size\")] public int PageSize { get; set; } Property Value int Paging When true add a data-paging attribute with the value \"1\" to the table. [HtmlAttributeName(\"paging\")] public bool Paging { get; set; } Property Value bool Sorting When true add data-sorting attribute with the value \"1\" to the table. [HtmlAttributeName(\"sorting\")] public bool Sorting { get; set; } Property Value bool StorageId Assign a value to preserve the sorting and paging state of the table between sessions. When set the state is stored in a local storage of the browser. public string StorageId { get; set; } Property Value string Methods GetFilterButtonClasses() Returns the classes for the filter button. protected virtual string GetFilterButtonClasses() Returns string GetFilterContainerClasses() Returns the classes for the filter container. protected virtual string GetFilterContainerClasses() Returns string GetFilterInputClasses() Returns the classes for the filter input. protected virtual string GetFilterInputClasses() Returns string GetSortAscendingClasses() Returns the classes for the sort ascending icon. protected virtual string GetSortAscendingClasses() Returns string GetSortDescendingClasses() Returns the classes for the sort descending icon. protected virtual string GetSortDescendingClasses() Returns string GetTableClasses() Returns the classes for the table. protected virtual string GetTableClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Table.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Styling.Table.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Table | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Styling.Table Classes UFCellTagHelper Creates a table cell using custom styling. The cell can be self-closing or can contain content with a separate closing tag. The generated td or th element always uses a opening and closing tag. Rendered html for header: <th class=\"{GetTableCellClasses()}}\">{children}</th> Rendered html for data: <td class=\"{GetTableCellClasses()}}\">{children}</td> Rendered html for buttons (a div is used so that flex or grid styling can be used): <td class=\"{GetTableCellClasses()}}\"> <div class=\"{GetTableHeaderButtonClasses()} > {children} </div> </td> UFTableRowTagHelper Creates a table row. Renders: <tr class=\"{GetTableRowClasses()}> {children} </tr> UFTableTagHelper Simple tag helper to render a table. Table without filter and sorting: <table class=\"GetTableClasses()\"> {children} </table> Table with a filter: <div> <div class=\"GetFilterContainerClasses()\"> <input {id} class=\"GetFilterInputClasses()\" data-uf-filter-table=\"{id}\" /> <button class=\"GetFilterButtonClasses()\" data-uf-set-field-selector=\"#{id}\"> clear </button> </div> <table class=\"GetTableClasses()\"> {children} </table> </div> Table with sorting: <table class=\"GetTableClasses()\" data-uf-sorting=\"1\" data-uf-sort-ascending=\"GetSortAscendingClasses()\" data-uf-sort-descending=\"GetSortDescendingClasses()\" > {children} </table> Interfaces IUFCellProperties Properties for a table cell in a web page. IUFTableProperties Propeties for a table in a web page. IUFTableRowProperties Properties for a table row in a web page."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Table.UFCellTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Table.UFCellTagHelper.html",
    "title": "Class UFCellTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFCellTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Table Assembly UltraForce.Library.Core.Asp.dll Creates a table cell. The cell can be self-closing or can contain content with a separate closing tag. The generated td or th element always uses an opening and closing tag. Rendered html for header: <th class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]>{children}</th> Rendered html for data: <td class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]>{children}</td> Rendered html for buttons (a div is used so that flex or grid styling can be used): <td class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]> <div class=\"{GetTableHeaderButtonClasses()} > {children} </div> </td> public abstract class UFCellTagHelper : UFTagHelperWithModelExpressionRenderer, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithViewContext UFTagHelperWithModelExpressionRenderer UFCellTagHelper Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithModelExpressionRenderer.ModelExpressionRenderer UFTagHelperWithViewContext.ViewContext TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFCellTagHelper(IUFModelExpressionRenderer) Creates a table cell. The cell can be self-closing or can contain content with a separate closing tag. The generated td or th element always uses an opening and closing tag. Rendered html for header: <th class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]>{children}</th> Rendered html for data: <td class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]>{children}</td> Rendered html for buttons (a div is used so that flex or grid styling can be used): <td class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]> <div class=\"{GetTableHeaderButtonClasses()} > {children} </div> </td> protected UFCellTagHelper(IUFModelExpressionRenderer aModelExpressionRenderer) Parameters aModelExpressionRenderer IUFModelExpressionRenderer Properties For An expression to be evaluated against the current model. When set, the method will use the type to adjust the sort type (if SortType is set to Auto). Date values are formatted using mysql format (so there is no confusion on month and day positions): \"yyyy-mm-dd hh:mm:ss\" If the type of this value is a `bool`, an attribute `data-sort-value` is set with either `0` or `1`. For data cells, the value is used as content for the cell. For header cells, the name is used as content for the cell. [HtmlAttributeName(\"for\")] public ModelExpression? For { get; set; } Property Value ModelExpression NoCaching When true the cell contents will not be cached with sorting. This is useful when the cell contents will be changed while using a sorted table. [HtmlAttributeName(\"no-caching\")] public bool NoCaching { get; set; } Property Value bool NoFilter When true data in the cell can be found via the filter. When false an attribute with the name \"data-no-filter\" is added to the cell tag. This property is only processed when Type is Data. [HtmlAttributeName(\"no-filter\")] public bool NoFilter { get; set; } Property Value bool SortType Type of sorting (only of use with Header). If type is set to Auto (default) the method will try to determine the type from For. An attribute with the name \"data-sort-type\" will be added to the cell. This attribute contains one of the following values: - \"text\" - \"number\" - \"date\" [HtmlAttributeName(\"sort-type\")] public UFTableSortType SortType { get; set; } Property Value UFTableSortType Type Type of cell. [HtmlAttributeName(\"type\")] public UFTableCellType Type { get; set; } Property Value UFTableCellType Width When non empty, set this value as width value. This can either be a css class or a unit definition. The method IsCssValue(string) is used to determine which. [HtmlAttributeName(\"width\")] public string Width { get; set; } Property Value string Methods GetTableCellClasses(UFTableCellType, UFTableTagHelper, UFTableRowTagHelper) Returns the css classes for the cell. protected virtual string GetTableCellClasses(UFTableCellType aType, UFTableTagHelper aTable, UFTableRowTagHelper aTableRow) Parameters aType UFTableCellType aTable UFTableTagHelper aTableRow UFTableRowTagHelper Returns string GetTableHeaderButtonClasses(UFTableTagHelper, UFTableRowTagHelper) Returns the css classes for the buttons in the header. protected virtual string GetTableHeaderButtonClasses(UFTableTagHelper aTable, UFTableRowTagHelper aTableRow) Parameters aTable UFTableTagHelper aTableRow UFTableRowTagHelper Returns string ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext aContext, TagHelperOutput anOutput) Parameters aContext TagHelperContext anOutput TagHelperOutput Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Table.UFTableRowTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Table.UFTableRowTagHelper.html",
    "title": "Class UFTableRowTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTableRowTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Table Assembly UltraForce.Library.Core.Asp.dll Creates a table row. Renders: <tr class=\"{GetTableRowClasses()}> {children} </tr> public abstract class UFTableRowTagHelper : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTableRowTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTableRowTagHelper() Creates a table row. Renders: <tr class=\"{GetTableRowClasses()}> {children} </tr> protected UFTableRowTagHelper() Fields Row The key that children can use to access this instance. public const string Row = \"uf_row\" Field Value string Properties SortLocation Keep the row at top or bottom if table gets sorted Setting this value to Top or Bottom will create a `data-sort-location` attribute with either \"top\" or \"bottom\" as value. [HtmlAttributeName(\"sort-location\")] public UFTableSortLocation SortLocation { get; set; } Property Value UFTableSortLocation Type The type of row [HtmlAttributeName(\"type\")] public UFTableRowType Type { get; set; } Property Value UFTableRowType Methods GetTableRowClasses(UFTableTagHelper) Returns the classes for the table row. protected virtual string GetTableRowClasses(UFTableTagHelper aTable) Parameters aTable UFTableTagHelper Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput anOutput) Parameters context TagHelperContext Contains information associated with the current HTML tag. anOutput TagHelperOutput"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Table.UFTableTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Table.UFTableTagHelper.html",
    "title": "Class UFTableTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTableTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers.Table Assembly UltraForce.Library.Core.Asp.dll Simple tag helper to render a table. Table without filter and sorting: <table class=\"GetTableClasses()\"> {children} </table> Table with a filter: <div> <div class=\"GetFilterContainerClasses()\"> <input {id} class=\"GetFilterInputClasses()\" data-uf-filter-table=\"{id}\" /> <button class=\"GetFilterButtonClasses()\" data-uf-set-field-selector=\"#{id}\"> clear </button> </div> <table class=\"GetTableClasses()\"> {children} </table> </div> Table with sorting: <table class=\"GetTableClasses()\" data-uf-sorting=\"1\" data-uf-sort-ascending=\"GetSortAscendingClasses()\" data-uf-sort-descending=\"GetSortDescendingClasses()\" > {children} </table> [HtmlTargetElement(\"uf-table\", TagStructure = TagStructure.NormalOrSelfClosing)] public abstract class UFTableTagHelper : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTableTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFTableTagHelper() Simple tag helper to render a table. Table without filter and sorting: <table class=\"GetTableClasses()\"> {children} </table> Table with a filter: <div> <div class=\"GetFilterContainerClasses()\"> <input {id} class=\"GetFilterInputClasses()\" data-uf-filter-table=\"{id}\" /> <button class=\"GetFilterButtonClasses()\" data-uf-set-field-selector=\"#{id}\"> clear </button> </div> <table class=\"GetTableClasses()\"> {children} </table> </div> Table with sorting: <table class=\"GetTableClasses()\" data-uf-sorting=\"1\" data-uf-sort-ascending=\"GetSortAscendingClasses()\" data-uf-sort-descending=\"GetSortDescendingClasses()\" > {children} </table> protected UFTableTagHelper() Fields Table The key that children can use to access this instance. public const string Table = \"uf_table\" Field Value string Properties Filter When true add a data-filter attribute with the value \"1\" to the table. [HtmlAttributeName(\"filter\")] public bool Filter { get; set; } Property Value bool PageSize Number of rows per page (only used if Paging is true). It will set data-page-size attribute on the table. [HtmlAttributeName(\"page-size\")] public int PageSize { get; set; } Property Value int Paging When true add a data-paging attribute with the value \"1\" to the table. [HtmlAttributeName(\"paging\")] public bool Paging { get; set; } Property Value bool Sorting When true add data-sorting attribute with the value \"1\" to the table. [HtmlAttributeName(\"sorting\")] public bool Sorting { get; set; } Property Value bool StorageId Assign a value to preserve the sorting and paging state of the table between sessions. When set the state is stored in a local storage of the browser. public string StorageId { get; set; } Property Value string Methods GetFilterButtonClasses() Returns the classes for the filter button. protected virtual string GetFilterButtonClasses() Returns string GetFilterContainerClasses() Returns the classes for the filter container. protected virtual string GetFilterContainerClasses() Returns string GetFilterInputClasses() Returns the classes for the filter input. protected virtual string GetFilterInputClasses() Returns string GetSortAscendingClasses() Returns the classes for the sort ascending icon. protected virtual string GetSortAscendingClasses() Returns string GetSortDescendingClasses() Returns the classes for the sort descending icon. protected virtual string GetSortDescendingClasses() Returns string GetTableClasses() Returns the classes for the table. protected virtual string GetTableClasses() Returns string Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.Table.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.Table.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Table | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers.Table Classes UFCellTagHelper Creates a table cell. The cell can be self-closing or can contain content with a separate closing tag. The generated td or th element always uses an opening and closing tag. Rendered html for header: <th class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]>{children}</th> Rendered html for data: <td class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]>{children}</td> Rendered html for buttons (a div is used so that flex or grid styling can be used): <td class=\"{GetTableCellClasses()}}\" [style=\"width: {Width}\"]> <div class=\"{GetTableHeaderButtonClasses()} > {children} </div> </td> UFTableRowTagHelper Creates a table row. Renders: <tr class=\"{GetTableRowClasses()}> {children} </tr> UFTableTagHelper Simple tag helper to render a table. Table without filter and sorting: <table class=\"GetTableClasses()\"> {children} </table> Table with a filter: <div> <div class=\"GetFilterContainerClasses()\"> <input {id} class=\"GetFilterInputClasses()\" data-uf-filter-table=\"{id}\" /> <button class=\"GetFilterButtonClasses()\" data-uf-set-field-selector=\"#{id}\"> clear </button> </div> <table class=\"GetTableClasses()\"> {children} </table> </div> Table with sorting: <table class=\"GetTableClasses()\" data-uf-sorting=\"1\" data-uf-sort-ascending=\"GetSortAscendingClasses()\" data-uf-sort-descending=\"GetSortDescendingClasses()\" > {children} </table>"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.UFAttributesTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.UFAttributesTagHelper.html",
    "title": "Class UFAttributesTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFAttributesTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers Assembly UltraForce.Library.Core.Asp.dll This tag helper adds support for uf-attributes attribute. The value is a list of tag helper attributes which get added to the attributes of the tag. [HtmlTargetElement(Attributes = \"uf-attributes\")] public class UFAttributesTagHelper : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFAttributesTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Attributes Condition that will be set via the attribute [HtmlAttributeName(\"uf-attributes\")] public IList<TagHelperAttribute>? Attributes { get; set; } Property Value IList<TagHelperAttribute> Methods Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.UFConditionTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.UFConditionTagHelper.html",
    "title": "Class UFConditionTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFConditionTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers Assembly UltraForce.Library.Core.Asp.dll This tag helper adds support for uf-condition attribute. When specified the tag and its children are only processed if the value is true. [HtmlTargetElement(Attributes = \"uf-condition\")] public class UFConditionTagHelper : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFConditionTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Based on the example code of: https://docs.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/authoring Properties Condition Condition that will be set via the attribute [HtmlAttributeName(\"uf-condition\")] public bool Condition { get; set; } Property Value bool Methods Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.UFDataTitleTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.UFDataTitleTagHelper.html",
    "title": "Class UFDataTitleTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataTitleTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers Assembly UltraForce.Library.Core.Asp.dll This tag helper can be used to set or read data from Title. It is a subclass of UFDataTagHelperBase. [HtmlTargetElement(\"uf-data-title\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFDataTitleTagHelper : UFDataTagHelperBase, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithViewContext UFDataTagHelperBase UFDataTitleTagHelper Implements ITagHelper ITagHelperComponent Inherited Members UFDataTagHelperBase.ProcessAsync(TagHelperContext, TagHelperOutput) UFTagHelperWithViewContext.ViewContext TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFDataTitleTagHelper(IUFViewDataService) This tag helper can be used to set or read data from Title. It is a subclass of UFDataTagHelperBase. public UFDataTitleTagHelper(IUFViewDataService viewDataService) Parameters viewDataService IUFViewDataService Methods GetDataAsync() Returns the stored data to be used as content for the tag. protected override Task<string> GetDataAsync() Returns Task<string> Stored text SetDataAsync(string) Stores the text so it can be used later to create the content for the tag. protected override Task SetDataAsync(string text) Parameters text string Text to store Returns Task"
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.UFNotConditionTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.UFNotConditionTagHelper.html",
    "title": "Class UFNotConditionTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFNotConditionTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers Assembly UltraForce.Library.Core.Asp.dll This tag helper adds support for uf-not-condition attribute. When specified the tag and its children are only processed if the value is false. This tag has the opposite effect of UFConditionTagHelper. [HtmlTargetElement(Attributes = \"uf-not-condition\")] public class UFNotConditionTagHelper : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFNotConditionTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Based on the example code of: https://docs.microsoft.com/en-us/aspnet/core/mvc/views/tag-helpers/authoring Properties NotCondition Condition that will be set via the attribute [HtmlAttributeName(\"uf-not-condition\")] public bool NotCondition { get; set; } Property Value bool Methods Process(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override void Process(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.UFViewdataTagHelper.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.UFViewdataTagHelper.html",
    "title": "Class UFViewdataTagHelper | UltraForce.Library.Core.Asp",
    "keywords": "Class UFViewdataTagHelper Namespace UltraForce.Library.Core.Asp.TagHelpers Assembly UltraForce.Library.Core.Asp.dll This tag helper can be used to set or read data from ViewData. When using the tag with a self closing tag, the content of this tag will be set to text stored ViewData (without any surrounding tags). When using the tag with and open and close tag with some content. The content will be stored in the ViewData. [HtmlTargetElement(\"uf-viewdata\", TagStructure = TagStructure.NormalOrSelfClosing)] public class UFViewdataTagHelper : UFTagHelperWithViewContext, ITagHelper, ITagHelperComponent Inheritance object TagHelper UFTagHelperWithViewContext UFViewdataTagHelper Implements ITagHelper ITagHelperComponent Inherited Members UFTagHelperWithViewContext.ViewContext TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Key The key to use to read or write the data with. [HtmlAttributeName(\"key\")] public string Key { get; set; } Property Value string Methods ProcessAsync(TagHelperContext, TagHelperOutput) Asynchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task A Task that on completion updates the output. Remarks By default this calls into Process(TagHelperContext, TagHelperOutput)."
  },
  "api/UltraForce.Library.Core.Asp.TagHelpers.html": {
    "href": "api/UltraForce.Library.Core.Asp.TagHelpers.html",
    "title": "Namespace UltraForce.Library.Core.Asp.TagHelpers | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.TagHelpers Classes UFAttributesTagHelper This tag helper adds support for uf-attributes attribute. The value is a list of tag helper attributes which get added to the attributes of the tag. UFConditionTagHelper This tag helper adds support for uf-condition attribute. When specified the tag and its children are only processed if the value is true. UFDataTitleTagHelper This tag helper can be used to set or read data from Title. It is a subclass of UFDataTagHelperBase. UFNotConditionTagHelper This tag helper adds support for uf-not-condition attribute. When specified the tag and its children are only processed if the value is false. This tag has the opposite effect of UFConditionTagHelper."
  },
  "api/UltraForce.Library.Core.Asp.Tools.UFCoreHtmlTools.html": {
    "href": "api/UltraForce.Library.Core.Asp.Tools.UFCoreHtmlTools.html",
    "title": "Class UFCoreHtmlTools | UltraForce.Library.Core.Asp",
    "keywords": "Class UFCoreHtmlTools Namespace UltraForce.Library.Core.Asp.Tools Assembly UltraForce.Library.Core.Asp.dll Html support methods. public static class UFCoreHtmlTools Inheritance object UFCoreHtmlTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RemoveDomain(HttpRequest, string) Removes all domain references from a html string. public static string RemoveDomain(HttpRequest request, string html) Parameters request HttpRequest Request to get current domain from html string Returns string"
  },
  "api/UltraForce.Library.Core.Asp.Tools.UFCoreStringTools.html": {
    "href": "api/UltraForce.Library.Core.Asp.Tools.UFCoreStringTools.html",
    "title": "Class UFCoreStringTools | UltraForce.Library.Core.Asp",
    "keywords": "Class UFCoreStringTools Namespace UltraForce.Library.Core.Asp.Tools Assembly UltraForce.Library.Core.Asp.dll An utility class that adds extra string related methods. public static class UFCoreStringTools Inheritance object UFCoreStringTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetString(IHtmlContent) Gets the html content as string. public static string GetString(IHtmlContent content) Parameters content IHtmlContent Content to convert to string Returns string Content as string Utf8ToAscii(string) Converts an utf8 string to ascii string. Characters that can not be converted are removed. public static string Utf8ToAscii(string text) Parameters text string Text using UTF8 encoding Returns string Text using ascii encoding"
  },
  "api/UltraForce.Library.Core.Asp.Tools.UFModelExpressionTools.html": {
    "href": "api/UltraForce.Library.Core.Asp.Tools.UFModelExpressionTools.html",
    "title": "Class UFModelExpressionTools | UltraForce.Library.Core.Asp",
    "keywords": "Class UFModelExpressionTools Namespace UltraForce.Library.Core.Asp.Tools Assembly UltraForce.Library.Core.Asp.dll Support methods for ModelExpression. public static class UFModelExpressionTools Inheritance object UFModelExpressionTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAttribute<TAttribute>(ModelExpression) Tries to get an attribute from the property in a model expression. public static TAttribute? GetAttribute<TAttribute>(ModelExpression modelExpression) where TAttribute : Attribute Parameters modelExpression ModelExpression Expression to check Returns TAttribute Attribute instance or null if none can be found Type Parameters TAttribute Attribute type to find GetEnumValues(ModelExpression) Gets all enum values from a model expression. public static Array GetEnumValues(ModelExpression modelExpression) Parameters modelExpression ModelExpression Model expression to get the values from Returns Array A list of enum values Exceptions InvalidOperationException If the model expression does not contain an enumeration type. IsEnumType(ModelExpression) Checks if a model expression represents an enum type. public static bool IsEnumType(ModelExpression modelExpression) Parameters modelExpression ModelExpression Model expression to check Returns bool True if type is an enum type IsEnumerable(ModelExpression) Checks if a model expression represents an IEnumerable. public static bool IsEnumerable(ModelExpression modelExpression) Parameters modelExpression ModelExpression Returns bool IsGenericEnumerable(ModelExpression) Checks if a model expression represents a generic IEnumerable. public static bool IsGenericEnumerable(ModelExpression modelExpression) Parameters modelExpression ModelExpression Returns bool"
  },
  "api/UltraForce.Library.Core.Asp.Tools.UFMvcTools.html": {
    "href": "api/UltraForce.Library.Core.Asp.Tools.UFMvcTools.html",
    "title": "Class UFMvcTools | UltraForce.Library.Core.Asp",
    "keywords": "Class UFMvcTools Namespace UltraForce.Library.Core.Asp.Tools Assembly UltraForce.Library.Core.Asp.dll UFMvcTools contain static support methods for MVC. public static class UFMvcTools Inheritance object UFMvcTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddFirstItem(SelectList, SelectListItem) Adds an item at the start of a select list. Preserves the selected state. public static SelectList AddFirstItem(SelectList list, SelectListItem newItem) Parameters list SelectList List to add item to newItem SelectListItem Item to insert at first position Returns SelectList New list with item inserted CreateListFromEnum<T>(string?) Creates a SelectList from an enum type. The methods tries to obtain the text from either the display name or the value from UltraForce.Library.NetStandard.Annotations.UFDescriptionAttribute attribute. If both are missing the value is used. public static SelectList CreateListFromEnum<T>(string? emptyChoice = null) where T : struct, Enum Parameters emptyChoice string Returns SelectList Select list Type Parameters T Enum type GetControllerName(string) Checks if the name ends with 'Controller', if it does remove it. public static string GetControllerName(string controller) Parameters controller string Name of controller Returns string Name of controller without 'Controller' at the end GetControllerName<T>() Checks if the type name ends with 'Controller', if it does remove it. public static string GetControllerName<T>() Returns string Name of type without 'Controller' at the end Type Parameters T GetErrors(ModelStateDictionary, string, string, string, string) Gets the errors for a field as a single string public static string GetErrors(ModelStateDictionary aModelState, string name, string divider = \", \", string head = \"\", string tail = \"\") Parameters aModelState ModelStateDictionary Model state to get errors from name string Field name to get errors for divider string Value to place between errors head string Value at start, only used if there are errors tail string Value at end, only used if there are errors Returns string A string containing all errors or Empty if there are no errors or no field with the specified name can be found GetJsonName(object, string) Gets the json name for a property in an object. The method checks if a property has a JsonPropertyNameAttribute and if so returns the name from the attribute. If no attribute can be found the property name is returned. public static string GetJsonName(object value, string propertyName) Parameters value object Object to get property from propertyName string Name of property Returns string Json name or value of aProperty Exceptions Exception When no property can be found for the specified name GetViewComponentName(string) Checks if the name ends with 'ViewComponent', if it does remove it. public static string GetViewComponentName(string component) Parameters component string Name of component Returns string Name of controller without 'ViewComponent' at the end Normalize(string) Returns a normalized value of a string. public static string Normalize(string aValue) Parameters aValue string Value to normalize Returns string Normalized value ReplaceMacros(string, IPrincipal?) Replace macro texts with values. The method replaces the following macro's: {copy}, {year} and {user} public static string ReplaceMacros(string text, IPrincipal? principal = null) Parameters text string text that might contain macro's principal IPrincipal value to get the username from Returns string text with the macro's replaced Validate(object) Validates an object using their validation attributes. public static (bool isValid, ICollection<ValidationResult> results) Validate(object value) Parameters value object Returns (bool isValid, ICollection<ValidationResult> results)"
  },
  "api/UltraForce.Library.Core.Asp.Tools.UFTagHelperTools.html": {
    "href": "api/UltraForce.Library.Core.Asp.Tools.UFTagHelperTools.html",
    "title": "Class UFTagHelperTools | UltraForce.Library.Core.Asp",
    "keywords": "Class UFTagHelperTools Namespace UltraForce.Library.Core.Asp.Tools Assembly UltraForce.Library.Core.Asp.dll Support methods for TagHelper public static class UFTagHelperTools Inheritance object UFTagHelperTools Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAttribute(TagHelperAttributeList, string, string, string) Adds a value for an attribute. If the attribute exists, the value gets inserted before the attributes original value. public static void AddAttribute(TagHelperAttributeList attributes, string attribute, string value, string separator = \" \") Parameters attributes TagHelperAttributeList attribute string value string separator string Used when value is inserted before the original value. Default is a space. AddClasses(TagHelperOutput, string) Shortcut to add css classes to an output. The method calls AddAttribute(TagHelperAttributeList, string, string, string) with the correct parameters. public static void AddClasses(TagHelperOutput output, string classes) Parameters output TagHelperOutput Output to get attributes from classes string Additional css classes to add CreateAttributeList(Dictionary<string, string>) Builds a tag helper attribute list from a dictionary. public static TagHelperAttributeList CreateAttributeList(Dictionary<string, string> attributes) Parameters attributes Dictionary<string, string> Returns TagHelperAttributeList FindAttribute(TagHelperAttributeList, string) Tries to find an attribute with a certain name. public static TagHelperAttribute? FindAttribute(TagHelperAttributeList list, string name) Parameters list TagHelperAttributeList name string Returns TagHelperAttribute GetItem<T>(TagHelperContext, object, T?) Gets an item from the context and typecast it to a certain class type. public static T GetItem<T>(TagHelperContext context, object key, T? defaultValue = null) where T : class Parameters context TagHelperContext Context to get value from. key object Key to get value for. defaultValue T Default value to use if no value was found. If null, an exception is thrown. Returns T Type Parameters T Exceptions InvalidOperationException Thrown if there is no value stored for the key and no default value was used. GetLabel(IHtmlGenerator, ViewContext, ModelExpression?, string) Gets the label from a model expression, by building label with IHtmlGenerator and getting its inner html contents. public static string GetLabel(IHtmlGenerator generator, ViewContext viewContext, ModelExpression? expression, string labelText) Parameters generator IHtmlGenerator Generator to use viewContext ViewContext View context to render in expression ModelExpression Expression to get label from labelText string When non null, use this value instead of getting the label Returns string the inner html or labelText if it was not empty IsCssValue(string) Checks if a value is a floating number with an optional unit like px, em, rem, %, etc. public static bool IsCssValue(string value) Parameters value string Returns bool RenderTagHelperOutput(TagHelperOutput, HtmlEncoder?) Renders the output of a tag helper to a string. See: https://github.com/MissaouiChedy/RenderingTagHelperInsideAnother/blob/master/src/RenderingTagHelperInsideAnother/TagHelpers/WrapperTagHelper.cs public static string RenderTagHelperOutput(TagHelperOutput output, HtmlEncoder? encoder = null) Parameters output TagHelperOutput encoder HtmlEncoder Returns string RenderTagHelper<T>(TagHelperAttributeList, TagHelperContent?) Renders a tag helper to a string. See: https://github.com/MissaouiChedy/RenderingTagHelperInsideAnother/blob/master/src/RenderingTagHelperInsideAnother/TagHelpers/WrapperTagHelper.cs public static string RenderTagHelper<T>(TagHelperAttributeList attributeList, TagHelperContent? childContent = null) where T : TagHelper, new() Parameters attributeList TagHelperAttributeList childContent TagHelperContent Optional child content for the tag helper Returns string Type Parameters T RenderTagHelper<T>(TagHelperContent?) Renders a tag helper that does not use any attributes to a string. public static string RenderTagHelper<T>(TagHelperContent? content = null) where T : TagHelper, new() Parameters content TagHelperContent Optional child content for the tag helper Returns string Type Parameters T RenderTagHelper<T>(Dictionary<string, string>, TagHelperContent?) Renders a tag helper to a string. public static string RenderTagHelper<T>(Dictionary<string, string> attributes, TagHelperContent? childContent = null) where T : TagHelper, new() Parameters attributes Dictionary<string, string> childContent TagHelperContent Optional child content for the tag helper Returns string Type Parameters T RenderTagHelper<T>(Dictionary<string, string>, string) Renders a tag helper that does not use any attributes to a string. public static string RenderTagHelper<T>(Dictionary<string, string> attributeList, string childContent) where T : TagHelper, new() Parameters attributeList Dictionary<string, string> childContent string Optional child content for the tag helper Returns string Type Parameters T RenderTagHelper<T>(string) Renders a tag helper that does not use any attributes to a string. public static string RenderTagHelper<T>(string childContent) where T : TagHelper, new() Parameters childContent string Child content for the tag helper Returns string Type Parameters T SetContentToHtmlAsync(TagHelperOutput, string) Sets the content to a specific html. The html is only set if there is not another tag helper and the content is empty. public static Task SetContentToHtmlAsync(TagHelperOutput output, string html) Parameters output TagHelperOutput Output to update html string Html to set Returns Task SetContentToTagBuilderAsync(TagHelperOutput, Func<TagBuilder>) Sets the content to the inner html of a tag. The content is only set if there is no current content and no other tag helper as adjusted the content already. public static Task SetContentToTagBuilderAsync(TagHelperOutput output, Func<TagBuilder> factory) Parameters output TagHelperOutput Output to update content of factory Func<TagBuilder> Factory that generates a tag to get inner content of Returns Task SetContentToText(TagHelperOutput, string) Sets the content to a specific text. The text is only set if there is not another tag helper and the content is empty. public static Task SetContentToText(TagHelperOutput output, string text) Parameters output TagHelperOutput Output to update text string Text to set Returns Task"
  },
  "api/UltraForce.Library.Core.Asp.Tools.html": {
    "href": "api/UltraForce.Library.Core.Asp.Tools.html",
    "title": "Namespace UltraForce.Library.Core.Asp.Tools | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.Tools Classes UFCoreHtmlTools Html support methods. UFCoreStringTools An utility class that adds extra string related methods. UFModelExpressionTools Support methods for ModelExpression. UFMvcTools UFMvcTools contain static support methods for MVC. UFTagHelperTools Support methods for TagHelper"
  },
  "api/UltraForce.Library.Core.Asp.Types.Classes.UFDataAttribute.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Classes.UFDataAttribute.html",
    "title": "Class UFDataAttribute | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataAttribute Namespace UltraForce.Library.Core.Asp.Types.Classes Assembly UltraForce.Library.Core.Asp.dll Constants mapping to various data attributes used by the Ultra Force DOM typescript library. public static class UFDataAttribute Inheritance object UFDataAttribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DisplayValue Value to assign to the display style. public const string DisplayValue = \"data-uf-display-value\" Field Value string FieldValue Value to use. public const string FieldValue = \"data-uf-field-value\" Field Value string Filter Used by UFTableTagHelperBase. public const string Filter = \"data-uf-filter\" Field Value string FilterTable Used by UFTableTagHelperBase. public const string FilterTable = \"data-uf-filter-table\" Field Value string HeaderRow Used by UFTableRowTagHelperBase. public const string HeaderRow = \"data-uf-header-row\" Field Value string HideIfField Hide the content of the field if some condition is met. public const string HideIfField = \"data-uf-hide-if-field\" Field Value string ImageHeight Set content to height of image. public const string ImageHeight = \"data-uf-image-height\" Field Value string ImageName Set content to name of image. public const string ImageName = \"data-uf-image-name\" Field Value string ImagePreview Image preview for file input. public const string ImagePreview = \"data-uf-image-preview\" Field Value string ImageSize Set content to size of image. public const string ImageSize = \"data-uf-image-size\" Field Value string ImageType Set content to type of image. public const string ImageType = \"data-uf-image-type\" Field Value string ImageWidth Set content to width of image. public const string ImageWidth = \"data-uf-image-width\" Field Value string NoCaching When set don't cache values with sorted tables. public const string NoCaching = \"data-uf-no-caching\" Field Value string NoFilter Used by UFCellTagHelperBase. public const string NoFilter = \"data-uf-no-filter\" Field Value string PageSize Used by UFTableTagHelperBase. public const string PageSize = \"data-uf-page-size\" Field Value string Paging Used by UFTableTagHelperBase. public const string Paging = \"data-uf-paging\" Field Value string SetFieldSelector Points to a clickable element public const string SetFieldSelector = \"data-uf-set-field-selector\" Field Value string SetFieldValue Value to set if clickable element is clicked upon. public const string SetFieldValue = \"data-uf-set-field-value\" Field Value string ShowIfField Show the content of the field if some condition is met. public const string ShowIfField = \"data-uf-show-if-field\" Field Value string SortAscending Used by UFTableTagHelperBase. public const string SortAscending = \"data-uf-sort-ascending\" Field Value string SortDescending Used by UFTableTagHelperBase. public const string SortDescending = \"data-uf-sort-descending\" Field Value string SortLocation Used by UFTableRowTagHelperBase. public const string SortLocation = \"data-uf-sort-location\" Field Value string SortType Used by UFCellTagHelperBase. public const string SortType = \"data-uf-sort-type\" Field Value string SortValue Used by UFCellTagHelperBase. public const string SortValue = \"data-uf-sort-value\" Field Value string Sorting Used by UFTableTagHelperBase. public const string Sorting = \"data-uf-sorting\" Field Value string StorageId Used by various classes. public const string StorageId = \"data-uf-storage-id\" Field Value string"
  },
  "api/UltraForce.Library.Core.Asp.Types.Classes.UFFontAwesome.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Classes.UFFontAwesome.html",
    "title": "Class UFFontAwesome | UltraForce.Library.Core.Asp",
    "keywords": "Class UFFontAwesome Namespace UltraForce.Library.Core.Asp.Types.Classes Assembly UltraForce.Library.Core.Asp.dll A set of constants that map to font awesome icons (without 'fa-' prefix). Obtained from version 5.15.4 public class UFFontAwesome Inheritance object UFFontAwesome Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AccessibleIcon public const string AccessibleIcon = \"accessible-icon\" Field Value string Accusoft public const string Accusoft = \"accusoft\" Field Value string AcquisitionsIncorporated public const string AcquisitionsIncorporated = \"acquisitions-incorporated\" Field Value string Ad public const string Ad = \"ad\" Field Value string AddressBook public const string AddressBook = \"address-book\" Field Value string AddressCard public const string AddressCard = \"address-card\" Field Value string Adjust public const string Adjust = \"adjust\" Field Value string Adn public const string Adn = \"adn\" Field Value string Adversal public const string Adversal = \"adversal\" Field Value string Affiliatetheme public const string Affiliatetheme = \"affiliatetheme\" Field Value string AirFreshener public const string AirFreshener = \"air-freshener\" Field Value string Airbnb public const string Airbnb = \"airbnb\" Field Value string Algolia public const string Algolia = \"algolia\" Field Value string AlignCenter public const string AlignCenter = \"align-center\" Field Value string AlignJustify public const string AlignJustify = \"align-justify\" Field Value string AlignLeft public const string AlignLeft = \"align-left\" Field Value string AlignRight public const string AlignRight = \"align-right\" Field Value string Alipay public const string Alipay = \"alipay\" Field Value string Allergies public const string Allergies = \"allergies\" Field Value string Amazon public const string Amazon = \"amazon\" Field Value string AmazonPay public const string AmazonPay = \"amazon-pay\" Field Value string Ambulance public const string Ambulance = \"ambulance\" Field Value string AmericanSignLanguageInterpreting public const string AmericanSignLanguageInterpreting = \"american-sign-language-interpreting\" Field Value string Amilia public const string Amilia = \"amilia\" Field Value string Anchor public const string Anchor = \"anchor\" Field Value string Android public const string Android = \"android\" Field Value string Angellist public const string Angellist = \"angellist\" Field Value string AngleDoubleDown public const string AngleDoubleDown = \"angle-double-down\" Field Value string AngleDoubleLeft public const string AngleDoubleLeft = \"angle-double-left\" Field Value string AngleDoubleRight public const string AngleDoubleRight = \"angle-double-right\" Field Value string AngleDoubleUp public const string AngleDoubleUp = \"angle-double-up\" Field Value string AngleDown public const string AngleDown = \"angle-down\" Field Value string AngleLeft public const string AngleLeft = \"angle-left\" Field Value string AngleRight public const string AngleRight = \"angle-right\" Field Value string AngleUp public const string AngleUp = \"angle-up\" Field Value string Angry public const string Angry = \"angry\" Field Value string Angrycreative public const string Angrycreative = \"angrycreative\" Field Value string Angular public const string Angular = \"angular\" Field Value string Ankh public const string Ankh = \"ankh\" Field Value string AppStore public const string AppStore = \"app-store\" Field Value string AppStoreIos public const string AppStoreIos = \"app-store-ios\" Field Value string Apper public const string Apper = \"apper\" Field Value string Apple public const string Apple = \"apple\" Field Value string AppleAlt public const string AppleAlt = \"apple-alt\" Field Value string ApplePay public const string ApplePay = \"apple-pay\" Field Value string Archive public const string Archive = \"archive\" Field Value string Archway public const string Archway = \"archway\" Field Value string ArrowAltCircleDown public const string ArrowAltCircleDown = \"arrow-alt-circle-down\" Field Value string ArrowAltCircleLeft public const string ArrowAltCircleLeft = \"arrow-alt-circle-left\" Field Value string ArrowAltCircleRight public const string ArrowAltCircleRight = \"arrow-alt-circle-right\" Field Value string ArrowAltCircleUp public const string ArrowAltCircleUp = \"arrow-alt-circle-up\" Field Value string ArrowCircleDown public const string ArrowCircleDown = \"arrow-circle-down\" Field Value string ArrowCircleLeft public const string ArrowCircleLeft = \"arrow-circle-left\" Field Value string ArrowCircleRight public const string ArrowCircleRight = \"arrow-circle-right\" Field Value string ArrowCircleUp public const string ArrowCircleUp = \"arrow-circle-up\" Field Value string ArrowDown public const string ArrowDown = \"arrow-down\" Field Value string ArrowLeft public const string ArrowLeft = \"arrow-left\" Field Value string ArrowRight public const string ArrowRight = \"arrow-right\" Field Value string ArrowUp public const string ArrowUp = \"arrow-up\" Field Value string ArrowsAlt public const string ArrowsAlt = \"arrows-alt\" Field Value string ArrowsAltH public const string ArrowsAltH = \"arrows-alt-h\" Field Value string ArrowsAltV public const string ArrowsAltV = \"arrows-alt-v\" Field Value string Artstation public const string Artstation = \"artstation\" Field Value string AssistiveListeningSystems public const string AssistiveListeningSystems = \"assistive-listening-systems\" Field Value string Asterisk public const string Asterisk = \"asterisk\" Field Value string Asymmetrik public const string Asymmetrik = \"asymmetrik\" Field Value string At public const string At = \"at\" Field Value string Atlas public const string Atlas = \"atlas\" Field Value string Atlassian public const string Atlassian = \"atlassian\" Field Value string Atom public const string Atom = \"atom\" Field Value string Audible public const string Audible = \"audible\" Field Value string AudioDescription public const string AudioDescription = \"audio-description\" Field Value string Autoprefixer public const string Autoprefixer = \"autoprefixer\" Field Value string Avianex public const string Avianex = \"avianex\" Field Value string Aviato public const string Aviato = \"aviato\" Field Value string Award public const string Award = \"award\" Field Value string Aws public const string Aws = \"aws\" Field Value string Baby public const string Baby = \"baby\" Field Value string BabyCarriage public const string BabyCarriage = \"baby-carriage\" Field Value string Backspace public const string Backspace = \"backspace\" Field Value string Backward public const string Backward = \"backward\" Field Value string Bacon public const string Bacon = \"bacon\" Field Value string Bacteria public const string Bacteria = \"bacteria\" Field Value string Bacterium public const string Bacterium = \"bacterium\" Field Value string Bahai public const string Bahai = \"bahai\" Field Value string BalanceScale public const string BalanceScale = \"balance-scale\" Field Value string BalanceScaleLeft public const string BalanceScaleLeft = \"balance-scale-left\" Field Value string BalanceScaleRight public const string BalanceScaleRight = \"balance-scale-right\" Field Value string Ban public const string Ban = \"ban\" Field Value string BandAid public const string BandAid = \"band-aid\" Field Value string Bandcamp public const string Bandcamp = \"bandcamp\" Field Value string Barcode public const string Barcode = \"barcode\" Field Value string Bars public const string Bars = \"bars\" Field Value string BaseballBall public const string BaseballBall = \"baseball-ball\" Field Value string BasketballBall public const string BasketballBall = \"basketball-ball\" Field Value string Bath public const string Bath = \"bath\" Field Value string BatteryEmpty public const string BatteryEmpty = \"battery-empty\" Field Value string BatteryFull public const string BatteryFull = \"battery-full\" Field Value string BatteryHalf public const string BatteryHalf = \"battery-half\" Field Value string BatteryQuarter public const string BatteryQuarter = \"battery-quarter\" Field Value string BatteryThreeQuarters public const string BatteryThreeQuarters = \"battery-three-quarters\" Field Value string BattleNet public const string BattleNet = \"battle-net\" Field Value string Bed public const string Bed = \"bed\" Field Value string Beer public const string Beer = \"beer\" Field Value string Behance public const string Behance = \"behance\" Field Value string BehanceSquare public const string BehanceSquare = \"behance-square\" Field Value string Bell public const string Bell = \"bell\" Field Value string BellSlash public const string BellSlash = \"bell-slash\" Field Value string BezierCurve public const string BezierCurve = \"bezier-curve\" Field Value string Bible public const string Bible = \"bible\" Field Value string Bicycle public const string Bicycle = \"bicycle\" Field Value string Biking public const string Biking = \"biking\" Field Value string Bimobject public const string Bimobject = \"bimobject\" Field Value string Binoculars public const string Binoculars = \"binoculars\" Field Value string Biohazard public const string Biohazard = \"biohazard\" Field Value string BirthdayCake public const string BirthdayCake = \"birthday-cake\" Field Value string Bitbucket public const string Bitbucket = \"bitbucket\" Field Value string Bitcoin public const string Bitcoin = \"bitcoin\" Field Value string Bity public const string Bity = \"bity\" Field Value string BlackTie public const string BlackTie = \"black-tie\" Field Value string Blackberry public const string Blackberry = \"blackberry\" Field Value string Blender public const string Blender = \"blender\" Field Value string BlenderPhone public const string BlenderPhone = \"blender-phone\" Field Value string Blind public const string Blind = \"blind\" Field Value string Blog public const string Blog = \"blog\" Field Value string Blogger public const string Blogger = \"blogger\" Field Value string BloggerB public const string BloggerB = \"blogger-b\" Field Value string Bluetooth public const string Bluetooth = \"bluetooth\" Field Value string BluetoothB public const string BluetoothB = \"bluetooth-b\" Field Value string Bold public const string Bold = \"bold\" Field Value string Bolt public const string Bolt = \"bolt\" Field Value string Bomb public const string Bomb = \"bomb\" Field Value string Bone public const string Bone = \"bone\" Field Value string Bong public const string Bong = \"bong\" Field Value string Book public const string Book = \"book\" Field Value string BookDead public const string BookDead = \"book-dead\" Field Value string BookMedical public const string BookMedical = \"book-medical\" Field Value string BookOpen public const string BookOpen = \"book-open\" Field Value string BookReader public const string BookReader = \"book-reader\" Field Value string Bookmark public const string Bookmark = \"bookmark\" Field Value string Bootstrap public const string Bootstrap = \"bootstrap\" Field Value string BorderAll public const string BorderAll = \"border-all\" Field Value string BorderNone public const string BorderNone = \"border-none\" Field Value string BorderStyle public const string BorderStyle = \"border-style\" Field Value string BowlingBall public const string BowlingBall = \"bowling-ball\" Field Value string Box public const string Box = \"box\" Field Value string BoxOpen public const string BoxOpen = \"box-open\" Field Value string BoxTissue public const string BoxTissue = \"box-tissue\" Field Value string Boxes public const string Boxes = \"boxes\" Field Value string Braille public const string Braille = \"braille\" Field Value string Brain public const string Brain = \"brain\" Field Value string BreadSlice public const string BreadSlice = \"bread-slice\" Field Value string Briefcase public const string Briefcase = \"briefcase\" Field Value string BriefcaseMedical public const string BriefcaseMedical = \"briefcase-medical\" Field Value string BroadcastTower public const string BroadcastTower = \"broadcast-tower\" Field Value string Broom public const string Broom = \"broom\" Field Value string Brush public const string Brush = \"brush\" Field Value string Btc public const string Btc = \"btc\" Field Value string Buffer public const string Buffer = \"buffer\" Field Value string Bug public const string Bug = \"bug\" Field Value string Building public const string Building = \"building\" Field Value string Bullhorn public const string Bullhorn = \"bullhorn\" Field Value string Bullseye public const string Bullseye = \"bullseye\" Field Value string Burn public const string Burn = \"burn\" Field Value string Buromobelexperte public const string Buromobelexperte = \"buromobelexperte\" Field Value string Bus public const string Bus = \"bus\" Field Value string BusAlt public const string BusAlt = \"bus-alt\" Field Value string BusinessTime public const string BusinessTime = \"business-time\" Field Value string BuyNLarge public const string BuyNLarge = \"buy-n-large\" Field Value string Buysellads public const string Buysellads = \"buysellads\" Field Value string Calculator public const string Calculator = \"calculator\" Field Value string Calendar public const string Calendar = \"calendar\" Field Value string CalendarAlt public const string CalendarAlt = \"calendar-alt\" Field Value string CalendarCheck public const string CalendarCheck = \"calendar-check\" Field Value string CalendarDay public const string CalendarDay = \"calendar-day\" Field Value string CalendarMinus public const string CalendarMinus = \"calendar-minus\" Field Value string CalendarPlus public const string CalendarPlus = \"calendar-plus\" Field Value string CalendarTimes public const string CalendarTimes = \"calendar-times\" Field Value string CalendarWeek public const string CalendarWeek = \"calendar-week\" Field Value string Camera public const string Camera = \"camera\" Field Value string CameraRetro public const string CameraRetro = \"camera-retro\" Field Value string Campground public const string Campground = \"campground\" Field Value string CanadianMapleLeaf public const string CanadianMapleLeaf = \"canadian-maple-leaf\" Field Value string CandyCane public const string CandyCane = \"candy-cane\" Field Value string Cannabis public const string Cannabis = \"cannabis\" Field Value string Capsules public const string Capsules = \"capsules\" Field Value string Car public const string Car = \"car\" Field Value string CarAlt public const string CarAlt = \"car-alt\" Field Value string CarBattery public const string CarBattery = \"car-battery\" Field Value string CarCrash public const string CarCrash = \"car-crash\" Field Value string CarSide public const string CarSide = \"car-side\" Field Value string Caravan public const string Caravan = \"caravan\" Field Value string CaretDown public const string CaretDown = \"caret-down\" Field Value string CaretLeft public const string CaretLeft = \"caret-left\" Field Value string CaretRight public const string CaretRight = \"caret-right\" Field Value string CaretSquareDown public const string CaretSquareDown = \"caret-square-down\" Field Value string CaretSquareLeft public const string CaretSquareLeft = \"caret-square-left\" Field Value string CaretSquareRight public const string CaretSquareRight = \"caret-square-right\" Field Value string CaretSquareUp public const string CaretSquareUp = \"caret-square-up\" Field Value string CaretUp public const string CaretUp = \"caret-up\" Field Value string Carrot public const string Carrot = \"carrot\" Field Value string CartArrowDown public const string CartArrowDown = \"cart-arrow-down\" Field Value string CartPlus public const string CartPlus = \"cart-plus\" Field Value string CashRegister public const string CashRegister = \"cash-register\" Field Value string Cat public const string Cat = \"cat\" Field Value string CcAmazonPay public const string CcAmazonPay = \"cc-amazon-pay\" Field Value string CcAmex public const string CcAmex = \"cc-amex\" Field Value string CcApplePay public const string CcApplePay = \"cc-apple-pay\" Field Value string CcDinersClub public const string CcDinersClub = \"cc-diners-club\" Field Value string CcDiscover public const string CcDiscover = \"cc-discover\" Field Value string CcJcb public const string CcJcb = \"cc-jcb\" Field Value string CcMastercard public const string CcMastercard = \"cc-mastercard\" Field Value string CcPaypal public const string CcPaypal = \"cc-paypal\" Field Value string CcStripe public const string CcStripe = \"cc-stripe\" Field Value string CcVisa public const string CcVisa = \"cc-visa\" Field Value string Centercode public const string Centercode = \"centercode\" Field Value string Centos public const string Centos = \"centos\" Field Value string Certificate public const string Certificate = \"certificate\" Field Value string Chair public const string Chair = \"chair\" Field Value string Chalkboard public const string Chalkboard = \"chalkboard\" Field Value string ChalkboardTeacher public const string ChalkboardTeacher = \"chalkboard-teacher\" Field Value string ChargingStation public const string ChargingStation = \"charging-station\" Field Value string ChartArea public const string ChartArea = \"chart-area\" Field Value string ChartBar public const string ChartBar = \"chart-bar\" Field Value string ChartLine public const string ChartLine = \"chart-line\" Field Value string ChartPie public const string ChartPie = \"chart-pie\" Field Value string Check public const string Check = \"check\" Field Value string CheckCircle public const string CheckCircle = \"check-circle\" Field Value string CheckDouble public const string CheckDouble = \"check-double\" Field Value string CheckSquare public const string CheckSquare = \"check-square\" Field Value string Cheese public const string Cheese = \"cheese\" Field Value string Chess public const string Chess = \"chess\" Field Value string ChessBishop public const string ChessBishop = \"chess-bishop\" Field Value string ChessBoard public const string ChessBoard = \"chess-board\" Field Value string ChessKing public const string ChessKing = \"chess-king\" Field Value string ChessKnight public const string ChessKnight = \"chess-knight\" Field Value string ChessPawn public const string ChessPawn = \"chess-pawn\" Field Value string ChessQueen public const string ChessQueen = \"chess-queen\" Field Value string ChessRook public const string ChessRook = \"chess-rook\" Field Value string ChevronCircleDown public const string ChevronCircleDown = \"chevron-circle-down\" Field Value string ChevronCircleLeft public const string ChevronCircleLeft = \"chevron-circle-left\" Field Value string ChevronCircleRight public const string ChevronCircleRight = \"chevron-circle-right\" Field Value string ChevronCircleUp public const string ChevronCircleUp = \"chevron-circle-up\" Field Value string ChevronDown public const string ChevronDown = \"chevron-down\" Field Value string ChevronLeft public const string ChevronLeft = \"chevron-left\" Field Value string ChevronRight public const string ChevronRight = \"chevron-right\" Field Value string ChevronUp public const string ChevronUp = \"chevron-up\" Field Value string Child public const string Child = \"child\" Field Value string Chrome public const string Chrome = \"chrome\" Field Value string Chromecast public const string Chromecast = \"chromecast\" Field Value string Church public const string Church = \"church\" Field Value string Circle public const string Circle = \"circle\" Field Value string CircleNotch public const string CircleNotch = \"circle-notch\" Field Value string City public const string City = \"city\" Field Value string ClinicMedical public const string ClinicMedical = \"clinic-medical\" Field Value string Clipboard public const string Clipboard = \"clipboard\" Field Value string ClipboardCheck public const string ClipboardCheck = \"clipboard-check\" Field Value string ClipboardList public const string ClipboardList = \"clipboard-list\" Field Value string Clock public const string Clock = \"clock\" Field Value string Clone public const string Clone = \"clone\" Field Value string ClosedCaptioning public const string ClosedCaptioning = \"closed-captioning\" Field Value string Cloud public const string Cloud = \"cloud\" Field Value string CloudDownloadAlt public const string CloudDownloadAlt = \"cloud-download-alt\" Field Value string CloudMeatball public const string CloudMeatball = \"cloud-meatball\" Field Value string CloudMoon public const string CloudMoon = \"cloud-moon\" Field Value string CloudMoonRain public const string CloudMoonRain = \"cloud-moon-rain\" Field Value string CloudRain public const string CloudRain = \"cloud-rain\" Field Value string CloudShowersHeavy public const string CloudShowersHeavy = \"cloud-showers-heavy\" Field Value string CloudSun public const string CloudSun = \"cloud-sun\" Field Value string CloudSunRain public const string CloudSunRain = \"cloud-sun-rain\" Field Value string CloudUploadAlt public const string CloudUploadAlt = \"cloud-upload-alt\" Field Value string Cloudflare public const string Cloudflare = \"cloudflare\" Field Value string Cloudscale public const string Cloudscale = \"cloudscale\" Field Value string Cloudsmith public const string Cloudsmith = \"cloudsmith\" Field Value string Cloudversify public const string Cloudversify = \"cloudversify\" Field Value string Cocktail public const string Cocktail = \"cocktail\" Field Value string Code public const string Code = \"code\" Field Value string CodeBranch public const string CodeBranch = \"code-branch\" Field Value string Codepen public const string Codepen = \"codepen\" Field Value string Codiepie public const string Codiepie = \"codiepie\" Field Value string Coffee public const string Coffee = \"coffee\" Field Value string Cog public const string Cog = \"cog\" Field Value string Cogs public const string Cogs = \"cogs\" Field Value string Coins public const string Coins = \"coins\" Field Value string Columns public const string Columns = \"columns\" Field Value string Comment public const string Comment = \"comment\" Field Value string CommentAlt public const string CommentAlt = \"comment-alt\" Field Value string CommentDollar public const string CommentDollar = \"comment-dollar\" Field Value string CommentDots public const string CommentDots = \"comment-dots\" Field Value string CommentMedical public const string CommentMedical = \"comment-medical\" Field Value string CommentSlash public const string CommentSlash = \"comment-slash\" Field Value string Comments public const string Comments = \"comments\" Field Value string CommentsDollar public const string CommentsDollar = \"comments-dollar\" Field Value string CompactDisc public const string CompactDisc = \"compact-disc\" Field Value string Compass public const string Compass = \"compass\" Field Value string Compress public const string Compress = \"compress\" Field Value string CompressAlt public const string CompressAlt = \"compress-alt\" Field Value string CompressArrowsAlt public const string CompressArrowsAlt = \"compress-arrows-alt\" Field Value string ConciergeBell public const string ConciergeBell = \"concierge-bell\" Field Value string Confluence public const string Confluence = \"confluence\" Field Value string Connectdevelop public const string Connectdevelop = \"connectdevelop\" Field Value string Contao public const string Contao = \"contao\" Field Value string Cookie public const string Cookie = \"cookie\" Field Value string CookieBite public const string CookieBite = \"cookie-bite\" Field Value string Copy public const string Copy = \"copy\" Field Value string Copyright public const string Copyright = \"copyright\" Field Value string CottonBureau public const string CottonBureau = \"cotton-bureau\" Field Value string Couch public const string Couch = \"couch\" Field Value string Cpanel public const string Cpanel = \"cpanel\" Field Value string CreativeCommons public const string CreativeCommons = \"creative-commons\" Field Value string CreativeCommonsBy public const string CreativeCommonsBy = \"creative-commons-by\" Field Value string CreativeCommonsNc public const string CreativeCommonsNc = \"creative-commons-nc\" Field Value string CreativeCommonsNcEu public const string CreativeCommonsNcEu = \"creative-commons-nc-eu\" Field Value string CreativeCommonsNcJp public const string CreativeCommonsNcJp = \"creative-commons-nc-jp\" Field Value string CreativeCommonsNd public const string CreativeCommonsNd = \"creative-commons-nd\" Field Value string CreativeCommonsPd public const string CreativeCommonsPd = \"creative-commons-pd\" Field Value string CreativeCommonsPdAlt public const string CreativeCommonsPdAlt = \"creative-commons-pd-alt\" Field Value string CreativeCommonsRemix public const string CreativeCommonsRemix = \"creative-commons-remix\" Field Value string CreativeCommonsSa public const string CreativeCommonsSa = \"creative-commons-sa\" Field Value string CreativeCommonsSampling public const string CreativeCommonsSampling = \"creative-commons-sampling\" Field Value string CreativeCommonsSamplingPlus public const string CreativeCommonsSamplingPlus = \"creative-commons-sampling-plus\" Field Value string CreativeCommonsShare public const string CreativeCommonsShare = \"creative-commons-share\" Field Value string CreativeCommonsZero public const string CreativeCommonsZero = \"creative-commons-zero\" Field Value string CreditCard public const string CreditCard = \"credit-card\" Field Value string CriticalRole public const string CriticalRole = \"critical-role\" Field Value string Crop public const string Crop = \"crop\" Field Value string CropAlt public const string CropAlt = \"crop-alt\" Field Value string Cross public const string Cross = \"cross\" Field Value string Crosshairs public const string Crosshairs = \"crosshairs\" Field Value string Crow public const string Crow = \"crow\" Field Value string Crown public const string Crown = \"crown\" Field Value string Crutch public const string Crutch = \"crutch\" Field Value string Css3 public const string Css3 = \"css3\" Field Value string Css3Alt public const string Css3Alt = \"css3-alt\" Field Value string Cube public const string Cube = \"cube\" Field Value string Cubes public const string Cubes = \"cubes\" Field Value string Cut public const string Cut = \"cut\" Field Value string Cuttlefish public const string Cuttlefish = \"cuttlefish\" Field Value string Dailymotion public const string Dailymotion = \"dailymotion\" Field Value string DandD public const string DandD = \"d-and-d\" Field Value string DandDBeyond public const string DandDBeyond = \"d-and-d-beyond\" Field Value string Dashcube public const string Dashcube = \"dashcube\" Field Value string Database public const string Database = \"database\" Field Value string Deaf public const string Deaf = \"deaf\" Field Value string Deezer public const string Deezer = \"deezer\" Field Value string Delicious public const string Delicious = \"delicious\" Field Value string Democrat public const string Democrat = \"democrat\" Field Value string Deploydog public const string Deploydog = \"deploydog\" Field Value string Deskpro public const string Deskpro = \"deskpro\" Field Value string Desktop public const string Desktop = \"desktop\" Field Value string Dev public const string Dev = \"dev\" Field Value string Deviantart public const string Deviantart = \"deviantart\" Field Value string Dharmachakra public const string Dharmachakra = \"dharmachakra\" Field Value string Dhl public const string Dhl = \"dhl\" Field Value string Diagnoses public const string Diagnoses = \"diagnoses\" Field Value string Diaspora public const string Diaspora = \"diaspora\" Field Value string Dice public const string Dice = \"dice\" Field Value string DiceD20 public const string DiceD20 = \"dice-d20\" Field Value string DiceD6 public const string DiceD6 = \"dice-d6\" Field Value string DiceFive public const string DiceFive = \"dice-five\" Field Value string DiceFour public const string DiceFour = \"dice-four\" Field Value string DiceOne public const string DiceOne = \"dice-one\" Field Value string DiceSix public const string DiceSix = \"dice-six\" Field Value string DiceThree public const string DiceThree = \"dice-three\" Field Value string DiceTwo public const string DiceTwo = \"dice-two\" Field Value string Digg public const string Digg = \"digg\" Field Value string DigitalOcean public const string DigitalOcean = \"digital-ocean\" Field Value string DigitalTachograph public const string DigitalTachograph = \"digital-tachograph\" Field Value string Directions public const string Directions = \"directions\" Field Value string Discord public const string Discord = \"discord\" Field Value string Discourse public const string Discourse = \"discourse\" Field Value string Disease public const string Disease = \"disease\" Field Value string Divide public const string Divide = \"divide\" Field Value string Dizzy public const string Dizzy = \"dizzy\" Field Value string Dna public const string Dna = \"dna\" Field Value string Dochub public const string Dochub = \"dochub\" Field Value string Docker public const string Docker = \"docker\" Field Value string Dog public const string Dog = \"dog\" Field Value string DollarSign public const string DollarSign = \"dollar-sign\" Field Value string Dolly public const string Dolly = \"dolly\" Field Value string DollyFlatbed public const string DollyFlatbed = \"dolly-flatbed\" Field Value string Donate public const string Donate = \"donate\" Field Value string DoorClosed public const string DoorClosed = \"door-closed\" Field Value string DoorOpen public const string DoorOpen = \"door-open\" Field Value string DotCircle public const string DotCircle = \"dot-circle\" Field Value string Dove public const string Dove = \"dove\" Field Value string Download public const string Download = \"download\" Field Value string Draft2digital public const string Draft2digital = \"draft2digital\" Field Value string DraftingCompass public const string DraftingCompass = \"drafting-compass\" Field Value string Dragon public const string Dragon = \"dragon\" Field Value string DrawPolygon public const string DrawPolygon = \"draw-polygon\" Field Value string Dribbble public const string Dribbble = \"dribbble\" Field Value string DribbbleSquare public const string DribbbleSquare = \"dribbble-square\" Field Value string Dropbox public const string Dropbox = \"dropbox\" Field Value string Drum public const string Drum = \"drum\" Field Value string DrumSteelpan public const string DrumSteelpan = \"drum-steelpan\" Field Value string DrumstickBite public const string DrumstickBite = \"drumstick-bite\" Field Value string Drupal public const string Drupal = \"drupal\" Field Value string Dumbbell public const string Dumbbell = \"dumbbell\" Field Value string Dumpster public const string Dumpster = \"dumpster\" Field Value string DumpsterFire public const string DumpsterFire = \"dumpster-fire\" Field Value string Dungeon public const string Dungeon = \"dungeon\" Field Value string Dyalog public const string Dyalog = \"dyalog\" Field Value string Earlybirds public const string Earlybirds = \"earlybirds\" Field Value string Ebay public const string Ebay = \"ebay\" Field Value string Edge public const string Edge = \"edge\" Field Value string EdgeLegacy public const string EdgeLegacy = \"edge-legacy\" Field Value string Edit public const string Edit = \"edit\" Field Value string Egg public const string Egg = \"egg\" Field Value string Eject public const string Eject = \"eject\" Field Value string Elementor public const string Elementor = \"elementor\" Field Value string EllipsisH public const string EllipsisH = \"ellipsis-h\" Field Value string EllipsisV public const string EllipsisV = \"ellipsis-v\" Field Value string Ello public const string Ello = \"ello\" Field Value string Ember public const string Ember = \"ember\" Field Value string Empire public const string Empire = \"empire\" Field Value string Envelope public const string Envelope = \"envelope\" Field Value string EnvelopeOpen public const string EnvelopeOpen = \"envelope-open\" Field Value string EnvelopeOpenText public const string EnvelopeOpenText = \"envelope-open-text\" Field Value string EnvelopeSquare public const string EnvelopeSquare = \"envelope-square\" Field Value string Envira public const string Envira = \"envira\" Field Value string Equals public const string Equals = \"equals\" Field Value string Eraser public const string Eraser = \"eraser\" Field Value string Erlang public const string Erlang = \"erlang\" Field Value string Ethereum public const string Ethereum = \"ethereum\" Field Value string Ethernet public const string Ethernet = \"ethernet\" Field Value string Etsy public const string Etsy = \"etsy\" Field Value string EuroSign public const string EuroSign = \"euro-sign\" Field Value string Evernote public const string Evernote = \"evernote\" Field Value string ExchangeAlt public const string ExchangeAlt = \"exchange-alt\" Field Value string Exclamation public const string Exclamation = \"exclamation\" Field Value string ExclamationCircle public const string ExclamationCircle = \"exclamation-circle\" Field Value string ExclamationTriangle public const string ExclamationTriangle = \"exclamation-triangle\" Field Value string Expand public const string Expand = \"expand\" Field Value string ExpandAlt public const string ExpandAlt = \"expand-alt\" Field Value string ExpandArrowsAlt public const string ExpandArrowsAlt = \"expand-arrows-alt\" Field Value string Expeditedssl public const string Expeditedssl = \"expeditedssl\" Field Value string ExternalLinkAlt public const string ExternalLinkAlt = \"external-link-alt\" Field Value string ExternalLinkSquareAlt public const string ExternalLinkSquareAlt = \"external-link-square-alt\" Field Value string Eye public const string Eye = \"eye\" Field Value string EyeDropper public const string EyeDropper = \"eye-dropper\" Field Value string EyeSlash public const string EyeSlash = \"eye-slash\" Field Value string Facebook public const string Facebook = \"facebook\" Field Value string FacebookF public const string FacebookF = \"facebook-f\" Field Value string FacebookMessenger public const string FacebookMessenger = \"facebook-messenger\" Field Value string FacebookSquare public const string FacebookSquare = \"facebook-square\" Field Value string Fan public const string Fan = \"fan\" Field Value string FantasyFlightGames public const string FantasyFlightGames = \"fantasy-flight-games\" Field Value string FastBackward public const string FastBackward = \"fast-backward\" Field Value string FastForward public const string FastForward = \"fast-forward\" Field Value string Faucet public const string Faucet = \"faucet\" Field Value string Fax public const string Fax = \"fax\" Field Value string Feather public const string Feather = \"feather\" Field Value string FeatherAlt public const string FeatherAlt = \"feather-alt\" Field Value string Fedex public const string Fedex = \"fedex\" Field Value string Fedora public const string Fedora = \"fedora\" Field Value string Female public const string Female = \"female\" Field Value string FighterJet public const string FighterJet = \"fighter-jet\" Field Value string Figma public const string Figma = \"figma\" Field Value string File public const string File = \"file\" Field Value string FileAlt public const string FileAlt = \"file-alt\" Field Value string FileArchive public const string FileArchive = \"file-archive\" Field Value string FileAudio public const string FileAudio = \"file-audio\" Field Value string FileCode public const string FileCode = \"file-code\" Field Value string FileContract public const string FileContract = \"file-contract\" Field Value string FileCsv public const string FileCsv = \"file-csv\" Field Value string FileDownload public const string FileDownload = \"file-download\" Field Value string FileExcel public const string FileExcel = \"file-excel\" Field Value string FileExport public const string FileExport = \"file-export\" Field Value string FileImage public const string FileImage = \"file-image\" Field Value string FileImport public const string FileImport = \"file-import\" Field Value string FileInvoice public const string FileInvoice = \"file-invoice\" Field Value string FileInvoiceDollar public const string FileInvoiceDollar = \"file-invoice-dollar\" Field Value string FileMedical public const string FileMedical = \"file-medical\" Field Value string FileMedicalAlt public const string FileMedicalAlt = \"file-medical-alt\" Field Value string FilePdf public const string FilePdf = \"file-pdf\" Field Value string FilePowerpoint public const string FilePowerpoint = \"file-powerpoint\" Field Value string FilePrescription public const string FilePrescription = \"file-prescription\" Field Value string FileSignature public const string FileSignature = \"file-signature\" Field Value string FileUpload public const string FileUpload = \"file-upload\" Field Value string FileVideo public const string FileVideo = \"file-video\" Field Value string FileWord public const string FileWord = \"file-word\" Field Value string Fill public const string Fill = \"fill\" Field Value string FillDrip public const string FillDrip = \"fill-drip\" Field Value string Film public const string Film = \"film\" Field Value string Filter public const string Filter = \"filter\" Field Value string Fingerprint public const string Fingerprint = \"fingerprint\" Field Value string Fire public const string Fire = \"fire\" Field Value string FireAlt public const string FireAlt = \"fire-alt\" Field Value string FireExtinguisher public const string FireExtinguisher = \"fire-extinguisher\" Field Value string Firefox public const string Firefox = \"firefox\" Field Value string FirefoxBrowser public const string FirefoxBrowser = \"firefox-browser\" Field Value string FirstAid public const string FirstAid = \"first-aid\" Field Value string FirstOrder public const string FirstOrder = \"first-order\" Field Value string FirstOrderAlt public const string FirstOrderAlt = \"first-order-alt\" Field Value string Firstdraft public const string Firstdraft = \"firstdraft\" Field Value string Fish public const string Fish = \"fish\" Field Value string FistRaised public const string FistRaised = \"fist-raised\" Field Value string FiveHundred public const string FiveHundred = \"500px\" Field Value string Flag public const string Flag = \"flag\" Field Value string FlagCheckered public const string FlagCheckered = \"flag-checkered\" Field Value string FlagUsa public const string FlagUsa = \"flag-usa\" Field Value string Flask public const string Flask = \"flask\" Field Value string Flickr public const string Flickr = \"flickr\" Field Value string Flipboard public const string Flipboard = \"flipboard\" Field Value string Flushed public const string Flushed = \"flushed\" Field Value string Fly public const string Fly = \"fly\" Field Value string Folder public const string Folder = \"folder\" Field Value string FolderMinus public const string FolderMinus = \"folder-minus\" Field Value string FolderOpen public const string FolderOpen = \"folder-open\" Field Value string FolderPlus public const string FolderPlus = \"folder-plus\" Field Value string Font public const string Font = \"font\" Field Value string FontAwesome public const string FontAwesome = \"font-awesome\" Field Value string FontAwesomeAlt public const string FontAwesomeAlt = \"font-awesome-alt\" Field Value string FontAwesomeFlag public const string FontAwesomeFlag = \"font-awesome-flag\" Field Value string FontAwesomeLogoFull public const string FontAwesomeLogoFull = \"font-awesome-logo-full\" Field Value string Fonticons public const string Fonticons = \"fonticons\" Field Value string FonticonsFi public const string FonticonsFi = \"fonticons-fi\" Field Value string FootballBall public const string FootballBall = \"football-ball\" Field Value string FortAwesome public const string FortAwesome = \"fort-awesome\" Field Value string FortAwesomeAlt public const string FortAwesomeAlt = \"fort-awesome-alt\" Field Value string Forumbee public const string Forumbee = \"forumbee\" Field Value string Forward public const string Forward = \"forward\" Field Value string Foursquare public const string Foursquare = \"foursquare\" Field Value string FreeCodeCamp public const string FreeCodeCamp = \"free-code-camp\" Field Value string Freebsd public const string Freebsd = \"freebsd\" Field Value string Frog public const string Frog = \"frog\" Field Value string Frown public const string Frown = \"frown\" Field Value string FrownOpen public const string FrownOpen = \"frown-open\" Field Value string Fulcrum public const string Fulcrum = \"fulcrum\" Field Value string FunnelDollar public const string FunnelDollar = \"funnel-dollar\" Field Value string Futbol public const string Futbol = \"futbol\" Field Value string GalacticRepublic public const string GalacticRepublic = \"galactic-republic\" Field Value string GalacticSenate public const string GalacticSenate = \"galactic-senate\" Field Value string Gamepad public const string Gamepad = \"gamepad\" Field Value string GasPump public const string GasPump = \"gas-pump\" Field Value string Gavel public const string Gavel = \"gavel\" Field Value string Gem public const string Gem = \"gem\" Field Value string Genderless public const string Genderless = \"genderless\" Field Value string GetPocket public const string GetPocket = \"get-pocket\" Field Value string Gg public const string Gg = \"gg\" Field Value string GgCircle public const string GgCircle = \"gg-circle\" Field Value string Ghost public const string Ghost = \"ghost\" Field Value string Gift public const string Gift = \"gift\" Field Value string Gifts public const string Gifts = \"gifts\" Field Value string Git public const string Git = \"git\" Field Value string GitAlt public const string GitAlt = \"git-alt\" Field Value string GitSquare public const string GitSquare = \"git-square\" Field Value string Github public const string Github = \"github\" Field Value string GithubAlt public const string GithubAlt = \"github-alt\" Field Value string GithubSquare public const string GithubSquare = \"github-square\" Field Value string Gitkraken public const string Gitkraken = \"gitkraken\" Field Value string Gitlab public const string Gitlab = \"gitlab\" Field Value string Gitter public const string Gitter = \"gitter\" Field Value string GlassCheers public const string GlassCheers = \"glass-cheers\" Field Value string GlassMartini public const string GlassMartini = \"glass-martini\" Field Value string GlassMartiniAlt public const string GlassMartiniAlt = \"glass-martini-alt\" Field Value string GlassWhiskey public const string GlassWhiskey = \"glass-whiskey\" Field Value string Glasses public const string Glasses = \"glasses\" Field Value string Glide public const string Glide = \"glide\" Field Value string GlideG public const string GlideG = \"glide-g\" Field Value string Globe public const string Globe = \"globe\" Field Value string GlobeAfrica public const string GlobeAfrica = \"globe-africa\" Field Value string GlobeAmericas public const string GlobeAmericas = \"globe-americas\" Field Value string GlobeAsia public const string GlobeAsia = \"globe-asia\" Field Value string GlobeEurope public const string GlobeEurope = \"globe-europe\" Field Value string Gofore public const string Gofore = \"gofore\" Field Value string GolfBall public const string GolfBall = \"golf-ball\" Field Value string Goodreads public const string Goodreads = \"goodreads\" Field Value string GoodreadsG public const string GoodreadsG = \"goodreads-g\" Field Value string Google public const string Google = \"google\" Field Value string GoogleDrive public const string GoogleDrive = \"google-drive\" Field Value string GooglePay public const string GooglePay = \"google-pay\" Field Value string GooglePlay public const string GooglePlay = \"google-play\" Field Value string GooglePlus public const string GooglePlus = \"google-plus\" Field Value string GooglePlusG public const string GooglePlusG = \"google-plus-g\" Field Value string GooglePlusSquare public const string GooglePlusSquare = \"google-plus-square\" Field Value string GoogleWallet public const string GoogleWallet = \"google-wallet\" Field Value string Gopuram public const string Gopuram = \"gopuram\" Field Value string GraduationCap public const string GraduationCap = \"graduation-cap\" Field Value string Gratipay public const string Gratipay = \"gratipay\" Field Value string Grav public const string Grav = \"grav\" Field Value string GreaterThan public const string GreaterThan = \"greater-than\" Field Value string GreaterThanEqual public const string GreaterThanEqual = \"greater-than-equal\" Field Value string Grimace public const string Grimace = \"grimace\" Field Value string Grin public const string Grin = \"grin\" Field Value string GrinAlt public const string GrinAlt = \"grin-alt\" Field Value string GrinBeam public const string GrinBeam = \"grin-beam\" Field Value string GrinBeamSweat public const string GrinBeamSweat = \"grin-beam-sweat\" Field Value string GrinHearts public const string GrinHearts = \"grin-hearts\" Field Value string GrinSquint public const string GrinSquint = \"grin-squint\" Field Value string GrinSquintTears public const string GrinSquintTears = \"grin-squint-tears\" Field Value string GrinStars public const string GrinStars = \"grin-stars\" Field Value string GrinTears public const string GrinTears = \"grin-tears\" Field Value string GrinTongue public const string GrinTongue = \"grin-tongue\" Field Value string GrinTongueSquint public const string GrinTongueSquint = \"grin-tongue-squint\" Field Value string GrinTongueWink public const string GrinTongueWink = \"grin-tongue-wink\" Field Value string GrinWink public const string GrinWink = \"grin-wink\" Field Value string GripHorizontal public const string GripHorizontal = \"grip-horizontal\" Field Value string GripLines public const string GripLines = \"grip-lines\" Field Value string GripLinesVertical public const string GripLinesVertical = \"grip-lines-vertical\" Field Value string GripVertical public const string GripVertical = \"grip-vertical\" Field Value string Gripfire public const string Gripfire = \"gripfire\" Field Value string Grunt public const string Grunt = \"grunt\" Field Value string Guilded public const string Guilded = \"guilded\" Field Value string Guitar public const string Guitar = \"guitar\" Field Value string Gulp public const string Gulp = \"gulp\" Field Value string HackerNews public const string HackerNews = \"hacker-news\" Field Value string HackerNewsSquare public const string HackerNewsSquare = \"hacker-news-square\" Field Value string Hackerrank public const string Hackerrank = \"hackerrank\" Field Value string Hamburger public const string Hamburger = \"hamburger\" Field Value string Hammer public const string Hammer = \"hammer\" Field Value string Hamsa public const string Hamsa = \"hamsa\" Field Value string HandHolding public const string HandHolding = \"hand-holding\" Field Value string HandHoldingHeart public const string HandHoldingHeart = \"hand-holding-heart\" Field Value string HandHoldingMedical public const string HandHoldingMedical = \"hand-holding-medical\" Field Value string HandHoldingUsd public const string HandHoldingUsd = \"hand-holding-usd\" Field Value string HandHoldingWater public const string HandHoldingWater = \"hand-holding-water\" Field Value string HandLizard public const string HandLizard = \"hand-lizard\" Field Value string HandMiddleFinger public const string HandMiddleFinger = \"hand-middle-finger\" Field Value string HandPaper public const string HandPaper = \"hand-paper\" Field Value string HandPeace public const string HandPeace = \"hand-peace\" Field Value string HandPointDown public const string HandPointDown = \"hand-point-down\" Field Value string HandPointLeft public const string HandPointLeft = \"hand-point-left\" Field Value string HandPointRight public const string HandPointRight = \"hand-point-right\" Field Value string HandPointUp public const string HandPointUp = \"hand-point-up\" Field Value string HandPointer public const string HandPointer = \"hand-pointer\" Field Value string HandRock public const string HandRock = \"hand-rock\" Field Value string HandScissors public const string HandScissors = \"hand-scissors\" Field Value string HandSparkles public const string HandSparkles = \"hand-sparkles\" Field Value string HandSpock public const string HandSpock = \"hand-spock\" Field Value string Hands public const string Hands = \"hands\" Field Value string HandsHelping public const string HandsHelping = \"hands-helping\" Field Value string HandsWash public const string HandsWash = \"hands-wash\" Field Value string Handshake public const string Handshake = \"handshake\" Field Value string HandshakeAltSlash public const string HandshakeAltSlash = \"handshake-alt-slash\" Field Value string HandshakeSlash public const string HandshakeSlash = \"handshake-slash\" Field Value string Hanukiah public const string Hanukiah = \"hanukiah\" Field Value string HardHat public const string HardHat = \"hard-hat\" Field Value string Hashtag public const string Hashtag = \"hashtag\" Field Value string HatCowboy public const string HatCowboy = \"hat-cowboy\" Field Value string HatCowboySide public const string HatCowboySide = \"hat-cowboy-side\" Field Value string HatWizard public const string HatWizard = \"hat-wizard\" Field Value string Hdd public const string Hdd = \"hdd\" Field Value string HeadSideCough public const string HeadSideCough = \"head-side-cough\" Field Value string HeadSideCoughSlash public const string HeadSideCoughSlash = \"head-side-cough-slash\" Field Value string HeadSideMask public const string HeadSideMask = \"head-side-mask\" Field Value string HeadSideVirus public const string HeadSideVirus = \"head-side-virus\" Field Value string Heading public const string Heading = \"heading\" Field Value string Headphones public const string Headphones = \"headphones\" Field Value string HeadphonesAlt public const string HeadphonesAlt = \"headphones-alt\" Field Value string Headset public const string Headset = \"headset\" Field Value string Heart public const string Heart = \"heart\" Field Value string HeartBroken public const string HeartBroken = \"heart-broken\" Field Value string Heartbeat public const string Heartbeat = \"heartbeat\" Field Value string Helicopter public const string Helicopter = \"helicopter\" Field Value string Highlighter public const string Highlighter = \"highlighter\" Field Value string Hiking public const string Hiking = \"hiking\" Field Value string Hippo public const string Hippo = \"hippo\" Field Value string Hips public const string Hips = \"hips\" Field Value string HireAHelper public const string HireAHelper = \"hire-a-helper\" Field Value string History public const string History = \"history\" Field Value string Hive public const string Hive = \"hive\" Field Value string HockeyPuck public const string HockeyPuck = \"hockey-puck\" Field Value string HollyBerry public const string HollyBerry = \"holly-berry\" Field Value string Home public const string Home = \"home\" Field Value string Hooli public const string Hooli = \"hooli\" Field Value string Hornbill public const string Hornbill = \"hornbill\" Field Value string Horse public const string Horse = \"horse\" Field Value string HorseHead public const string HorseHead = \"horse-head\" Field Value string Hospital public const string Hospital = \"hospital\" Field Value string HospitalAlt public const string HospitalAlt = \"hospital-alt\" Field Value string HospitalSymbol public const string HospitalSymbol = \"hospital-symbol\" Field Value string HospitalUser public const string HospitalUser = \"hospital-user\" Field Value string HotTub public const string HotTub = \"hot-tub\" Field Value string Hotdog public const string Hotdog = \"hotdog\" Field Value string Hotel public const string Hotel = \"hotel\" Field Value string Hotjar public const string Hotjar = \"hotjar\" Field Value string Hourglass public const string Hourglass = \"hourglass\" Field Value string HourglassEnd public const string HourglassEnd = \"hourglass-end\" Field Value string HourglassHalf public const string HourglassHalf = \"hourglass-half\" Field Value string HourglassStart public const string HourglassStart = \"hourglass-start\" Field Value string HouseDamage public const string HouseDamage = \"house-damage\" Field Value string HouseUser public const string HouseUser = \"house-user\" Field Value string Houzz public const string Houzz = \"houzz\" Field Value string Hryvnia public const string Hryvnia = \"hryvnia\" Field Value string Hsquare public const string Hsquare = \"h-square\" Field Value string Html5 public const string Html5 = \"html5\" Field Value string Hubspot public const string Hubspot = \"hubspot\" Field Value string IceCream public const string IceCream = \"ice-cream\" Field Value string Icicles public const string Icicles = \"icicles\" Field Value string Icons public const string Icons = \"icons\" Field Value string Icursor public const string Icursor = \"i-cursor\" Field Value string IdBadge public const string IdBadge = \"id-badge\" Field Value string IdCard public const string IdCard = \"id-card\" Field Value string IdCardAlt public const string IdCardAlt = \"id-card-alt\" Field Value string Ideal public const string Ideal = \"ideal\" Field Value string Igloo public const string Igloo = \"igloo\" Field Value string Image public const string Image = \"image\" Field Value string Images public const string Images = \"images\" Field Value string Imdb public const string Imdb = \"imdb\" Field Value string Inbox public const string Inbox = \"inbox\" Field Value string Indent public const string Indent = \"indent\" Field Value string Industry public const string Industry = \"industry\" Field Value string Infinity public const string Infinity = \"infinity\" Field Value string Info public const string Info = \"info\" Field Value string InfoCircle public const string InfoCircle = \"info-circle\" Field Value string Innosoft public const string Innosoft = \"innosoft\" Field Value string Instagram public const string Instagram = \"instagram\" Field Value string InstagramSquare public const string InstagramSquare = \"instagram-square\" Field Value string Instalod public const string Instalod = \"instalod\" Field Value string Intercom public const string Intercom = \"intercom\" Field Value string InternetExplorer public const string InternetExplorer = \"internet-explorer\" Field Value string Invision public const string Invision = \"invision\" Field Value string Ioxhost public const string Ioxhost = \"ioxhost\" Field Value string Italic public const string Italic = \"italic\" Field Value string ItchIo public const string ItchIo = \"itch-io\" Field Value string Itunes public const string Itunes = \"itunes\" Field Value string ItunesNote public const string ItunesNote = \"itunes-note\" Field Value string Java public const string Java = \"java\" Field Value string Jedi public const string Jedi = \"jedi\" Field Value string JediOrder public const string JediOrder = \"jedi-order\" Field Value string Jenkins public const string Jenkins = \"jenkins\" Field Value string Jira public const string Jira = \"jira\" Field Value string Joget public const string Joget = \"joget\" Field Value string Joint public const string Joint = \"joint\" Field Value string Joomla public const string Joomla = \"joomla\" Field Value string JournalWhills public const string JournalWhills = \"journal-whills\" Field Value string Js public const string Js = \"js\" Field Value string JsSquare public const string JsSquare = \"js-square\" Field Value string Jsfiddle public const string Jsfiddle = \"jsfiddle\" Field Value string Kaaba public const string Kaaba = \"kaaba\" Field Value string Kaggle public const string Kaggle = \"kaggle\" Field Value string Key public const string Key = \"key\" Field Value string Keybase public const string Keybase = \"keybase\" Field Value string Keyboard public const string Keyboard = \"keyboard\" Field Value string Keycdn public const string Keycdn = \"keycdn\" Field Value string Khanda public const string Khanda = \"khanda\" Field Value string Kickstarter public const string Kickstarter = \"kickstarter\" Field Value string KickstarterK public const string KickstarterK = \"kickstarter-k\" Field Value string Kiss public const string Kiss = \"kiss\" Field Value string KissBeam public const string KissBeam = \"kiss-beam\" Field Value string KissWinkHeart public const string KissWinkHeart = \"kiss-wink-heart\" Field Value string KiwiBird public const string KiwiBird = \"kiwi-bird\" Field Value string Korvue public const string Korvue = \"korvue\" Field Value string Landmark public const string Landmark = \"landmark\" Field Value string Language public const string Language = \"language\" Field Value string Laptop public const string Laptop = \"laptop\" Field Value string LaptopCode public const string LaptopCode = \"laptop-code\" Field Value string LaptopHouse public const string LaptopHouse = \"laptop-house\" Field Value string LaptopMedical public const string LaptopMedical = \"laptop-medical\" Field Value string Laravel public const string Laravel = \"laravel\" Field Value string Lastfm public const string Lastfm = \"lastfm\" Field Value string LastfmSquare public const string LastfmSquare = \"lastfm-square\" Field Value string Laugh public const string Laugh = \"laugh\" Field Value string LaughBeam public const string LaughBeam = \"laugh-beam\" Field Value string LaughSquint public const string LaughSquint = \"laugh-squint\" Field Value string LaughWink public const string LaughWink = \"laugh-wink\" Field Value string LayerGroup public const string LayerGroup = \"layer-group\" Field Value string Leaf public const string Leaf = \"leaf\" Field Value string Leanpub public const string Leanpub = \"leanpub\" Field Value string Lemon public const string Lemon = \"lemon\" Field Value string Less public const string Less = \"less\" Field Value string LessThan public const string LessThan = \"less-than\" Field Value string LessThanEqual public const string LessThanEqual = \"less-than-equal\" Field Value string LevelDownAlt public const string LevelDownAlt = \"level-down-alt\" Field Value string LevelUpAlt public const string LevelUpAlt = \"level-up-alt\" Field Value string LifeRing public const string LifeRing = \"life-ring\" Field Value string Lightbulb public const string Lightbulb = \"lightbulb\" Field Value string Line public const string Line = \"line\" Field Value string Link public const string Link = \"link\" Field Value string Linkedin public const string Linkedin = \"linkedin\" Field Value string LinkedinIn public const string LinkedinIn = \"linkedin-in\" Field Value string Linode public const string Linode = \"linode\" Field Value string Linux public const string Linux = \"linux\" Field Value string LiraSign public const string LiraSign = \"lira-sign\" Field Value string List public const string List = \"list\" Field Value string ListAlt public const string ListAlt = \"list-alt\" Field Value string ListOl public const string ListOl = \"list-ol\" Field Value string ListUl public const string ListUl = \"list-ul\" Field Value string LocationArrow public const string LocationArrow = \"location-arrow\" Field Value string Lock public const string Lock = \"lock\" Field Value string LockOpen public const string LockOpen = \"lock-open\" Field Value string LongArrowAltDown public const string LongArrowAltDown = \"long-arrow-alt-down\" Field Value string LongArrowAltLeft public const string LongArrowAltLeft = \"long-arrow-alt-left\" Field Value string LongArrowAltRight public const string LongArrowAltRight = \"long-arrow-alt-right\" Field Value string LongArrowAltUp public const string LongArrowAltUp = \"long-arrow-alt-up\" Field Value string LowVision public const string LowVision = \"low-vision\" Field Value string LuggageCart public const string LuggageCart = \"luggage-cart\" Field Value string Lungs public const string Lungs = \"lungs\" Field Value string LungsVirus public const string LungsVirus = \"lungs-virus\" Field Value string Lyft public const string Lyft = \"lyft\" Field Value string Magento public const string Magento = \"magento\" Field Value string Magic public const string Magic = \"magic\" Field Value string Magnet public const string Magnet = \"magnet\" Field Value string MailBulk public const string MailBulk = \"mail-bulk\" Field Value string Mailchimp public const string Mailchimp = \"mailchimp\" Field Value string Male public const string Male = \"male\" Field Value string Mandalorian public const string Mandalorian = \"mandalorian\" Field Value string Map public const string Map = \"map\" Field Value string MapMarked public const string MapMarked = \"map-marked\" Field Value string MapMarkedAlt public const string MapMarkedAlt = \"map-marked-alt\" Field Value string MapMarker public const string MapMarker = \"map-marker\" Field Value string MapMarkerAlt public const string MapMarkerAlt = \"map-marker-alt\" Field Value string MapPin public const string MapPin = \"map-pin\" Field Value string MapSigns public const string MapSigns = \"map-signs\" Field Value string Markdown public const string Markdown = \"markdown\" Field Value string Marker public const string Marker = \"marker\" Field Value string Mars public const string Mars = \"mars\" Field Value string MarsDouble public const string MarsDouble = \"mars-double\" Field Value string MarsStroke public const string MarsStroke = \"mars-stroke\" Field Value string MarsStrokeH public const string MarsStrokeH = \"mars-stroke-h\" Field Value string MarsStrokeV public const string MarsStrokeV = \"mars-stroke-v\" Field Value string Mask public const string Mask = \"mask\" Field Value string Mastodon public const string Mastodon = \"mastodon\" Field Value string Maxcdn public const string Maxcdn = \"maxcdn\" Field Value string Mdb public const string Mdb = \"mdb\" Field Value string Medal public const string Medal = \"medal\" Field Value string Medapps public const string Medapps = \"medapps\" Field Value string Medium public const string Medium = \"medium\" Field Value string MediumM public const string MediumM = \"medium-m\" Field Value string Medkit public const string Medkit = \"medkit\" Field Value string Medrt public const string Medrt = \"medrt\" Field Value string Meetup public const string Meetup = \"meetup\" Field Value string Megaport public const string Megaport = \"megaport\" Field Value string Meh public const string Meh = \"meh\" Field Value string MehBlank public const string MehBlank = \"meh-blank\" Field Value string MehRollingEyes public const string MehRollingEyes = \"meh-rolling-eyes\" Field Value string Memory public const string Memory = \"memory\" Field Value string Mendeley public const string Mendeley = \"mendeley\" Field Value string Menorah public const string Menorah = \"menorah\" Field Value string Mercury public const string Mercury = \"mercury\" Field Value string Meteor public const string Meteor = \"meteor\" Field Value string Microblog public const string Microblog = \"microblog\" Field Value string Microchip public const string Microchip = \"microchip\" Field Value string Microphone public const string Microphone = \"microphone\" Field Value string MicrophoneAlt public const string MicrophoneAlt = \"microphone-alt\" Field Value string MicrophoneAltSlash public const string MicrophoneAltSlash = \"microphone-alt-slash\" Field Value string MicrophoneSlash public const string MicrophoneSlash = \"microphone-slash\" Field Value string Microscope public const string Microscope = \"microscope\" Field Value string Microsoft public const string Microsoft = \"microsoft\" Field Value string Minus public const string Minus = \"minus\" Field Value string MinusCircle public const string MinusCircle = \"minus-circle\" Field Value string MinusSquare public const string MinusSquare = \"minus-square\" Field Value string Mitten public const string Mitten = \"mitten\" Field Value string Mix public const string Mix = \"mix\" Field Value string Mixcloud public const string Mixcloud = \"mixcloud\" Field Value string Mixer public const string Mixer = \"mixer\" Field Value string Mizuni public const string Mizuni = \"mizuni\" Field Value string Mobile public const string Mobile = \"mobile\" Field Value string MobileAlt public const string MobileAlt = \"mobile-alt\" Field Value string Modx public const string Modx = \"modx\" Field Value string Monero public const string Monero = \"monero\" Field Value string MoneyBill public const string MoneyBill = \"money-bill\" Field Value string MoneyBillAlt public const string MoneyBillAlt = \"money-bill-alt\" Field Value string MoneyBillWave public const string MoneyBillWave = \"money-bill-wave\" Field Value string MoneyBillWaveAlt public const string MoneyBillWaveAlt = \"money-bill-wave-alt\" Field Value string MoneyCheck public const string MoneyCheck = \"money-check\" Field Value string MoneyCheckAlt public const string MoneyCheckAlt = \"money-check-alt\" Field Value string Monument public const string Monument = \"monument\" Field Value string Moon public const string Moon = \"moon\" Field Value string MortarPestle public const string MortarPestle = \"mortar-pestle\" Field Value string Mosque public const string Mosque = \"mosque\" Field Value string Motorcycle public const string Motorcycle = \"motorcycle\" Field Value string Mountain public const string Mountain = \"mountain\" Field Value string Mouse public const string Mouse = \"mouse\" Field Value string MousePointer public const string MousePointer = \"mouse-pointer\" Field Value string MugHot public const string MugHot = \"mug-hot\" Field Value string Music public const string Music = \"music\" Field Value string Napster public const string Napster = \"napster\" Field Value string Neos public const string Neos = \"neos\" Field Value string NetworkWired public const string NetworkWired = \"network-wired\" Field Value string Neuter public const string Neuter = \"neuter\" Field Value string Newspaper public const string Newspaper = \"newspaper\" Field Value string Nimblr public const string Nimblr = \"nimblr\" Field Value string Node public const string Node = \"node\" Field Value string NodeJs public const string NodeJs = \"node-js\" Field Value string NotEqual public const string NotEqual = \"not-equal\" Field Value string NotesMedical public const string NotesMedical = \"notes-medical\" Field Value string Npm public const string Npm = \"npm\" Field Value string Ns8 public const string Ns8 = \"ns8\" Field Value string Nutritionix public const string Nutritionix = \"nutritionix\" Field Value string ObjectGroup public const string ObjectGroup = \"object-group\" Field Value string ObjectUngroup public const string ObjectUngroup = \"object-ungroup\" Field Value string OctopusDeploy public const string OctopusDeploy = \"octopus-deploy\" Field Value string Odnoklassniki public const string Odnoklassniki = \"odnoklassniki\" Field Value string OdnoklassnikiSquare public const string OdnoklassnikiSquare = \"odnoklassniki-square\" Field Value string OilCan public const string OilCan = \"oil-can\" Field Value string OldRepublic public const string OldRepublic = \"old-republic\" Field Value string Om public const string Om = \"om\" Field Value string Opencart public const string Opencart = \"opencart\" Field Value string Openid public const string Openid = \"openid\" Field Value string Opera public const string Opera = \"opera\" Field Value string OptinMonster public const string OptinMonster = \"optin-monster\" Field Value string Orcid public const string Orcid = \"orcid\" Field Value string Osi public const string Osi = \"osi\" Field Value string Otter public const string Otter = \"otter\" Field Value string Outdent public const string Outdent = \"outdent\" Field Value string Page4 public const string Page4 = \"page4\" Field Value string Pagelines public const string Pagelines = \"pagelines\" Field Value string Pager public const string Pager = \"pager\" Field Value string PaintBrush public const string PaintBrush = \"paint-brush\" Field Value string PaintRoller public const string PaintRoller = \"paint-roller\" Field Value string Palette public const string Palette = \"palette\" Field Value string Palfed public const string Palfed = \"palfed\" Field Value string Pallet public const string Pallet = \"pallet\" Field Value string PaperPlane public const string PaperPlane = \"paper-plane\" Field Value string Paperclip public const string Paperclip = \"paperclip\" Field Value string ParachuteBox public const string ParachuteBox = \"parachute-box\" Field Value string Paragraph public const string Paragraph = \"paragraph\" Field Value string Parking public const string Parking = \"parking\" Field Value string Passport public const string Passport = \"passport\" Field Value string Pastafarianism public const string Pastafarianism = \"pastafarianism\" Field Value string Paste public const string Paste = \"paste\" Field Value string Patreon public const string Patreon = \"patreon\" Field Value string Pause public const string Pause = \"pause\" Field Value string PauseCircle public const string PauseCircle = \"pause-circle\" Field Value string Paw public const string Paw = \"paw\" Field Value string Paypal public const string Paypal = \"paypal\" Field Value string Peace public const string Peace = \"peace\" Field Value string Pen public const string Pen = \"pen\" Field Value string PenAlt public const string PenAlt = \"pen-alt\" Field Value string PenFancy public const string PenFancy = \"pen-fancy\" Field Value string PenNib public const string PenNib = \"pen-nib\" Field Value string PenSquare public const string PenSquare = \"pen-square\" Field Value string PencilAlt public const string PencilAlt = \"pencil-alt\" Field Value string PencilRuler public const string PencilRuler = \"pencil-ruler\" Field Value string PennyArcade public const string PennyArcade = \"penny-arcade\" Field Value string PeopleArrows public const string PeopleArrows = \"people-arrows\" Field Value string PeopleCarry public const string PeopleCarry = \"people-carry\" Field Value string PepperHot public const string PepperHot = \"pepper-hot\" Field Value string Perbyte public const string Perbyte = \"perbyte\" Field Value string Percent public const string Percent = \"percent\" Field Value string Percentage public const string Percentage = \"percentage\" Field Value string Periscope public const string Periscope = \"periscope\" Field Value string PersonBooth public const string PersonBooth = \"person-booth\" Field Value string Phabricator public const string Phabricator = \"phabricator\" Field Value string PhoenixFramework public const string PhoenixFramework = \"phoenix-framework\" Field Value string PhoenixSquadron public const string PhoenixSquadron = \"phoenix-squadron\" Field Value string Phone public const string Phone = \"phone\" Field Value string PhoneAlt public const string PhoneAlt = \"phone-alt\" Field Value string PhoneSlash public const string PhoneSlash = \"phone-slash\" Field Value string PhoneSquare public const string PhoneSquare = \"phone-square\" Field Value string PhoneSquareAlt public const string PhoneSquareAlt = \"phone-square-alt\" Field Value string PhoneVolume public const string PhoneVolume = \"phone-volume\" Field Value string PhotoVideo public const string PhotoVideo = \"photo-video\" Field Value string Php public const string Php = \"php\" Field Value string PiedPiper public const string PiedPiper = \"pied-piper\" Field Value string PiedPiperAlt public const string PiedPiperAlt = \"pied-piper-alt\" Field Value string PiedPiperHat public const string PiedPiperHat = \"pied-piper-hat\" Field Value string PiedPiperPp public const string PiedPiperPp = \"pied-piper-pp\" Field Value string PiedPiperSquare public const string PiedPiperSquare = \"pied-piper-square\" Field Value string PiggyBank public const string PiggyBank = \"piggy-bank\" Field Value string Pills public const string Pills = \"pills\" Field Value string Pinterest public const string Pinterest = \"pinterest\" Field Value string PinterestP public const string PinterestP = \"pinterest-p\" Field Value string PinterestSquare public const string PinterestSquare = \"pinterest-square\" Field Value string PizzaSlice public const string PizzaSlice = \"pizza-slice\" Field Value string PlaceOfWorship public const string PlaceOfWorship = \"place-of-worship\" Field Value string Plane public const string Plane = \"plane\" Field Value string PlaneArrival public const string PlaneArrival = \"plane-arrival\" Field Value string PlaneDeparture public const string PlaneDeparture = \"plane-departure\" Field Value string PlaneSlash public const string PlaneSlash = \"plane-slash\" Field Value string Play public const string Play = \"play\" Field Value string PlayCircle public const string PlayCircle = \"play-circle\" Field Value string Playstation public const string Playstation = \"playstation\" Field Value string Plug public const string Plug = \"plug\" Field Value string Plus public const string Plus = \"plus\" Field Value string PlusCircle public const string PlusCircle = \"plus-circle\" Field Value string PlusSquare public const string PlusSquare = \"plus-square\" Field Value string Podcast public const string Podcast = \"podcast\" Field Value string Poll public const string Poll = \"poll\" Field Value string PollH public const string PollH = \"poll-h\" Field Value string Poo public const string Poo = \"poo\" Field Value string PooStorm public const string PooStorm = \"poo-storm\" Field Value string Poop public const string Poop = \"poop\" Field Value string Portrait public const string Portrait = \"portrait\" Field Value string PoundSign public const string PoundSign = \"pound-sign\" Field Value string PowerOff public const string PowerOff = \"power-off\" Field Value string Pray public const string Pray = \"pray\" Field Value string PrayingHands public const string PrayingHands = \"praying-hands\" Field Value string Prescription public const string Prescription = \"prescription\" Field Value string PrescriptionBottle public const string PrescriptionBottle = \"prescription-bottle\" Field Value string PrescriptionBottleAlt public const string PrescriptionBottleAlt = \"prescription-bottle-alt\" Field Value string Print public const string Print = \"print\" Field Value string Procedures public const string Procedures = \"procedures\" Field Value string ProductHunt public const string ProductHunt = \"product-hunt\" Field Value string ProjectDiagram public const string ProjectDiagram = \"project-diagram\" Field Value string PumpMedical public const string PumpMedical = \"pump-medical\" Field Value string PumpSoap public const string PumpSoap = \"pump-soap\" Field Value string Pushed public const string Pushed = \"pushed\" Field Value string PuzzlePiece public const string PuzzlePiece = \"puzzle-piece\" Field Value string Python public const string Python = \"python\" Field Value string Qq public const string Qq = \"qq\" Field Value string Qrcode public const string Qrcode = \"qrcode\" Field Value string Question public const string Question = \"question\" Field Value string QuestionCircle public const string QuestionCircle = \"question-circle\" Field Value string Quidditch public const string Quidditch = \"quidditch\" Field Value string Quinscape public const string Quinscape = \"quinscape\" Field Value string Quora public const string Quora = \"quora\" Field Value string QuoteLeft public const string QuoteLeft = \"quote-left\" Field Value string QuoteRight public const string QuoteRight = \"quote-right\" Field Value string Quran public const string Quran = \"quran\" Field Value string Radiation public const string Radiation = \"radiation\" Field Value string RadiationAlt public const string RadiationAlt = \"radiation-alt\" Field Value string Rainbow public const string Rainbow = \"rainbow\" Field Value string Random public const string Random = \"random\" Field Value string RaspberryPi public const string RaspberryPi = \"raspberry-pi\" Field Value string Ravelry public const string Ravelry = \"ravelry\" Field Value string React public const string React = \"react\" Field Value string Reacteurope public const string Reacteurope = \"reacteurope\" Field Value string Readme public const string Readme = \"readme\" Field Value string Rebel public const string Rebel = \"rebel\" Field Value string Receipt public const string Receipt = \"receipt\" Field Value string RecordVinyl public const string RecordVinyl = \"record-vinyl\" Field Value string Recycle public const string Recycle = \"recycle\" Field Value string RedRiver public const string RedRiver = \"red-river\" Field Value string Reddit public const string Reddit = \"reddit\" Field Value string RedditAlien public const string RedditAlien = \"reddit-alien\" Field Value string RedditSquare public const string RedditSquare = \"reddit-square\" Field Value string Redhat public const string Redhat = \"redhat\" Field Value string Redo public const string Redo = \"redo\" Field Value string RedoAlt public const string RedoAlt = \"redo-alt\" Field Value string Registered public const string Registered = \"registered\" Field Value string RemoveFormat public const string RemoveFormat = \"remove-format\" Field Value string Renren public const string Renren = \"renren\" Field Value string Reply public const string Reply = \"reply\" Field Value string ReplyAll public const string ReplyAll = \"reply-all\" Field Value string Replyd public const string Replyd = \"replyd\" Field Value string Republican public const string Republican = \"republican\" Field Value string Researchgate public const string Researchgate = \"researchgate\" Field Value string Resolving public const string Resolving = \"resolving\" Field Value string Restroom public const string Restroom = \"restroom\" Field Value string Retweet public const string Retweet = \"retweet\" Field Value string Rev public const string Rev = \"rev\" Field Value string Ribbon public const string Ribbon = \"ribbon\" Field Value string Ring public const string Ring = \"ring\" Field Value string Road public const string Road = \"road\" Field Value string Robot public const string Robot = \"robot\" Field Value string Rocket public const string Rocket = \"rocket\" Field Value string Rocketchat public const string Rocketchat = \"rocketchat\" Field Value string Rockrms public const string Rockrms = \"rockrms\" Field Value string Route public const string Route = \"route\" Field Value string Rproject public const string Rproject = \"r-project\" Field Value string Rss public const string Rss = \"rss\" Field Value string RssSquare public const string RssSquare = \"rss-square\" Field Value string RubleSign public const string RubleSign = \"ruble-sign\" Field Value string Ruler public const string Ruler = \"ruler\" Field Value string RulerCombined public const string RulerCombined = \"ruler-combined\" Field Value string RulerHorizontal public const string RulerHorizontal = \"ruler-horizontal\" Field Value string RulerVertical public const string RulerVertical = \"ruler-vertical\" Field Value string Running public const string Running = \"running\" Field Value string RupeeSign public const string RupeeSign = \"rupee-sign\" Field Value string Rust public const string Rust = \"rust\" Field Value string SadCry public const string SadCry = \"sad-cry\" Field Value string SadTear public const string SadTear = \"sad-tear\" Field Value string Safari public const string Safari = \"safari\" Field Value string Salesforce public const string Salesforce = \"salesforce\" Field Value string Sass public const string Sass = \"sass\" Field Value string Satellite public const string Satellite = \"satellite\" Field Value string SatelliteDish public const string SatelliteDish = \"satellite-dish\" Field Value string Save public const string Save = \"save\" Field Value string Schlix public const string Schlix = \"schlix\" Field Value string School public const string School = \"school\" Field Value string Screwdriver public const string Screwdriver = \"screwdriver\" Field Value string Scribd public const string Scribd = \"scribd\" Field Value string Scroll public const string Scroll = \"scroll\" Field Value string SdCard public const string SdCard = \"sd-card\" Field Value string Search public const string Search = \"search\" Field Value string SearchDollar public const string SearchDollar = \"search-dollar\" Field Value string SearchLocation public const string SearchLocation = \"search-location\" Field Value string SearchMinus public const string SearchMinus = \"search-minus\" Field Value string SearchPlus public const string SearchPlus = \"search-plus\" Field Value string Searchengin public const string Searchengin = \"searchengin\" Field Value string Seedling public const string Seedling = \"seedling\" Field Value string Sellcast public const string Sellcast = \"sellcast\" Field Value string Sellsy public const string Sellsy = \"sellsy\" Field Value string Server public const string Server = \"server\" Field Value string Servicestack public const string Servicestack = \"servicestack\" Field Value string Shapes public const string Shapes = \"shapes\" Field Value string Share public const string Share = \"share\" Field Value string ShareAlt public const string ShareAlt = \"share-alt\" Field Value string ShareAltSquare public const string ShareAltSquare = \"share-alt-square\" Field Value string ShareSquare public const string ShareSquare = \"share-square\" Field Value string ShekelSign public const string ShekelSign = \"shekel-sign\" Field Value string ShieldAlt public const string ShieldAlt = \"shield-alt\" Field Value string ShieldVirus public const string ShieldVirus = \"shield-virus\" Field Value string Ship public const string Ship = \"ship\" Field Value string ShippingFast public const string ShippingFast = \"shipping-fast\" Field Value string Shirtsinbulk public const string Shirtsinbulk = \"shirtsinbulk\" Field Value string ShoePrints public const string ShoePrints = \"shoe-prints\" Field Value string Shopify public const string Shopify = \"shopify\" Field Value string ShoppingBag public const string ShoppingBag = \"shopping-bag\" Field Value string ShoppingBasket public const string ShoppingBasket = \"shopping-basket\" Field Value string ShoppingCart public const string ShoppingCart = \"shopping-cart\" Field Value string Shopware public const string Shopware = \"shopware\" Field Value string Shower public const string Shower = \"shower\" Field Value string ShuttleVan public const string ShuttleVan = \"shuttle-van\" Field Value string Sign public const string Sign = \"sign\" Field Value string SignInAlt public const string SignInAlt = \"sign-in-alt\" Field Value string SignLanguage public const string SignLanguage = \"sign-language\" Field Value string SignOutAlt public const string SignOutAlt = \"sign-out-alt\" Field Value string Signal public const string Signal = \"signal\" Field Value string Signature public const string Signature = \"signature\" Field Value string SimCard public const string SimCard = \"sim-card\" Field Value string Simplybuilt public const string Simplybuilt = \"simplybuilt\" Field Value string Sink public const string Sink = \"sink\" Field Value string Sistrix public const string Sistrix = \"sistrix\" Field Value string Sitemap public const string Sitemap = \"sitemap\" Field Value string Sith public const string Sith = \"sith\" Field Value string Skating public const string Skating = \"skating\" Field Value string Sketch public const string Sketch = \"sketch\" Field Value string Skiing public const string Skiing = \"skiing\" Field Value string SkiingNordic public const string SkiingNordic = \"skiing-nordic\" Field Value string Skull public const string Skull = \"skull\" Field Value string SkullCrossbones public const string SkullCrossbones = \"skull-crossbones\" Field Value string Skyatlas public const string Skyatlas = \"skyatlas\" Field Value string Skype public const string Skype = \"skype\" Field Value string Slack public const string Slack = \"slack\" Field Value string SlackHash public const string SlackHash = \"slack-hash\" Field Value string Slash public const string Slash = \"slash\" Field Value string Sleigh public const string Sleigh = \"sleigh\" Field Value string SlidersH public const string SlidersH = \"sliders-h\" Field Value string Slideshare public const string Slideshare = \"slideshare\" Field Value string Smile public const string Smile = \"smile\" Field Value string SmileBeam public const string SmileBeam = \"smile-beam\" Field Value string SmileWink public const string SmileWink = \"smile-wink\" Field Value string Smog public const string Smog = \"smog\" Field Value string Smoking public const string Smoking = \"smoking\" Field Value string SmokingBan public const string SmokingBan = \"smoking-ban\" Field Value string Sms public const string Sms = \"sms\" Field Value string Snapchat public const string Snapchat = \"snapchat\" Field Value string SnapchatGhost public const string SnapchatGhost = \"snapchat-ghost\" Field Value string SnapchatSquare public const string SnapchatSquare = \"snapchat-square\" Field Value string Snowboarding public const string Snowboarding = \"snowboarding\" Field Value string Snowflake public const string Snowflake = \"snowflake\" Field Value string Snowman public const string Snowman = \"snowman\" Field Value string Snowplow public const string Snowplow = \"snowplow\" Field Value string Soap public const string Soap = \"soap\" Field Value string Socks public const string Socks = \"socks\" Field Value string SolarPanel public const string SolarPanel = \"solar-panel\" Field Value string Sort public const string Sort = \"sort\" Field Value string SortAlphaDown public const string SortAlphaDown = \"sort-alpha-down\" Field Value string SortAlphaDownAlt public const string SortAlphaDownAlt = \"sort-alpha-down-alt\" Field Value string SortAlphaUp public const string SortAlphaUp = \"sort-alpha-up\" Field Value string SortAlphaUpAlt public const string SortAlphaUpAlt = \"sort-alpha-up-alt\" Field Value string SortAmountDown public const string SortAmountDown = \"sort-amount-down\" Field Value string SortAmountDownAlt public const string SortAmountDownAlt = \"sort-amount-down-alt\" Field Value string SortAmountUp public const string SortAmountUp = \"sort-amount-up\" Field Value string SortAmountUpAlt public const string SortAmountUpAlt = \"sort-amount-up-alt\" Field Value string SortDown public const string SortDown = \"sort-down\" Field Value string SortNumericDown public const string SortNumericDown = \"sort-numeric-down\" Field Value string SortNumericDownAlt public const string SortNumericDownAlt = \"sort-numeric-down-alt\" Field Value string SortNumericUp public const string SortNumericUp = \"sort-numeric-up\" Field Value string SortNumericUpAlt public const string SortNumericUpAlt = \"sort-numeric-up-alt\" Field Value string SortUp public const string SortUp = \"sort-up\" Field Value string Soundcloud public const string Soundcloud = \"soundcloud\" Field Value string Sourcetree public const string Sourcetree = \"sourcetree\" Field Value string Spa public const string Spa = \"spa\" Field Value string SpaceShuttle public const string SpaceShuttle = \"space-shuttle\" Field Value string Speakap public const string Speakap = \"speakap\" Field Value string SpeakerDeck public const string SpeakerDeck = \"speaker-deck\" Field Value string SpellCheck public const string SpellCheck = \"spell-check\" Field Value string Spider public const string Spider = \"spider\" Field Value string Spinner public const string Spinner = \"spinner\" Field Value string Splotch public const string Splotch = \"splotch\" Field Value string Spotify public const string Spotify = \"spotify\" Field Value string SprayCan public const string SprayCan = \"spray-can\" Field Value string Square public const string Square = \"square\" Field Value string SquareFull public const string SquareFull = \"square-full\" Field Value string SquareRootAlt public const string SquareRootAlt = \"square-root-alt\" Field Value string Squarespace public const string Squarespace = \"squarespace\" Field Value string StackExchange public const string StackExchange = \"stack-exchange\" Field Value string StackOverflow public const string StackOverflow = \"stack-overflow\" Field Value string Stackpath public const string Stackpath = \"stackpath\" Field Value string Stamp public const string Stamp = \"stamp\" Field Value string Star public const string Star = \"star\" Field Value string StarAndCrescent public const string StarAndCrescent = \"star-and-crescent\" Field Value string StarHalf public const string StarHalf = \"star-half\" Field Value string StarHalfAlt public const string StarHalfAlt = \"star-half-alt\" Field Value string StarOfDavid public const string StarOfDavid = \"star-of-david\" Field Value string StarOfLife public const string StarOfLife = \"star-of-life\" Field Value string Staylinked public const string Staylinked = \"staylinked\" Field Value string Steam public const string Steam = \"steam\" Field Value string SteamSquare public const string SteamSquare = \"steam-square\" Field Value string SteamSymbol public const string SteamSymbol = \"steam-symbol\" Field Value string StepBackward public const string StepBackward = \"step-backward\" Field Value string StepForward public const string StepForward = \"step-forward\" Field Value string Stethoscope public const string Stethoscope = \"stethoscope\" Field Value string StickerMule public const string StickerMule = \"sticker-mule\" Field Value string StickyNote public const string StickyNote = \"sticky-note\" Field Value string Stop public const string Stop = \"stop\" Field Value string StopCircle public const string StopCircle = \"stop-circle\" Field Value string Stopwatch public const string Stopwatch = \"stopwatch\" Field Value string Stopwatch20 public const string Stopwatch20 = \"stopwatch-20\" Field Value string Store public const string Store = \"store\" Field Value string StoreAlt public const string StoreAlt = \"store-alt\" Field Value string StoreAltSlash public const string StoreAltSlash = \"store-alt-slash\" Field Value string StoreSlash public const string StoreSlash = \"store-slash\" Field Value string Strava public const string Strava = \"strava\" Field Value string Stream public const string Stream = \"stream\" Field Value string StreetView public const string StreetView = \"street-view\" Field Value string Strikethrough public const string Strikethrough = \"strikethrough\" Field Value string Stripe public const string Stripe = \"stripe\" Field Value string StripeS public const string StripeS = \"stripe-s\" Field Value string Stroopwafel public const string Stroopwafel = \"stroopwafel\" Field Value string Studiovinari public const string Studiovinari = \"studiovinari\" Field Value string Stumbleupon public const string Stumbleupon = \"stumbleupon\" Field Value string StumbleuponCircle public const string StumbleuponCircle = \"stumbleupon-circle\" Field Value string Subscript public const string Subscript = \"subscript\" Field Value string Subway public const string Subway = \"subway\" Field Value string Suitcase public const string Suitcase = \"suitcase\" Field Value string SuitcaseRolling public const string SuitcaseRolling = \"suitcase-rolling\" Field Value string Sun public const string Sun = \"sun\" Field Value string Superpowers public const string Superpowers = \"superpowers\" Field Value string Superscript public const string Superscript = \"superscript\" Field Value string Supple public const string Supple = \"supple\" Field Value string Surprise public const string Surprise = \"surprise\" Field Value string Suse public const string Suse = \"suse\" Field Value string Swatchbook public const string Swatchbook = \"swatchbook\" Field Value string Swift public const string Swift = \"swift\" Field Value string Swimmer public const string Swimmer = \"swimmer\" Field Value string SwimmingPool public const string SwimmingPool = \"swimming-pool\" Field Value string Symfony public const string Symfony = \"symfony\" Field Value string Synagogue public const string Synagogue = \"synagogue\" Field Value string Sync public const string Sync = \"sync\" Field Value string SyncAlt public const string SyncAlt = \"sync-alt\" Field Value string Syringe public const string Syringe = \"syringe\" Field Value string Table public const string Table = \"table\" Field Value string TableTennis public const string TableTennis = \"table-tennis\" Field Value string Tablet public const string Tablet = \"tablet\" Field Value string TabletAlt public const string TabletAlt = \"tablet-alt\" Field Value string Tablets public const string Tablets = \"tablets\" Field Value string TachometerAlt public const string TachometerAlt = \"tachometer-alt\" Field Value string Tag public const string Tag = \"tag\" Field Value string Tags public const string Tags = \"tags\" Field Value string Tape public const string Tape = \"tape\" Field Value string Tasks public const string Tasks = \"tasks\" Field Value string Taxi public const string Taxi = \"taxi\" Field Value string Teamspeak public const string Teamspeak = \"teamspeak\" Field Value string Teeth public const string Teeth = \"teeth\" Field Value string TeethOpen public const string TeethOpen = \"teeth-open\" Field Value string Telegram public const string Telegram = \"telegram\" Field Value string TelegramPlane public const string TelegramPlane = \"telegram-plane\" Field Value string TemperatureHigh public const string TemperatureHigh = \"temperature-high\" Field Value string TemperatureLow public const string TemperatureLow = \"temperature-low\" Field Value string TencentWeibo public const string TencentWeibo = \"tencent-weibo\" Field Value string Tenge public const string Tenge = \"tenge\" Field Value string Terminal public const string Terminal = \"terminal\" Field Value string TextHeight public const string TextHeight = \"text-height\" Field Value string TextWidth public const string TextWidth = \"text-width\" Field Value string Th public const string Th = \"th\" Field Value string ThLarge public const string ThLarge = \"th-large\" Field Value string ThList public const string ThList = \"th-list\" Field Value string TheRedYeti public const string TheRedYeti = \"the-red-yeti\" Field Value string TheaterMasks public const string TheaterMasks = \"theater-masks\" Field Value string Themeco public const string Themeco = \"themeco\" Field Value string Themeisle public const string Themeisle = \"themeisle\" Field Value string Thermometer public const string Thermometer = \"thermometer\" Field Value string ThermometerEmpty public const string ThermometerEmpty = \"thermometer-empty\" Field Value string ThermometerFull public const string ThermometerFull = \"thermometer-full\" Field Value string ThermometerHalf public const string ThermometerHalf = \"thermometer-half\" Field Value string ThermometerQuarter public const string ThermometerQuarter = \"thermometer-quarter\" Field Value string ThermometerThreeQuarters public const string ThermometerThreeQuarters = \"thermometer-three-quarters\" Field Value string ThinkPeaks public const string ThinkPeaks = \"think-peaks\" Field Value string ThumbsDown public const string ThumbsDown = \"thumbs-down\" Field Value string ThumbsUp public const string ThumbsUp = \"thumbs-up\" Field Value string Thumbtack public const string Thumbtack = \"thumbtack\" Field Value string TicketAlt public const string TicketAlt = \"ticket-alt\" Field Value string Tiktok public const string Tiktok = \"tiktok\" Field Value string Times public const string Times = \"times\" Field Value string TimesCircle public const string TimesCircle = \"times-circle\" Field Value string Tint public const string Tint = \"tint\" Field Value string TintSlash public const string TintSlash = \"tint-slash\" Field Value string Tired public const string Tired = \"tired\" Field Value string ToggleOff public const string ToggleOff = \"toggle-off\" Field Value string ToggleOn public const string ToggleOn = \"toggle-on\" Field Value string Toilet public const string Toilet = \"toilet\" Field Value string ToiletPaper public const string ToiletPaper = \"toilet-paper\" Field Value string ToiletPaperSlash public const string ToiletPaperSlash = \"toilet-paper-slash\" Field Value string Toolbox public const string Toolbox = \"toolbox\" Field Value string Tools public const string Tools = \"tools\" Field Value string Tooth public const string Tooth = \"tooth\" Field Value string Torah public const string Torah = \"torah\" Field Value string ToriiGate public const string ToriiGate = \"torii-gate\" Field Value string Tractor public const string Tractor = \"tractor\" Field Value string TradeFederation public const string TradeFederation = \"trade-federation\" Field Value string Trademark public const string Trademark = \"trademark\" Field Value string TrafficLight public const string TrafficLight = \"traffic-light\" Field Value string Trailer public const string Trailer = \"trailer\" Field Value string Train public const string Train = \"train\" Field Value string Tram public const string Tram = \"tram\" Field Value string Transgender public const string Transgender = \"transgender\" Field Value string TransgenderAlt public const string TransgenderAlt = \"transgender-alt\" Field Value string Trash public const string Trash = \"trash\" Field Value string TrashAlt public const string TrashAlt = \"trash-alt\" Field Value string TrashRestore public const string TrashRestore = \"trash-restore\" Field Value string TrashRestoreAlt public const string TrashRestoreAlt = \"trash-restore-alt\" Field Value string Tree public const string Tree = \"tree\" Field Value string Trello public const string Trello = \"trello\" Field Value string Trophy public const string Trophy = \"trophy\" Field Value string Truck public const string Truck = \"truck\" Field Value string TruckLoading public const string TruckLoading = \"truck-loading\" Field Value string TruckMonster public const string TruckMonster = \"truck-monster\" Field Value string TruckMoving public const string TruckMoving = \"truck-moving\" Field Value string TruckPickup public const string TruckPickup = \"truck-pickup\" Field Value string Tshirt public const string Tshirt = \"tshirt\" Field Value string Tty public const string Tty = \"tty\" Field Value string Tumblr public const string Tumblr = \"tumblr\" Field Value string TumblrSquare public const string TumblrSquare = \"tumblr-square\" Field Value string Tv public const string Tv = \"tv\" Field Value string Twitch public const string Twitch = \"twitch\" Field Value string Twitter public const string Twitter = \"twitter\" Field Value string TwitterSquare public const string TwitterSquare = \"twitter-square\" Field Value string Typo3 public const string Typo3 = \"typo3\" Field Value string Uber public const string Uber = \"uber\" Field Value string Ubuntu public const string Ubuntu = \"ubuntu\" Field Value string Uikit public const string Uikit = \"uikit\" Field Value string Umbraco public const string Umbraco = \"umbraco\" Field Value string Umbrella public const string Umbrella = \"umbrella\" Field Value string UmbrellaBeach public const string UmbrellaBeach = \"umbrella-beach\" Field Value string Uncharted public const string Uncharted = \"uncharted\" Field Value string Underline public const string Underline = \"underline\" Field Value string Undo public const string Undo = \"undo\" Field Value string UndoAlt public const string UndoAlt = \"undo-alt\" Field Value string Uniregistry public const string Uniregistry = \"uniregistry\" Field Value string Unity public const string Unity = \"unity\" Field Value string UniversalAccess public const string UniversalAccess = \"universal-access\" Field Value string University public const string University = \"university\" Field Value string Unlink public const string Unlink = \"unlink\" Field Value string Unlock public const string Unlock = \"unlock\" Field Value string UnlockAlt public const string UnlockAlt = \"unlock-alt\" Field Value string Unsplash public const string Unsplash = \"unsplash\" Field Value string Untappd public const string Untappd = \"untappd\" Field Value string Upload public const string Upload = \"upload\" Field Value string Ups public const string Ups = \"ups\" Field Value string Usb public const string Usb = \"usb\" Field Value string User public const string User = \"user\" Field Value string UserAlt public const string UserAlt = \"user-alt\" Field Value string UserAltSlash public const string UserAltSlash = \"user-alt-slash\" Field Value string UserAstronaut public const string UserAstronaut = \"user-astronaut\" Field Value string UserCheck public const string UserCheck = \"user-check\" Field Value string UserCircle public const string UserCircle = \"user-circle\" Field Value string UserClock public const string UserClock = \"user-clock\" Field Value string UserCog public const string UserCog = \"user-cog\" Field Value string UserEdit public const string UserEdit = \"user-edit\" Field Value string UserFriends public const string UserFriends = \"user-friends\" Field Value string UserGraduate public const string UserGraduate = \"user-graduate\" Field Value string UserInjured public const string UserInjured = \"user-injured\" Field Value string UserLock public const string UserLock = \"user-lock\" Field Value string UserMd public const string UserMd = \"user-md\" Field Value string UserMinus public const string UserMinus = \"user-minus\" Field Value string UserNinja public const string UserNinja = \"user-ninja\" Field Value string UserNurse public const string UserNurse = \"user-nurse\" Field Value string UserPlus public const string UserPlus = \"user-plus\" Field Value string UserSecret public const string UserSecret = \"user-secret\" Field Value string UserShield public const string UserShield = \"user-shield\" Field Value string UserSlash public const string UserSlash = \"user-slash\" Field Value string UserTag public const string UserTag = \"user-tag\" Field Value string UserTie public const string UserTie = \"user-tie\" Field Value string UserTimes public const string UserTimes = \"user-times\" Field Value string Users public const string Users = \"users\" Field Value string UsersCog public const string UsersCog = \"users-cog\" Field Value string UsersSlash public const string UsersSlash = \"users-slash\" Field Value string Usps public const string Usps = \"usps\" Field Value string Ussunnah public const string Ussunnah = \"ussunnah\" Field Value string UtensilSpoon public const string UtensilSpoon = \"utensil-spoon\" Field Value string Utensils public const string Utensils = \"utensils\" Field Value string Vaadin public const string Vaadin = \"vaadin\" Field Value string VectorSquare public const string VectorSquare = \"vector-square\" Field Value string Venus public const string Venus = \"venus\" Field Value string VenusDouble public const string VenusDouble = \"venus-double\" Field Value string VenusMars public const string VenusMars = \"venus-mars\" Field Value string Vest public const string Vest = \"vest\" Field Value string VestPatches public const string VestPatches = \"vest-patches\" Field Value string Viacoin public const string Viacoin = \"viacoin\" Field Value string Viadeo public const string Viadeo = \"viadeo\" Field Value string ViadeoSquare public const string ViadeoSquare = \"viadeo-square\" Field Value string Vial public const string Vial = \"vial\" Field Value string Vials public const string Vials = \"vials\" Field Value string Viber public const string Viber = \"viber\" Field Value string Video public const string Video = \"video\" Field Value string VideoSlash public const string VideoSlash = \"video-slash\" Field Value string Vihara public const string Vihara = \"vihara\" Field Value string Vimeo public const string Vimeo = \"vimeo\" Field Value string VimeoSquare public const string VimeoSquare = \"vimeo-square\" Field Value string VimeoV public const string VimeoV = \"vimeo-v\" Field Value string Vine public const string Vine = \"vine\" Field Value string Virus public const string Virus = \"virus\" Field Value string VirusSlash public const string VirusSlash = \"virus-slash\" Field Value string Viruses public const string Viruses = \"viruses\" Field Value string Vk public const string Vk = \"vk\" Field Value string Vnv public const string Vnv = \"vnv\" Field Value string Voicemail public const string Voicemail = \"voicemail\" Field Value string VolleyballBall public const string VolleyballBall = \"volleyball-ball\" Field Value string VolumeDown public const string VolumeDown = \"volume-down\" Field Value string VolumeMute public const string VolumeMute = \"volume-mute\" Field Value string VolumeOff public const string VolumeOff = \"volume-off\" Field Value string VolumeUp public const string VolumeUp = \"volume-up\" Field Value string VoteYea public const string VoteYea = \"vote-yea\" Field Value string VrCardboard public const string VrCardboard = \"vr-cardboard\" Field Value string Vuejs public const string Vuejs = \"vuejs\" Field Value string Walking public const string Walking = \"walking\" Field Value string Wallet public const string Wallet = \"wallet\" Field Value string Warehouse public const string Warehouse = \"warehouse\" Field Value string WatchmanMonitoring public const string WatchmanMonitoring = \"watchman-monitoring\" Field Value string Water public const string Water = \"water\" Field Value string WaveSquare public const string WaveSquare = \"wave-square\" Field Value string Waze public const string Waze = \"waze\" Field Value string Weebly public const string Weebly = \"weebly\" Field Value string Weibo public const string Weibo = \"weibo\" Field Value string Weight public const string Weight = \"weight\" Field Value string WeightHanging public const string WeightHanging = \"weight-hanging\" Field Value string Weixin public const string Weixin = \"weixin\" Field Value string Whatsapp public const string Whatsapp = \"whatsapp\" Field Value string WhatsappSquare public const string WhatsappSquare = \"whatsapp-square\" Field Value string Wheelchair public const string Wheelchair = \"wheelchair\" Field Value string Whmcs public const string Whmcs = \"whmcs\" Field Value string Wifi public const string Wifi = \"wifi\" Field Value string WikipediaW public const string WikipediaW = \"wikipedia-w\" Field Value string Wind public const string Wind = \"wind\" Field Value string WindowClose public const string WindowClose = \"window-close\" Field Value string WindowMaximize public const string WindowMaximize = \"window-maximize\" Field Value string WindowMinimize public const string WindowMinimize = \"window-minimize\" Field Value string WindowRestore public const string WindowRestore = \"window-restore\" Field Value string Windows public const string Windows = \"windows\" Field Value string WineBottle public const string WineBottle = \"wine-bottle\" Field Value string WineGlass public const string WineGlass = \"wine-glass\" Field Value string WineGlassAlt public const string WineGlassAlt = \"wine-glass-alt\" Field Value string Wix public const string Wix = \"wix\" Field Value string WizardsOfTheCoast public const string WizardsOfTheCoast = \"wizards-of-the-coast\" Field Value string Wodu public const string Wodu = \"wodu\" Field Value string WolfPackBattalion public const string WolfPackBattalion = \"wolf-pack-battalion\" Field Value string WonSign public const string WonSign = \"won-sign\" Field Value string Wordpress public const string Wordpress = \"wordpress\" Field Value string WordpressSimple public const string WordpressSimple = \"wordpress-simple\" Field Value string Wpbeginner public const string Wpbeginner = \"wpbeginner\" Field Value string Wpexplorer public const string Wpexplorer = \"wpexplorer\" Field Value string Wpforms public const string Wpforms = \"wpforms\" Field Value string Wpressr public const string Wpressr = \"wpressr\" Field Value string Wrench public const string Wrench = \"wrench\" Field Value string XRay public const string XRay = \"x-ray\" Field Value string Xbox public const string Xbox = \"xbox\" Field Value string Xing public const string Xing = \"xing\" Field Value string XingSquare public const string XingSquare = \"xing-square\" Field Value string YCombinator public const string YCombinator = \"y-combinator\" Field Value string Yahoo public const string Yahoo = \"yahoo\" Field Value string Yammer public const string Yammer = \"yammer\" Field Value string Yandex public const string Yandex = \"yandex\" Field Value string YandexInternational public const string YandexInternational = \"yandex-international\" Field Value string Yarn public const string Yarn = \"yarn\" Field Value string Yelp public const string Yelp = \"yelp\" Field Value string YenSign public const string YenSign = \"yen-sign\" Field Value string YinYang public const string YinYang = \"yin-yang\" Field Value string Yoast public const string Yoast = \"yoast\" Field Value string Youtube public const string Youtube = \"youtube\" Field Value string YoutubeSquare public const string YoutubeSquare = \"youtube-square\" Field Value string Zhihu public const string Zhihu = \"zhihu\" Field Value string"
  },
  "api/UltraForce.Library.Core.Asp.Types.Classes.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Classes.html",
    "title": "Namespace UltraForce.Library.Core.Asp.Types.Classes | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.Types.Classes Classes UFDataAttribute Constants mapping to various data attributes used by the Ultra Force DOM typescript library. UFFontAwesome A set of constants that map to font awesome icons (without 'fa-' prefix). Obtained from version 5.15.4"
  },
  "api/UltraForce.Library.Core.Asp.Types.Constants.UFDataAttribute.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Constants.UFDataAttribute.html",
    "title": "Class UFDataAttribute | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataAttribute Namespace UltraForce.Library.Core.Asp.Types.Constants Assembly UltraForce.Library.Core.Asp.dll Constants mapping to various data attributes used by the Ultra Force DOM typescript library. public static class UFDataAttribute Inheritance object UFDataAttribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DisplayValue Value to assign to the display style. public const string DisplayValue = \"data-uf-display-value\" Field Value string FieldValue Value to use. public const string FieldValue = \"data-uf-field-value\" Field Value string Filter Used by UFTableTagHelperBase. public const string Filter = \"data-uf-filter\" Field Value string FilterTable Used by UFTableTagHelperBase. public const string FilterTable = \"data-uf-filter-table\" Field Value string HeaderRow Used by UFTableRowTagHelperBase<TTable>. public const string HeaderRow = \"data-uf-header-row\" Field Value string HideIfField Hide the content of the field if some condition is met. public const string HideIfField = \"data-uf-hide-if-field\" Field Value string ImageHeight Set content to height of image. public const string ImageHeight = \"data-uf-image-height\" Field Value string ImageName Set content to name of image. public const string ImageName = \"data-uf-image-name\" Field Value string ImagePreview Image preview for file input. public const string ImagePreview = \"data-uf-image-preview\" Field Value string ImageSize Set content to size of image. public const string ImageSize = \"data-uf-image-size\" Field Value string ImageType Set content to type of image. public const string ImageType = \"data-uf-image-type\" Field Value string ImageWidth Set content to width of image. public const string ImageWidth = \"data-uf-image-width\" Field Value string NoCaching When set don't cache values with sorted tables. public const string NoCaching = \"data-uf-no-caching\" Field Value string NoFilter Used by UFTableCellTagHelperBase<TTable, TTableRow>. public const string NoFilter = \"data-uf-no-filter\" Field Value string PageSize Used by UFTableTagHelperBase. public const string PageSize = \"data-uf-page-size\" Field Value string Paging Used by UFTableTagHelperBase. public const string Paging = \"data-uf-paging\" Field Value string SetFieldSelector Points to a clickable element public const string SetFieldSelector = \"data-uf-set-field-selector\" Field Value string SetFieldValue Value to set if clickable element is clicked upon. public const string SetFieldValue = \"data-uf-set-field-value\" Field Value string ShowIfField Show the content of the field if some condition is met. public const string ShowIfField = \"data-uf-show-if-field\" Field Value string SortAscending Used by UFTableTagHelperBase. public const string SortAscending = \"data-uf-sort-ascending\" Field Value string SortDescending Used by UFTableTagHelperBase. public const string SortDescending = \"data-uf-sort-descending\" Field Value string SortLocation Used by UFTableRowTagHelperBase<TTable>. public const string SortLocation = \"data-uf-sort-location\" Field Value string SortType Used by UFTableCellTagHelperBase<TTable, TTableRow>. public const string SortType = \"data-uf-sort-type\" Field Value string SortValue Used by UFTableCellTagHelperBase<TTable, TTableRow>. public const string SortValue = \"data-uf-sort-value\" Field Value string Sorting Used by UFTableTagHelperBase. public const string Sorting = \"data-uf-sorting\" Field Value string StorageId Used by various classes. public const string StorageId = \"data-uf-storage-id\" Field Value string"
  },
  "api/UltraForce.Library.Core.Asp.Types.Constants.UFFontAwesome.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Constants.UFFontAwesome.html",
    "title": "Class UFFontAwesome | UltraForce.Library.Core.Asp",
    "keywords": "Class UFFontAwesome Namespace UltraForce.Library.Core.Asp.Types.Constants Assembly UltraForce.Library.Core.Asp.dll A set of constants that map to font awesome icons (without 'fa-' prefix). Obtained from version 6.7.2 css files. public class UFFontAwesome Inheritance object UFFontAwesome Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields A public const string A = \"a\" Field Value string AccessibleIcon public const string AccessibleIcon = \"accessible-icon\" Field Value string Accusoft public const string Accusoft = \"accusoft\" Field Value string Ad public const string Ad = \"ad\" Field Value string Add public const string Add = \"add\" Field Value string AddressBook public const string AddressBook = \"address-book\" Field Value string AddressCard public const string AddressCard = \"address-card\" Field Value string Adjust public const string Adjust = \"adjust\" Field Value string Adn public const string Adn = \"adn\" Field Value string Adversal public const string Adversal = \"adversal\" Field Value string Affiliatetheme public const string Affiliatetheme = \"affiliatetheme\" Field Value string AirFreshener public const string AirFreshener = \"air-freshener\" Field Value string Airbnb public const string Airbnb = \"airbnb\" Field Value string Algolia public const string Algolia = \"algolia\" Field Value string AlignCenter public const string AlignCenter = \"align-center\" Field Value string AlignJustify public const string AlignJustify = \"align-justify\" Field Value string AlignLeft public const string AlignLeft = \"align-left\" Field Value string AlignRight public const string AlignRight = \"align-right\" Field Value string Alipay public const string Alipay = \"alipay\" Field Value string Allergies public const string Allergies = \"allergies\" Field Value string Amazon public const string Amazon = \"amazon\" Field Value string AmazonPay public const string AmazonPay = \"amazon-pay\" Field Value string Ambulance public const string Ambulance = \"ambulance\" Field Value string AmericanSignLanguageInterpreting public const string AmericanSignLanguageInterpreting = \"american-sign-language-interpreting\" Field Value string Amilia public const string Amilia = \"amilia\" Field Value string Anchor public const string Anchor = \"anchor\" Field Value string AnchorCircleCheck public const string AnchorCircleCheck = \"anchor-circle-check\" Field Value string AnchorCircleExclamation public const string AnchorCircleExclamation = \"anchor-circle-exclamation\" Field Value string AnchorCircleXmark public const string AnchorCircleXmark = \"anchor-circle-xmark\" Field Value string AnchorLock public const string AnchorLock = \"anchor-lock\" Field Value string Android public const string Android = \"android\" Field Value string Angellist public const string Angellist = \"angellist\" Field Value string AngleDoubleDown public const string AngleDoubleDown = \"angle-double-down\" Field Value string AngleDoubleLeft public const string AngleDoubleLeft = \"angle-double-left\" Field Value string AngleDoubleRight public const string AngleDoubleRight = \"angle-double-right\" Field Value string AngleDoubleUp public const string AngleDoubleUp = \"angle-double-up\" Field Value string AngleDown public const string AngleDown = \"angle-down\" Field Value string AngleLeft public const string AngleLeft = \"angle-left\" Field Value string AngleRight public const string AngleRight = \"angle-right\" Field Value string AngleUp public const string AngleUp = \"angle-up\" Field Value string AnglesDown public const string AnglesDown = \"angles-down\" Field Value string AnglesLeft public const string AnglesLeft = \"angles-left\" Field Value string AnglesRight public const string AnglesRight = \"angles-right\" Field Value string AnglesUp public const string AnglesUp = \"angles-up\" Field Value string Angry public const string Angry = \"angry\" Field Value string Angrycreative public const string Angrycreative = \"angrycreative\" Field Value string Angular public const string Angular = \"angular\" Field Value string Ankh public const string Ankh = \"ankh\" Field Value string AppStore public const string AppStore = \"app-store\" Field Value string AppStoreIos public const string AppStoreIos = \"app-store-ios\" Field Value string Apper public const string Apper = \"apper\" Field Value string Apple public const string Apple = \"apple\" Field Value string AppleAlt public const string AppleAlt = \"apple-alt\" Field Value string ApplePay public const string ApplePay = \"apple-pay\" Field Value string AppleWhole public const string AppleWhole = \"apple-whole\" Field Value string Archive public const string Archive = \"archive\" Field Value string Archway public const string Archway = \"archway\" Field Value string AreaChart public const string AreaChart = \"area-chart\" Field Value string ArrowAltCircleDown public const string ArrowAltCircleDown = \"arrow-alt-circle-down\" Field Value string ArrowAltCircleLeft public const string ArrowAltCircleLeft = \"arrow-alt-circle-left\" Field Value string ArrowAltCircleRight public const string ArrowAltCircleRight = \"arrow-alt-circle-right\" Field Value string ArrowAltCircleUp public const string ArrowAltCircleUp = \"arrow-alt-circle-up\" Field Value string ArrowCircleDown public const string ArrowCircleDown = \"arrow-circle-down\" Field Value string ArrowCircleLeft public const string ArrowCircleLeft = \"arrow-circle-left\" Field Value string ArrowCircleRight public const string ArrowCircleRight = \"arrow-circle-right\" Field Value string ArrowCircleUp public const string ArrowCircleUp = \"arrow-circle-up\" Field Value string ArrowDown public const string ArrowDown = \"arrow-down\" Field Value string ArrowDown1_9 public const string ArrowDown1_9 = \"arrow-down-1-9\" Field Value string ArrowDown91 public const string ArrowDown91 = \"arrow-down-9-1\" Field Value string ArrowDownAZ public const string ArrowDownAZ = \"arrow-down-a-z\" Field Value string ArrowDownLong public const string ArrowDownLong = \"arrow-down-long\" Field Value string ArrowDownShortWide public const string ArrowDownShortWide = \"arrow-down-short-wide\" Field Value string ArrowDownUpAcrossLine public const string ArrowDownUpAcrossLine = \"arrow-down-up-across-line\" Field Value string ArrowDownUpLock public const string ArrowDownUpLock = \"arrow-down-up-lock\" Field Value string ArrowDownWideShort public const string ArrowDownWideShort = \"arrow-down-wide-short\" Field Value string ArrowDownZA public const string ArrowDownZA = \"arrow-down-z-a\" Field Value string ArrowLeft public const string ArrowLeft = \"arrow-left\" Field Value string ArrowLeftLong public const string ArrowLeftLong = \"arrow-left-long\" Field Value string ArrowLeftRotate public const string ArrowLeftRotate = \"arrow-left-rotate\" Field Value string ArrowPointer public const string ArrowPointer = \"arrow-pointer\" Field Value string ArrowRight public const string ArrowRight = \"arrow-right\" Field Value string ArrowRightArrowLeft public const string ArrowRightArrowLeft = \"arrow-right-arrow-left\" Field Value string ArrowRightFromBracket public const string ArrowRightFromBracket = \"arrow-right-from-bracket\" Field Value string ArrowRightFromFile public const string ArrowRightFromFile = \"arrow-right-from-file\" Field Value string ArrowRightLong public const string ArrowRightLong = \"arrow-right-long\" Field Value string ArrowRightRotate public const string ArrowRightRotate = \"arrow-right-rotate\" Field Value string ArrowRightToBracket public const string ArrowRightToBracket = \"arrow-right-to-bracket\" Field Value string ArrowRightToCity public const string ArrowRightToCity = \"arrow-right-to-city\" Field Value string ArrowRightToFile public const string ArrowRightToFile = \"arrow-right-to-file\" Field Value string ArrowRotateBack public const string ArrowRotateBack = \"arrow-rotate-back\" Field Value string ArrowRotateBackward public const string ArrowRotateBackward = \"arrow-rotate-backward\" Field Value string ArrowRotateForward public const string ArrowRotateForward = \"arrow-rotate-forward\" Field Value string ArrowRotateLeft public const string ArrowRotateLeft = \"arrow-rotate-left\" Field Value string ArrowRotateRight public const string ArrowRotateRight = \"arrow-rotate-right\" Field Value string ArrowTrendDown public const string ArrowTrendDown = \"arrow-trend-down\" Field Value string ArrowTrendUp public const string ArrowTrendUp = \"arrow-trend-up\" Field Value string ArrowTurnDown public const string ArrowTurnDown = \"arrow-turn-down\" Field Value string ArrowTurnUp public const string ArrowTurnUp = \"arrow-turn-up\" Field Value string ArrowUp public const string ArrowUp = \"arrow-up\" Field Value string ArrowUp1_9 public const string ArrowUp1_9 = \"arrow-up-1-9\" Field Value string ArrowUp9_1 public const string ArrowUp9_1 = \"arrow-up-9-1\" Field Value string ArrowUpAZ public const string ArrowUpAZ = \"arrow-up-a-z\" Field Value string ArrowUpFromBracket public const string ArrowUpFromBracket = \"arrow-up-from-bracket\" Field Value string ArrowUpFromGroundWater public const string ArrowUpFromGroundWater = \"arrow-up-from-ground-water\" Field Value string ArrowUpFromWaterPump public const string ArrowUpFromWaterPump = \"arrow-up-from-water-pump\" Field Value string ArrowUpLong public const string ArrowUpLong = \"arrow-up-long\" Field Value string ArrowUpRightDots public const string ArrowUpRightDots = \"arrow-up-right-dots\" Field Value string ArrowUpRightFromSquare public const string ArrowUpRightFromSquare = \"arrow-up-right-from-square\" Field Value string ArrowUpShortWide public const string ArrowUpShortWide = \"arrow-up-short-wide\" Field Value string ArrowUpWideShort public const string ArrowUpWideShort = \"arrow-up-wide-short\" Field Value string ArrowUpZA public const string ArrowUpZA = \"arrow-up-z-a\" Field Value string Arrows public const string Arrows = \"arrows\" Field Value string ArrowsAlt public const string ArrowsAlt = \"arrows-alt\" Field Value string ArrowsAltH public const string ArrowsAltH = \"arrows-alt-h\" Field Value string ArrowsAltV public const string ArrowsAltV = \"arrows-alt-v\" Field Value string ArrowsDownToLine public const string ArrowsDownToLine = \"arrows-down-to-line\" Field Value string ArrowsDownToPeople public const string ArrowsDownToPeople = \"arrows-down-to-people\" Field Value string ArrowsH public const string ArrowsH = \"arrows-h\" Field Value string ArrowsLeftRight public const string ArrowsLeftRight = \"arrows-left-right\" Field Value string ArrowsLeftRightToLine public const string ArrowsLeftRightToLine = \"arrows-left-right-to-line\" Field Value string ArrowsRotate public const string ArrowsRotate = \"arrows-rotate\" Field Value string ArrowsSpin public const string ArrowsSpin = \"arrows-spin\" Field Value string ArrowsSplitUpAndLeft public const string ArrowsSplitUpAndLeft = \"arrows-split-up-and-left\" Field Value string ArrowsToCircle public const string ArrowsToCircle = \"arrows-to-circle\" Field Value string ArrowsToDot public const string ArrowsToDot = \"arrows-to-dot\" Field Value string ArrowsToEye public const string ArrowsToEye = \"arrows-to-eye\" Field Value string ArrowsTurnRight public const string ArrowsTurnRight = \"arrows-turn-right\" Field Value string ArrowsTurnToDots public const string ArrowsTurnToDots = \"arrows-turn-to-dots\" Field Value string ArrowsUpDown public const string ArrowsUpDown = \"arrows-up-down\" Field Value string ArrowsUpDownLeftRight public const string ArrowsUpDownLeftRight = \"arrows-up-down-left-right\" Field Value string ArrowsUpToLine public const string ArrowsUpToLine = \"arrows-up-to-line\" Field Value string ArrowsV public const string ArrowsV = \"arrows-v\" Field Value string Artstation public const string Artstation = \"artstation\" Field Value string AslInterpreting public const string AslInterpreting = \"asl-interpreting\" Field Value string AssistiveListeningSystems public const string AssistiveListeningSystems = \"assistive-listening-systems\" Field Value string Asterisk public const string Asterisk = \"asterisk\" Field Value string Asymmetrik public const string Asymmetrik = \"asymmetrik\" Field Value string At public const string At = \"at\" Field Value string Atlas public const string Atlas = \"atlas\" Field Value string Atlassian public const string Atlassian = \"atlassian\" Field Value string Atom public const string Atom = \"atom\" Field Value string Audible public const string Audible = \"audible\" Field Value string AudioDescription public const string AudioDescription = \"audio-description\" Field Value string AustralSign public const string AustralSign = \"austral-sign\" Field Value string Automobile public const string Automobile = \"automobile\" Field Value string Autoprefixer public const string Autoprefixer = \"autoprefixer\" Field Value string Avianex public const string Avianex = \"avianex\" Field Value string Aviato public const string Aviato = \"aviato\" Field Value string Award public const string Award = \"award\" Field Value string Aws public const string Aws = \"aws\" Field Value string B public const string B = \"b\" Field Value string Baby public const string Baby = \"baby\" Field Value string BabyCarriage public const string BabyCarriage = \"baby-carriage\" Field Value string Backspace public const string Backspace = \"backspace\" Field Value string Backward public const string Backward = \"backward\" Field Value string BackwardFast public const string BackwardFast = \"backward-fast\" Field Value string BackwardStep public const string BackwardStep = \"backward-step\" Field Value string Bacon public const string Bacon = \"bacon\" Field Value string Bacteria public const string Bacteria = \"bacteria\" Field Value string Bacterium public const string Bacterium = \"bacterium\" Field Value string BagShopping public const string BagShopping = \"bag-shopping\" Field Value string Bahai public const string Bahai = \"bahai\" Field Value string BahtSign public const string BahtSign = \"baht-sign\" Field Value string BalanceScale public const string BalanceScale = \"balance-scale\" Field Value string BalanceScaleLeft public const string BalanceScaleLeft = \"balance-scale-left\" Field Value string BalanceScaleRight public const string BalanceScaleRight = \"balance-scale-right\" Field Value string Ban public const string Ban = \"ban\" Field Value string BanSmoking public const string BanSmoking = \"ban-smoking\" Field Value string BandAid public const string BandAid = \"band-aid\" Field Value string Bandage public const string Bandage = \"bandage\" Field Value string Bandcamp public const string Bandcamp = \"bandcamp\" Field Value string BangladeshiTakaSign public const string BangladeshiTakaSign = \"bangladeshi-taka-sign\" Field Value string Bank public const string Bank = \"bank\" Field Value string BarChart public const string BarChart = \"bar-chart\" Field Value string Barcode public const string Barcode = \"barcode\" Field Value string Bars public const string Bars = \"bars\" Field Value string BarsProgress public const string BarsProgress = \"bars-progress\" Field Value string BarsStaggered public const string BarsStaggered = \"bars-staggered\" Field Value string Baseball public const string Baseball = \"baseball\" Field Value string BaseballBall public const string BaseballBall = \"baseball-ball\" Field Value string BaseballBatBall public const string BaseballBatBall = \"baseball-bat-ball\" Field Value string BasketShopping public const string BasketShopping = \"basket-shopping\" Field Value string Basketball public const string Basketball = \"basketball\" Field Value string BasketballBall public const string BasketballBall = \"basketball-ball\" Field Value string Bath public const string Bath = \"bath\" Field Value string Bathtub public const string Bathtub = \"bathtub\" Field Value string Battery public const string Battery = \"battery\" Field Value string Battery0 public const string Battery0 = \"battery-0\" Field Value string Battery2 public const string Battery2 = \"battery-2\" Field Value string Battery3 public const string Battery3 = \"battery-3\" Field Value string Battery4 public const string Battery4 = \"battery-4\" Field Value string Battery5 public const string Battery5 = \"battery-5\" Field Value string BatteryCar public const string BatteryCar = \"battery-car\" Field Value string BatteryEmpty public const string BatteryEmpty = \"battery-empty\" Field Value string BatteryFull public const string BatteryFull = \"battery-full\" Field Value string BatteryHalf public const string BatteryHalf = \"battery-half\" Field Value string BatteryQuarter public const string BatteryQuarter = \"battery-quarter\" Field Value string BatteryThreeQuarters public const string BatteryThreeQuarters = \"battery-three-quarters\" Field Value string BattleNet public const string BattleNet = \"battle-net\" Field Value string Bed public const string Bed = \"bed\" Field Value string BedPulse public const string BedPulse = \"bed-pulse\" Field Value string Beer public const string Beer = \"beer\" Field Value string BeerMugEmpty public const string BeerMugEmpty = \"beer-mug-empty\" Field Value string Behance public const string Behance = \"behance\" Field Value string BehanceSquare public const string BehanceSquare = \"behance-square\" Field Value string Bell public const string Bell = \"bell\" Field Value string BellConcierge public const string BellConcierge = \"bell-concierge\" Field Value string BellSlash public const string BellSlash = \"bell-slash\" Field Value string BezierCurve public const string BezierCurve = \"bezier-curve\" Field Value string Bible public const string Bible = \"bible\" Field Value string Bicycle public const string Bicycle = \"bicycle\" Field Value string Biking public const string Biking = \"biking\" Field Value string Bilibili public const string Bilibili = \"bilibili\" Field Value string Bimobject public const string Bimobject = \"bimobject\" Field Value string Binoculars public const string Binoculars = \"binoculars\" Field Value string Biohazard public const string Biohazard = \"biohazard\" Field Value string BirthdayCake public const string BirthdayCake = \"birthday-cake\" Field Value string Bitbucket public const string Bitbucket = \"bitbucket\" Field Value string Bitcoin public const string Bitcoin = \"bitcoin\" Field Value string BitcoinSign public const string BitcoinSign = \"bitcoin-sign\" Field Value string Bity public const string Bity = \"bity\" Field Value string BlackTie public const string BlackTie = \"black-tie\" Field Value string Blackberry public const string Blackberry = \"blackberry\" Field Value string Blackboard public const string Blackboard = \"blackboard\" Field Value string Blender public const string Blender = \"blender\" Field Value string BlenderPhone public const string BlenderPhone = \"blender-phone\" Field Value string Blind public const string Blind = \"blind\" Field Value string Blog public const string Blog = \"blog\" Field Value string Blogger public const string Blogger = \"blogger\" Field Value string BloggerB public const string BloggerB = \"blogger-b\" Field Value string Bluesky public const string Bluesky = \"bluesky\" Field Value string Bluetooth public const string Bluetooth = \"bluetooth\" Field Value string BluetoothB public const string BluetoothB = \"bluetooth-b\" Field Value string Bold public const string Bold = \"bold\" Field Value string Bolt public const string Bolt = \"bolt\" Field Value string BoltLightning public const string BoltLightning = \"bolt-lightning\" Field Value string Bomb public const string Bomb = \"bomb\" Field Value string Bone public const string Bone = \"bone\" Field Value string Bong public const string Bong = \"bong\" Field Value string Book public const string Book = \"book\" Field Value string BookAtlas public const string BookAtlas = \"book-atlas\" Field Value string BookBible public const string BookBible = \"book-bible\" Field Value string BookBookmark public const string BookBookmark = \"book-bookmark\" Field Value string BookDead public const string BookDead = \"book-dead\" Field Value string BookJournalWhills public const string BookJournalWhills = \"book-journal-whills\" Field Value string BookMedical public const string BookMedical = \"book-medical\" Field Value string BookOpen public const string BookOpen = \"book-open\" Field Value string BookOpenReader public const string BookOpenReader = \"book-open-reader\" Field Value string BookQuran public const string BookQuran = \"book-quran\" Field Value string BookReader public const string BookReader = \"book-reader\" Field Value string BookSkull public const string BookSkull = \"book-skull\" Field Value string BookTanakh public const string BookTanakh = \"book-tanakh\" Field Value string Bookmark public const string Bookmark = \"bookmark\" Field Value string Bootstrap public const string Bootstrap = \"bootstrap\" Field Value string BorderAll public const string BorderAll = \"border-all\" Field Value string BorderNone public const string BorderNone = \"border-none\" Field Value string BorderStyle public const string BorderStyle = \"border-style\" Field Value string BorderTopLeft public const string BorderTopLeft = \"border-top-left\" Field Value string BoreHole public const string BoreHole = \"bore-hole\" Field Value string Bots public const string Bots = \"bots\" Field Value string BottleDroplet public const string BottleDroplet = \"bottle-droplet\" Field Value string BottleWater public const string BottleWater = \"bottle-water\" Field Value string BowlFood public const string BowlFood = \"bowl-food\" Field Value string BowlRice public const string BowlRice = \"bowl-rice\" Field Value string BowlingBall public const string BowlingBall = \"bowling-ball\" Field Value string Box public const string Box = \"box\" Field Value string BoxArchive public const string BoxArchive = \"box-archive\" Field Value string BoxOpen public const string BoxOpen = \"box-open\" Field Value string BoxTissue public const string BoxTissue = \"box-tissue\" Field Value string Boxes public const string Boxes = \"boxes\" Field Value string BoxesAlt public const string BoxesAlt = \"boxes-alt\" Field Value string BoxesPacking public const string BoxesPacking = \"boxes-packing\" Field Value string BoxesStacked public const string BoxesStacked = \"boxes-stacked\" Field Value string Braille public const string Braille = \"braille\" Field Value string Brain public const string Brain = \"brain\" Field Value string Brave public const string Brave = \"brave\" Field Value string BraveReverse public const string BraveReverse = \"brave-reverse\" Field Value string BrazilianRealSign public const string BrazilianRealSign = \"brazilian-real-sign\" Field Value string BreadSlice public const string BreadSlice = \"bread-slice\" Field Value string Bridge public const string Bridge = \"bridge\" Field Value string BridgeCircleCheck public const string BridgeCircleCheck = \"bridge-circle-check\" Field Value string BridgeCircleExclamation public const string BridgeCircleExclamation = \"bridge-circle-exclamation\" Field Value string BridgeCircleXmark public const string BridgeCircleXmark = \"bridge-circle-xmark\" Field Value string BridgeLock public const string BridgeLock = \"bridge-lock\" Field Value string BridgeWater public const string BridgeWater = \"bridge-water\" Field Value string Briefcase public const string Briefcase = \"briefcase\" Field Value string BriefcaseClock public const string BriefcaseClock = \"briefcase-clock\" Field Value string BriefcaseMedical public const string BriefcaseMedical = \"briefcase-medical\" Field Value string BroadcastTower public const string BroadcastTower = \"broadcast-tower\" Field Value string Broom public const string Broom = \"broom\" Field Value string BroomBall public const string BroomBall = \"broom-ball\" Field Value string Brush public const string Brush = \"brush\" Field Value string Btc public const string Btc = \"btc\" Field Value string Bucket public const string Bucket = \"bucket\" Field Value string Buffer public const string Buffer = \"buffer\" Field Value string Bug public const string Bug = \"bug\" Field Value string BugSlash public const string BugSlash = \"bug-slash\" Field Value string Bugs public const string Bugs = \"bugs\" Field Value string Building public const string Building = \"building\" Field Value string BuildingCircleArrowRight public const string BuildingCircleArrowRight = \"building-circle-arrow-right\" Field Value string BuildingCircleCheck public const string BuildingCircleCheck = \"building-circle-check\" Field Value string BuildingCircleExclamation public const string BuildingCircleExclamation = \"building-circle-exclamation\" Field Value string BuildingCircleXmark public const string BuildingCircleXmark = \"building-circle-xmark\" Field Value string BuildingColumns public const string BuildingColumns = \"building-columns\" Field Value string BuildingFlag public const string BuildingFlag = \"building-flag\" Field Value string BuildingLock public const string BuildingLock = \"building-lock\" Field Value string BuildingNgo public const string BuildingNgo = \"building-ngo\" Field Value string BuildingShield public const string BuildingShield = \"building-shield\" Field Value string BuildingUn public const string BuildingUn = \"building-un\" Field Value string BuildingUser public const string BuildingUser = \"building-user\" Field Value string BuildingWheat public const string BuildingWheat = \"building-wheat\" Field Value string Bullhorn public const string Bullhorn = \"bullhorn\" Field Value string Bullseye public const string Bullseye = \"bullseye\" Field Value string Burger public const string Burger = \"burger\" Field Value string Burn public const string Burn = \"burn\" Field Value string Buromobelexperte public const string Buromobelexperte = \"buromobelexperte\" Field Value string Burst public const string Burst = \"burst\" Field Value string Bus public const string Bus = \"bus\" Field Value string BusAlt public const string BusAlt = \"bus-alt\" Field Value string BusSimple public const string BusSimple = \"bus-simple\" Field Value string BusinessTime public const string BusinessTime = \"business-time\" Field Value string BuyNLarge public const string BuyNLarge = \"buy-n-large\" Field Value string Buysellads public const string Buysellads = \"buysellads\" Field Value string C public const string C = \"c\" Field Value string Cab public const string Cab = \"cab\" Field Value string CableCar public const string CableCar = \"cable-car\" Field Value string Cake public const string Cake = \"cake\" Field Value string CakeCandles public const string CakeCandles = \"cake-candles\" Field Value string Calculator public const string Calculator = \"calculator\" Field Value string Calendar public const string Calendar = \"calendar\" Field Value string CalendarAlt public const string CalendarAlt = \"calendar-alt\" Field Value string CalendarCheck public const string CalendarCheck = \"calendar-check\" Field Value string CalendarDay public const string CalendarDay = \"calendar-day\" Field Value string CalendarDays public const string CalendarDays = \"calendar-days\" Field Value string CalendarMinus public const string CalendarMinus = \"calendar-minus\" Field Value string CalendarPlus public const string CalendarPlus = \"calendar-plus\" Field Value string CalendarTimes public const string CalendarTimes = \"calendar-times\" Field Value string CalendarWeek public const string CalendarWeek = \"calendar-week\" Field Value string CalendarXmark public const string CalendarXmark = \"calendar-xmark\" Field Value string Camera public const string Camera = \"camera\" Field Value string CameraAlt public const string CameraAlt = \"camera-alt\" Field Value string CameraRetro public const string CameraRetro = \"camera-retro\" Field Value string CameraRotate public const string CameraRotate = \"camera-rotate\" Field Value string Campground public const string Campground = \"campground\" Field Value string CanadianMapleLeaf public const string CanadianMapleLeaf = \"canadian-maple-leaf\" Field Value string Cancel public const string Cancel = \"cancel\" Field Value string CandyCane public const string CandyCane = \"candy-cane\" Field Value string Cannabis public const string Cannabis = \"cannabis\" Field Value string Capsules public const string Capsules = \"capsules\" Field Value string Car public const string Car = \"car\" Field Value string CarAlt public const string CarAlt = \"car-alt\" Field Value string CarBattery public const string CarBattery = \"car-battery\" Field Value string CarBurst public const string CarBurst = \"car-burst\" Field Value string CarCrash public const string CarCrash = \"car-crash\" Field Value string CarOn public const string CarOn = \"car-on\" Field Value string CarRear public const string CarRear = \"car-rear\" Field Value string CarSide public const string CarSide = \"car-side\" Field Value string CarTunnel public const string CarTunnel = \"car-tunnel\" Field Value string Caravan public const string Caravan = \"caravan\" Field Value string CaretDown public const string CaretDown = \"caret-down\" Field Value string CaretLeft public const string CaretLeft = \"caret-left\" Field Value string CaretRight public const string CaretRight = \"caret-right\" Field Value string CaretSquareDown public const string CaretSquareDown = \"caret-square-down\" Field Value string CaretSquareLeft public const string CaretSquareLeft = \"caret-square-left\" Field Value string CaretSquareRight public const string CaretSquareRight = \"caret-square-right\" Field Value string CaretSquareUp public const string CaretSquareUp = \"caret-square-up\" Field Value string CaretUp public const string CaretUp = \"caret-up\" Field Value string CarriageBaby public const string CarriageBaby = \"carriage-baby\" Field Value string Carrot public const string Carrot = \"carrot\" Field Value string CartArrowDown public const string CartArrowDown = \"cart-arrow-down\" Field Value string CartFlatbed public const string CartFlatbed = \"cart-flatbed\" Field Value string CartFlatbedSuitcase public const string CartFlatbedSuitcase = \"cart-flatbed-suitcase\" Field Value string CartPlus public const string CartPlus = \"cart-plus\" Field Value string CartShopping public const string CartShopping = \"cart-shopping\" Field Value string CashRegister public const string CashRegister = \"cash-register\" Field Value string Cat public const string Cat = \"cat\" Field Value string CcAmazonPay public const string CcAmazonPay = \"cc-amazon-pay\" Field Value string CcAmex public const string CcAmex = \"cc-amex\" Field Value string CcApplePay public const string CcApplePay = \"cc-apple-pay\" Field Value string CcDinersClub public const string CcDinersClub = \"cc-diners-club\" Field Value string CcDiscover public const string CcDiscover = \"cc-discover\" Field Value string CcJcb public const string CcJcb = \"cc-jcb\" Field Value string CcMastercard public const string CcMastercard = \"cc-mastercard\" Field Value string CcPaypal public const string CcPaypal = \"cc-paypal\" Field Value string CcStripe public const string CcStripe = \"cc-stripe\" Field Value string CcVisa public const string CcVisa = \"cc-visa\" Field Value string CediSign public const string CediSign = \"cedi-sign\" Field Value string CentSign public const string CentSign = \"cent-sign\" Field Value string Centercode public const string Centercode = \"centercode\" Field Value string Centos public const string Centos = \"centos\" Field Value string Certificate public const string Certificate = \"certificate\" Field Value string Chain public const string Chain = \"chain\" Field Value string ChainBroken public const string ChainBroken = \"chain-broken\" Field Value string ChainSlash public const string ChainSlash = \"chain-slash\" Field Value string Chair public const string Chair = \"chair\" Field Value string Chalkboard public const string Chalkboard = \"chalkboard\" Field Value string ChalkboardTeacher public const string ChalkboardTeacher = \"chalkboard-teacher\" Field Value string ChalkboardUser public const string ChalkboardUser = \"chalkboard-user\" Field Value string ChampagneGlasses public const string ChampagneGlasses = \"champagne-glasses\" Field Value string ChargingStation public const string ChargingStation = \"charging-station\" Field Value string ChartArea public const string ChartArea = \"chart-area\" Field Value string ChartBar public const string ChartBar = \"chart-bar\" Field Value string ChartColumn public const string ChartColumn = \"chart-column\" Field Value string ChartDiagram public const string ChartDiagram = \"chart-diagram\" Field Value string ChartGantt public const string ChartGantt = \"chart-gantt\" Field Value string ChartLine public const string ChartLine = \"chart-line\" Field Value string ChartPie public const string ChartPie = \"chart-pie\" Field Value string ChartSimple public const string ChartSimple = \"chart-simple\" Field Value string Check public const string Check = \"check\" Field Value string CheckCircle public const string CheckCircle = \"check-circle\" Field Value string CheckDouble public const string CheckDouble = \"check-double\" Field Value string CheckSquare public const string CheckSquare = \"check-square\" Field Value string CheckToSlot public const string CheckToSlot = \"check-to-slot\" Field Value string Cheese public const string Cheese = \"cheese\" Field Value string Chess public const string Chess = \"chess\" Field Value string ChessBishop public const string ChessBishop = \"chess-bishop\" Field Value string ChessBoard public const string ChessBoard = \"chess-board\" Field Value string ChessKing public const string ChessKing = \"chess-king\" Field Value string ChessKnight public const string ChessKnight = \"chess-knight\" Field Value string ChessPawn public const string ChessPawn = \"chess-pawn\" Field Value string ChessQueen public const string ChessQueen = \"chess-queen\" Field Value string ChessRook public const string ChessRook = \"chess-rook\" Field Value string ChevronCircleDown public const string ChevronCircleDown = \"chevron-circle-down\" Field Value string ChevronCircleLeft public const string ChevronCircleLeft = \"chevron-circle-left\" Field Value string ChevronCircleRight public const string ChevronCircleRight = \"chevron-circle-right\" Field Value string ChevronCircleUp public const string ChevronCircleUp = \"chevron-circle-up\" Field Value string ChevronDown public const string ChevronDown = \"chevron-down\" Field Value string ChevronLeft public const string ChevronLeft = \"chevron-left\" Field Value string ChevronRight public const string ChevronRight = \"chevron-right\" Field Value string ChevronUp public const string ChevronUp = \"chevron-up\" Field Value string Child public const string Child = \"child\" Field Value string ChildCombatant public const string ChildCombatant = \"child-combatant\" Field Value string ChildDress public const string ChildDress = \"child-dress\" Field Value string ChildReaching public const string ChildReaching = \"child-reaching\" Field Value string ChildRifle public const string ChildRifle = \"child-rifle\" Field Value string Children public const string Children = \"children\" Field Value string Chrome public const string Chrome = \"chrome\" Field Value string Chromecast public const string Chromecast = \"chromecast\" Field Value string Church public const string Church = \"church\" Field Value string Circle public const string Circle = \"circle\" Field Value string CircleArrowDown public const string CircleArrowDown = \"circle-arrow-down\" Field Value string CircleArrowLeft public const string CircleArrowLeft = \"circle-arrow-left\" Field Value string CircleArrowRight public const string CircleArrowRight = \"circle-arrow-right\" Field Value string CircleArrowUp public const string CircleArrowUp = \"circle-arrow-up\" Field Value string CircleCheck public const string CircleCheck = \"circle-check\" Field Value string CircleChevronDown public const string CircleChevronDown = \"circle-chevron-down\" Field Value string CircleChevronLeft public const string CircleChevronLeft = \"circle-chevron-left\" Field Value string CircleChevronRight public const string CircleChevronRight = \"circle-chevron-right\" Field Value string CircleChevronUp public const string CircleChevronUp = \"circle-chevron-up\" Field Value string CircleDollarToSlot public const string CircleDollarToSlot = \"circle-dollar-to-slot\" Field Value string CircleDot public const string CircleDot = \"circle-dot\" Field Value string CircleDown public const string CircleDown = \"circle-down\" Field Value string CircleExclamation public const string CircleExclamation = \"circle-exclamation\" Field Value string CircleH public const string CircleH = \"circle-h\" Field Value string CircleHalfStroke public const string CircleHalfStroke = \"circle-half-stroke\" Field Value string CircleInfo public const string CircleInfo = \"circle-info\" Field Value string CircleLeft public const string CircleLeft = \"circle-left\" Field Value string CircleMinus public const string CircleMinus = \"circle-minus\" Field Value string CircleNodes public const string CircleNodes = \"circle-nodes\" Field Value string CircleNotch public const string CircleNotch = \"circle-notch\" Field Value string CirclePause public const string CirclePause = \"circle-pause\" Field Value string CirclePlay public const string CirclePlay = \"circle-play\" Field Value string CirclePlus public const string CirclePlus = \"circle-plus\" Field Value string CircleQuestion public const string CircleQuestion = \"circle-question\" Field Value string CircleRadiation public const string CircleRadiation = \"circle-radiation\" Field Value string CircleRight public const string CircleRight = \"circle-right\" Field Value string CircleStop public const string CircleStop = \"circle-stop\" Field Value string CircleUp public const string CircleUp = \"circle-up\" Field Value string CircleUser public const string CircleUser = \"circle-user\" Field Value string CircleXmark public const string CircleXmark = \"circle-xmark\" Field Value string City public const string City = \"city\" Field Value string Clapperboard public const string Clapperboard = \"clapperboard\" Field Value string ClinicMedical public const string ClinicMedical = \"clinic-medical\" Field Value string Clipboard public const string Clipboard = \"clipboard\" Field Value string ClipboardCheck public const string ClipboardCheck = \"clipboard-check\" Field Value string ClipboardList public const string ClipboardList = \"clipboard-list\" Field Value string ClipboardQuestion public const string ClipboardQuestion = \"clipboard-question\" Field Value string ClipboardUser public const string ClipboardUser = \"clipboard-user\" Field Value string Clock public const string Clock = \"clock\" Field Value string ClockFour public const string ClockFour = \"clock-four\" Field Value string ClockRotateLeft public const string ClockRotateLeft = \"clock-rotate-left\" Field Value string Clone public const string Clone = \"clone\" Field Value string Close public const string Close = \"close\" Field Value string ClosedCaptioning public const string ClosedCaptioning = \"closed-captioning\" Field Value string Cloud public const string Cloud = \"cloud\" Field Value string CloudArrowDown public const string CloudArrowDown = \"cloud-arrow-down\" Field Value string CloudArrowUp public const string CloudArrowUp = \"cloud-arrow-up\" Field Value string CloudBolt public const string CloudBolt = \"cloud-bolt\" Field Value string CloudDownload public const string CloudDownload = \"cloud-download\" Field Value string CloudDownloadAlt public const string CloudDownloadAlt = \"cloud-download-alt\" Field Value string CloudMeatball public const string CloudMeatball = \"cloud-meatball\" Field Value string CloudMoon public const string CloudMoon = \"cloud-moon\" Field Value string CloudMoonRain public const string CloudMoonRain = \"cloud-moon-rain\" Field Value string CloudRain public const string CloudRain = \"cloud-rain\" Field Value string CloudShowersHeavy public const string CloudShowersHeavy = \"cloud-showers-heavy\" Field Value string CloudShowersWater public const string CloudShowersWater = \"cloud-showers-water\" Field Value string CloudSun public const string CloudSun = \"cloud-sun\" Field Value string CloudSunRain public const string CloudSunRain = \"cloud-sun-rain\" Field Value string CloudUpload public const string CloudUpload = \"cloud-upload\" Field Value string CloudUploadAlt public const string CloudUploadAlt = \"cloud-upload-alt\" Field Value string Cloudflare public const string Cloudflare = \"cloudflare\" Field Value string Cloudscale public const string Cloudscale = \"cloudscale\" Field Value string Cloudsmith public const string Cloudsmith = \"cloudsmith\" Field Value string Cloudversify public const string Cloudversify = \"cloudversify\" Field Value string Clover public const string Clover = \"clover\" Field Value string Cmplid public const string Cmplid = \"cmplid\" Field Value string Cny public const string Cny = \"cny\" Field Value string Cocktail public const string Cocktail = \"cocktail\" Field Value string Code public const string Code = \"code\" Field Value string CodeBranch public const string CodeBranch = \"code-branch\" Field Value string CodeCommit public const string CodeCommit = \"code-commit\" Field Value string CodeCompare public const string CodeCompare = \"code-compare\" Field Value string CodeFork public const string CodeFork = \"code-fork\" Field Value string CodeMerge public const string CodeMerge = \"code-merge\" Field Value string CodePullRequest public const string CodePullRequest = \"code-pull-request\" Field Value string Codepen public const string Codepen = \"codepen\" Field Value string Codiepie public const string Codiepie = \"codiepie\" Field Value string Coffee public const string Coffee = \"coffee\" Field Value string Cog public const string Cog = \"cog\" Field Value string Cogs public const string Cogs = \"cogs\" Field Value string Coins public const string Coins = \"coins\" Field Value string ColonSign public const string ColonSign = \"colon-sign\" Field Value string Columns public const string Columns = \"columns\" Field Value string Comment public const string Comment = \"comment\" Field Value string CommentAlt public const string CommentAlt = \"comment-alt\" Field Value string CommentDollar public const string CommentDollar = \"comment-dollar\" Field Value string CommentDots public const string CommentDots = \"comment-dots\" Field Value string CommentMedical public const string CommentMedical = \"comment-medical\" Field Value string CommentNodes public const string CommentNodes = \"comment-nodes\" Field Value string CommentSlash public const string CommentSlash = \"comment-slash\" Field Value string CommentSms public const string CommentSms = \"comment-sms\" Field Value string Commenting public const string Commenting = \"commenting\" Field Value string Comments public const string Comments = \"comments\" Field Value string CommentsDollar public const string CommentsDollar = \"comments-dollar\" Field Value string CompactDisc public const string CompactDisc = \"compact-disc\" Field Value string Compass public const string Compass = \"compass\" Field Value string CompassDrafting public const string CompassDrafting = \"compass-drafting\" Field Value string Compress public const string Compress = \"compress\" Field Value string CompressAlt public const string CompressAlt = \"compress-alt\" Field Value string CompressArrowsAlt public const string CompressArrowsAlt = \"compress-arrows-alt\" Field Value string Computer public const string Computer = \"computer\" Field Value string ComputerMouse public const string ComputerMouse = \"computer-mouse\" Field Value string ConciergeBell public const string ConciergeBell = \"concierge-bell\" Field Value string Confluence public const string Confluence = \"confluence\" Field Value string Connectdevelop public const string Connectdevelop = \"connectdevelop\" Field Value string ContactBook public const string ContactBook = \"contact-book\" Field Value string ContactCard public const string ContactCard = \"contact-card\" Field Value string Contao public const string Contao = \"contao\" Field Value string Cookie public const string Cookie = \"cookie\" Field Value string CookieBite public const string CookieBite = \"cookie-bite\" Field Value string Copy public const string Copy = \"copy\" Field Value string Copyright public const string Copyright = \"copyright\" Field Value string CottonBureau public const string CottonBureau = \"cotton-bureau\" Field Value string Couch public const string Couch = \"couch\" Field Value string Cow public const string Cow = \"cow\" Field Value string Cpanel public const string Cpanel = \"cpanel\" Field Value string CreativeCommons public const string CreativeCommons = \"creative-commons\" Field Value string CreativeCommonsBy public const string CreativeCommonsBy = \"creative-commons-by\" Field Value string CreativeCommonsNc public const string CreativeCommonsNc = \"creative-commons-nc\" Field Value string CreativeCommonsNcEu public const string CreativeCommonsNcEu = \"creative-commons-nc-eu\" Field Value string CreativeCommonsNcJp public const string CreativeCommonsNcJp = \"creative-commons-nc-jp\" Field Value string CreativeCommonsNd public const string CreativeCommonsNd = \"creative-commons-nd\" Field Value string CreativeCommonsPd public const string CreativeCommonsPd = \"creative-commons-pd\" Field Value string CreativeCommonsPdAlt public const string CreativeCommonsPdAlt = \"creative-commons-pd-alt\" Field Value string CreativeCommonsRemix public const string CreativeCommonsRemix = \"creative-commons-remix\" Field Value string CreativeCommonsSa public const string CreativeCommonsSa = \"creative-commons-sa\" Field Value string CreativeCommonsSampling public const string CreativeCommonsSampling = \"creative-commons-sampling\" Field Value string CreativeCommonsSamplingPlus public const string CreativeCommonsSamplingPlus = \"creative-commons-sampling-plus\" Field Value string CreativeCommonsShare public const string CreativeCommonsShare = \"creative-commons-share\" Field Value string CreativeCommonsZero public const string CreativeCommonsZero = \"creative-commons-zero\" Field Value string CreditCard public const string CreditCard = \"credit-card\" Field Value string CreditCardAlt public const string CreditCardAlt = \"credit-card-alt\" Field Value string CriticalRole public const string CriticalRole = \"critical-role\" Field Value string Crop public const string Crop = \"crop\" Field Value string CropAlt public const string CropAlt = \"crop-alt\" Field Value string CropSimple public const string CropSimple = \"crop-simple\" Field Value string Cross public const string Cross = \"cross\" Field Value string Crosshairs public const string Crosshairs = \"crosshairs\" Field Value string Crow public const string Crow = \"crow\" Field Value string Crown public const string Crown = \"crown\" Field Value string Crutch public const string Crutch = \"crutch\" Field Value string CruzeiroSign public const string CruzeiroSign = \"cruzeiro-sign\" Field Value string Css public const string Css = \"css\" Field Value string Css3 public const string Css3 = \"css3\" Field Value string Css3Alt public const string Css3Alt = \"css3-alt\" Field Value string Cube public const string Cube = \"cube\" Field Value string Cubes public const string Cubes = \"cubes\" Field Value string CubesStacked public const string CubesStacked = \"cubes-stacked\" Field Value string Cut public const string Cut = \"cut\" Field Value string Cutlery public const string Cutlery = \"cutlery\" Field Value string Cuttlefish public const string Cuttlefish = \"cuttlefish\" Field Value string D public const string D = \"d\" Field Value string D_And_D public const string D_And_D = \"d-and-d\" Field Value string D_And_D_beyond public const string D_And_D_beyond = \"d-and-d-beyond\" Field Value string Dailymotion public const string Dailymotion = \"dailymotion\" Field Value string DartLang public const string DartLang = \"dart-lang\" Field Value string Dashboard public const string Dashboard = \"dashboard\" Field Value string Dashcube public const string Dashcube = \"dashcube\" Field Value string Database public const string Database = \"database\" Field Value string Deaf public const string Deaf = \"deaf\" Field Value string Deafness public const string Deafness = \"deafness\" Field Value string Debian public const string Debian = \"debian\" Field Value string Dedent public const string Dedent = \"dedent\" Field Value string Deezer public const string Deezer = \"deezer\" Field Value string DeleteLeft public const string DeleteLeft = \"delete-left\" Field Value string Delicious public const string Delicious = \"delicious\" Field Value string Democrat public const string Democrat = \"democrat\" Field Value string Deploydog public const string Deploydog = \"deploydog\" Field Value string Deskpro public const string Deskpro = \"deskpro\" Field Value string Desktop public const string Desktop = \"desktop\" Field Value string DesktopAlt public const string DesktopAlt = \"desktop-alt\" Field Value string Dev public const string Dev = \"dev\" Field Value string Deviantart public const string Deviantart = \"deviantart\" Field Value string Dharmachakra public const string Dharmachakra = \"dharmachakra\" Field Value string Dhl public const string Dhl = \"dhl\" Field Value string Diagnoses public const string Diagnoses = \"diagnoses\" Field Value string DiagramNext public const string DiagramNext = \"diagram-next\" Field Value string DiagramPredecessor public const string DiagramPredecessor = \"diagram-predecessor\" Field Value string DiagramProject public const string DiagramProject = \"diagram-project\" Field Value string DiagramSuccessor public const string DiagramSuccessor = \"diagram-successor\" Field Value string Diamond public const string Diamond = \"diamond\" Field Value string DiamondTurnRight public const string DiamondTurnRight = \"diamond-turn-right\" Field Value string Diaspora public const string Diaspora = \"diaspora\" Field Value string Dice public const string Dice = \"dice\" Field Value string DiceD20 public const string DiceD20 = \"dice-d20\" Field Value string DiceD6 public const string DiceD6 = \"dice-d6\" Field Value string DiceFive public const string DiceFive = \"dice-five\" Field Value string DiceFour public const string DiceFour = \"dice-four\" Field Value string DiceOne public const string DiceOne = \"dice-one\" Field Value string DiceSix public const string DiceSix = \"dice-six\" Field Value string DiceThree public const string DiceThree = \"dice-three\" Field Value string DiceTwo public const string DiceTwo = \"dice-two\" Field Value string Digg public const string Digg = \"digg\" Field Value string Digging public const string Digging = \"digging\" Field Value string DigitalOcean public const string DigitalOcean = \"digital-ocean\" Field Value string DigitalTachograph public const string DigitalTachograph = \"digital-tachograph\" Field Value string Directions public const string Directions = \"directions\" Field Value string Discord public const string Discord = \"discord\" Field Value string Discourse public const string Discourse = \"discourse\" Field Value string Disease public const string Disease = \"disease\" Field Value string Display public const string Display = \"display\" Field Value string Divide public const string Divide = \"divide\" Field Value string Dizzy public const string Dizzy = \"dizzy\" Field Value string Dna public const string Dna = \"dna\" Field Value string Dochub public const string Dochub = \"dochub\" Field Value string Docker public const string Docker = \"docker\" Field Value string Dog public const string Dog = \"dog\" Field Value string Dollar public const string Dollar = \"dollar\" Field Value string DollarSign public const string DollarSign = \"dollar-sign\" Field Value string Dolly public const string Dolly = \"dolly\" Field Value string DollyBox public const string DollyBox = \"dolly-box\" Field Value string DollyFlatbed public const string DollyFlatbed = \"dolly-flatbed\" Field Value string Donate public const string Donate = \"donate\" Field Value string DongSign public const string DongSign = \"dong-sign\" Field Value string DoorClosed public const string DoorClosed = \"door-closed\" Field Value string DoorOpen public const string DoorOpen = \"door-open\" Field Value string DotCircle public const string DotCircle = \"dot-circle\" Field Value string Dove public const string Dove = \"dove\" Field Value string DownLeftAndUpRightToCenter public const string DownLeftAndUpRightToCenter = \"down-left-and-up-right-to-center\" Field Value string DownLong public const string DownLong = \"down-long\" Field Value string Download public const string Download = \"download\" Field Value string Draft2digital public const string Draft2digital = \"draft2digital\" Field Value string DraftingCompass public const string DraftingCompass = \"drafting-compass\" Field Value string Dragon public const string Dragon = \"dragon\" Field Value string DrawPolygon public const string DrawPolygon = \"draw-polygon\" Field Value string Dribbble public const string Dribbble = \"dribbble\" Field Value string DribbbleSquare public const string DribbbleSquare = \"dribbble-square\" Field Value string DriversLicense public const string DriversLicense = \"drivers-license\" Field Value string Dropbox public const string Dropbox = \"dropbox\" Field Value string Droplet public const string Droplet = \"droplet\" Field Value string DropletSlash public const string DropletSlash = \"droplet-slash\" Field Value string Drum public const string Drum = \"drum\" Field Value string DrumSteelpan public const string DrumSteelpan = \"drum-steelpan\" Field Value string DrumstickBite public const string DrumstickBite = \"drumstick-bite\" Field Value string Drupal public const string Drupal = \"drupal\" Field Value string Dumbbell public const string Dumbbell = \"dumbbell\" Field Value string Dumpster public const string Dumpster = \"dumpster\" Field Value string DumpsterFire public const string DumpsterFire = \"dumpster-fire\" Field Value string Dungeon public const string Dungeon = \"dungeon\" Field Value string Dyalog public const string Dyalog = \"dyalog\" Field Value string E public const string E = \"e\" Field Value string EarDeaf public const string EarDeaf = \"ear-deaf\" Field Value string EarListen public const string EarListen = \"ear-listen\" Field Value string Earlybirds public const string Earlybirds = \"earlybirds\" Field Value string Earth public const string Earth = \"earth\" Field Value string EarthAfrica public const string EarthAfrica = \"earth-africa\" Field Value string EarthAmerica public const string EarthAmerica = \"earth-america\" Field Value string EarthAmericas public const string EarthAmericas = \"earth-americas\" Field Value string EarthAsia public const string EarthAsia = \"earth-asia\" Field Value string EarthEurope public const string EarthEurope = \"earth-europe\" Field Value string EarthOceania public const string EarthOceania = \"earth-oceania\" Field Value string Ebay public const string Ebay = \"ebay\" Field Value string Edge public const string Edge = \"edge\" Field Value string EdgeLegacy public const string EdgeLegacy = \"edge-legacy\" Field Value string Edit public const string Edit = \"edit\" Field Value string Egg public const string Egg = \"egg\" Field Value string Eject public const string Eject = \"eject\" Field Value string Elementor public const string Elementor = \"elementor\" Field Value string Elevator public const string Elevator = \"elevator\" Field Value string Ellipsis public const string Ellipsis = \"ellipsis\" Field Value string EllipsisH public const string EllipsisH = \"ellipsis-h\" Field Value string EllipsisV public const string EllipsisV = \"ellipsis-v\" Field Value string EllipsisVertical public const string EllipsisVertical = \"ellipsis-vertical\" Field Value string Ello public const string Ello = \"ello\" Field Value string Ember public const string Ember = \"ember\" Field Value string Empire public const string Empire = \"empire\" Field Value string Envelope public const string Envelope = \"envelope\" Field Value string EnvelopeCircleCheck public const string EnvelopeCircleCheck = \"envelope-circle-check\" Field Value string EnvelopeOpen public const string EnvelopeOpen = \"envelope-open\" Field Value string EnvelopeOpenText public const string EnvelopeOpenText = \"envelope-open-text\" Field Value string EnvelopeSquare public const string EnvelopeSquare = \"envelope-square\" Field Value string EnvelopesBulk public const string EnvelopesBulk = \"envelopes-bulk\" Field Value string Envira public const string Envira = \"envira\" Field Value string Equals public const string Equals = \"equals\" Field Value string Eraser public const string Eraser = \"eraser\" Field Value string Erlang public const string Erlang = \"erlang\" Field Value string Ethereum public const string Ethereum = \"ethereum\" Field Value string Ethernet public const string Ethernet = \"ethernet\" Field Value string Etsy public const string Etsy = \"etsy\" Field Value string Eur public const string Eur = \"eur\" Field Value string Euro public const string Euro = \"euro\" Field Value string EuroSign public const string EuroSign = \"euro-sign\" Field Value string Evernote public const string Evernote = \"evernote\" Field Value string Exchange public const string Exchange = \"exchange\" Field Value string ExchangeAlt public const string ExchangeAlt = \"exchange-alt\" Field Value string Exclamation public const string Exclamation = \"exclamation\" Field Value string ExclamationCircle public const string ExclamationCircle = \"exclamation-circle\" Field Value string ExclamationTriangle public const string ExclamationTriangle = \"exclamation-triangle\" Field Value string Expand public const string Expand = \"expand\" Field Value string ExpandAlt public const string ExpandAlt = \"expand-alt\" Field Value string ExpandArrowsAlt public const string ExpandArrowsAlt = \"expand-arrows-alt\" Field Value string Expeditedssl public const string Expeditedssl = \"expeditedssl\" Field Value string Explosion public const string Explosion = \"explosion\" Field Value string ExternalLink public const string ExternalLink = \"external-link\" Field Value string ExternalLinkAlt public const string ExternalLinkAlt = \"external-link-alt\" Field Value string ExternalLinkSquare public const string ExternalLinkSquare = \"external-link-square\" Field Value string ExternalLinkSquareAlt public const string ExternalLinkSquareAlt = \"external-link-square-alt\" Field Value string Eye public const string Eye = \"eye\" Field Value string EyeDropper public const string EyeDropper = \"eye-dropper\" Field Value string EyeDropperEmpty public const string EyeDropperEmpty = \"eye-dropper-empty\" Field Value string EyeLowVision public const string EyeLowVision = \"eye-low-vision\" Field Value string EyeSlash public const string EyeSlash = \"eye-slash\" Field Value string Eyedropper public const string Eyedropper = \"eyedropper\" Field Value string F public const string F = \"f\" Field Value string FaceAngry public const string FaceAngry = \"face-angry\" Field Value string FaceDizzy public const string FaceDizzy = \"face-dizzy\" Field Value string FaceFlushed public const string FaceFlushed = \"face-flushed\" Field Value string FaceFrown public const string FaceFrown = \"face-frown\" Field Value string FaceFrownOpen public const string FaceFrownOpen = \"face-frown-open\" Field Value string FaceGrimace public const string FaceGrimace = \"face-grimace\" Field Value string FaceGrin public const string FaceGrin = \"face-grin\" Field Value string FaceGrinBeam public const string FaceGrinBeam = \"face-grin-beam\" Field Value string FaceGrinBeamSweat public const string FaceGrinBeamSweat = \"face-grin-beam-sweat\" Field Value string FaceGrinHearts public const string FaceGrinHearts = \"face-grin-hearts\" Field Value string FaceGrinSquint public const string FaceGrinSquint = \"face-grin-squint\" Field Value string FaceGrinSquintTears public const string FaceGrinSquintTears = \"face-grin-squint-tears\" Field Value string FaceGrinStars public const string FaceGrinStars = \"face-grin-stars\" Field Value string FaceGrinTears public const string FaceGrinTears = \"face-grin-tears\" Field Value string FaceGrinTongue public const string FaceGrinTongue = \"face-grin-tongue\" Field Value string FaceGrinTongueSquint public const string FaceGrinTongueSquint = \"face-grin-tongue-squint\" Field Value string FaceGrinTongueWink public const string FaceGrinTongueWink = \"face-grin-tongue-wink\" Field Value string FaceGrinWide public const string FaceGrinWide = \"face-grin-wide\" Field Value string FaceGrinWink public const string FaceGrinWink = \"face-grin-wink\" Field Value string FaceKiss public const string FaceKiss = \"face-kiss\" Field Value string FaceKissBeam public const string FaceKissBeam = \"face-kiss-beam\" Field Value string FaceKissWinkHeart public const string FaceKissWinkHeart = \"face-kiss-wink-heart\" Field Value string FaceLaugh public const string FaceLaugh = \"face-laugh\" Field Value string FaceLaughBeam public const string FaceLaughBeam = \"face-laugh-beam\" Field Value string FaceLaughSquint public const string FaceLaughSquint = \"face-laugh-squint\" Field Value string FaceLaughWink public const string FaceLaughWink = \"face-laugh-wink\" Field Value string FaceMeh public const string FaceMeh = \"face-meh\" Field Value string FaceMehBlank public const string FaceMehBlank = \"face-meh-blank\" Field Value string FaceRollingEyes public const string FaceRollingEyes = \"face-rolling-eyes\" Field Value string FaceSadCry public const string FaceSadCry = \"face-sad-cry\" Field Value string FaceSadTear public const string FaceSadTear = \"face-sad-tear\" Field Value string FaceSmile public const string FaceSmile = \"face-smile\" Field Value string FaceSmileBeam public const string FaceSmileBeam = \"face-smile-beam\" Field Value string FaceSmileWink public const string FaceSmileWink = \"face-smile-wink\" Field Value string FaceSurprise public const string FaceSurprise = \"face-surprise\" Field Value string FaceTired public const string FaceTired = \"face-tired\" Field Value string Facebook public const string Facebook = \"facebook\" Field Value string FacebookF public const string FacebookF = \"facebook-f\" Field Value string FacebookMessenger public const string FacebookMessenger = \"facebook-messenger\" Field Value string FacebookSquare public const string FacebookSquare = \"facebook-square\" Field Value string Fan public const string Fan = \"fan\" Field Value string FantasyFlightGames public const string FantasyFlightGames = \"fantasy-flight-games\" Field Value string FastBackward public const string FastBackward = \"fast-backward\" Field Value string FastForward public const string FastForward = \"fast-forward\" Field Value string Faucet public const string Faucet = \"faucet\" Field Value string FaucetDrip public const string FaucetDrip = \"faucet-drip\" Field Value string Fax public const string Fax = \"fax\" Field Value string Feather public const string Feather = \"feather\" Field Value string FeatherAlt public const string FeatherAlt = \"feather-alt\" Field Value string FeatherPointed public const string FeatherPointed = \"feather-pointed\" Field Value string Fedex public const string Fedex = \"fedex\" Field Value string Fedora public const string Fedora = \"fedora\" Field Value string Feed public const string Feed = \"feed\" Field Value string Female public const string Female = \"female\" Field Value string Ferry public const string Ferry = \"ferry\" Field Value string FighterJet public const string FighterJet = \"fighter-jet\" Field Value string Figma public const string Figma = \"figma\" Field Value string File public const string File = \"file\" Field Value string FileAlt public const string FileAlt = \"file-alt\" Field Value string FileArchive public const string FileArchive = \"file-archive\" Field Value string FileArrowDown public const string FileArrowDown = \"file-arrow-down\" Field Value string FileArrowUp public const string FileArrowUp = \"file-arrow-up\" Field Value string FileAudio public const string FileAudio = \"file-audio\" Field Value string FileCircleCheck public const string FileCircleCheck = \"file-circle-check\" Field Value string FileCircleExclamation public const string FileCircleExclamation = \"file-circle-exclamation\" Field Value string FileCircleMinus public const string FileCircleMinus = \"file-circle-minus\" Field Value string FileCirclePlus public const string FileCirclePlus = \"file-circle-plus\" Field Value string FileCircleQuestion public const string FileCircleQuestion = \"file-circle-question\" Field Value string FileCircleXmark public const string FileCircleXmark = \"file-circle-xmark\" Field Value string FileClipboard public const string FileClipboard = \"file-clipboard\" Field Value string FileCode public const string FileCode = \"file-code\" Field Value string FileContract public const string FileContract = \"file-contract\" Field Value string FileCsv public const string FileCsv = \"file-csv\" Field Value string FileDownload public const string FileDownload = \"file-download\" Field Value string FileEdit public const string FileEdit = \"file-edit\" Field Value string FileExcel public const string FileExcel = \"file-excel\" Field Value string FileExport public const string FileExport = \"file-export\" Field Value string FileFragment public const string FileFragment = \"file-fragment\" Field Value string FileHalfDashed public const string FileHalfDashed = \"file-half-dashed\" Field Value string FileImage public const string FileImage = \"file-image\" Field Value string FileImport public const string FileImport = \"file-import\" Field Value string FileInvoice public const string FileInvoice = \"file-invoice\" Field Value string FileInvoiceDollar public const string FileInvoiceDollar = \"file-invoice-dollar\" Field Value string FileLines public const string FileLines = \"file-lines\" Field Value string FileMedical public const string FileMedical = \"file-medical\" Field Value string FileMedicalAlt public const string FileMedicalAlt = \"file-medical-alt\" Field Value string FilePdf public const string FilePdf = \"file-pdf\" Field Value string FilePen public const string FilePen = \"file-pen\" Field Value string FilePowerpoint public const string FilePowerpoint = \"file-powerpoint\" Field Value string FilePrescription public const string FilePrescription = \"file-prescription\" Field Value string FileShield public const string FileShield = \"file-shield\" Field Value string FileSignature public const string FileSignature = \"file-signature\" Field Value string FileText public const string FileText = \"file-text\" Field Value string FileUpload public const string FileUpload = \"file-upload\" Field Value string FileVideo public const string FileVideo = \"file-video\" Field Value string FileWaveform public const string FileWaveform = \"file-waveform\" Field Value string FileWord public const string FileWord = \"file-word\" Field Value string FileZipper public const string FileZipper = \"file-zipper\" Field Value string FilesPinwheel public const string FilesPinwheel = \"files-pinwheel\" Field Value string Fill public const string Fill = \"fill\" Field Value string FillDrip public const string FillDrip = \"fill-drip\" Field Value string Film public const string Film = \"film\" Field Value string Filter public const string Filter = \"filter\" Field Value string FilterCircleDollar public const string FilterCircleDollar = \"filter-circle-dollar\" Field Value string FilterCircleXmark public const string FilterCircleXmark = \"filter-circle-xmark\" Field Value string Fingerprint public const string Fingerprint = \"fingerprint\" Field Value string Fire public const string Fire = \"fire\" Field Value string FireAlt public const string FireAlt = \"fire-alt\" Field Value string FireBurner public const string FireBurner = \"fire-burner\" Field Value string FireExtinguisher public const string FireExtinguisher = \"fire-extinguisher\" Field Value string FireFlameCurved public const string FireFlameCurved = \"fire-flame-curved\" Field Value string FireFlameSimple public const string FireFlameSimple = \"fire-flame-simple\" Field Value string Firefox public const string Firefox = \"firefox\" Field Value string FirefoxBrowser public const string FirefoxBrowser = \"firefox-browser\" Field Value string FirstAid public const string FirstAid = \"first-aid\" Field Value string FirstOrder public const string FirstOrder = \"first-order\" Field Value string FirstOrderAlt public const string FirstOrderAlt = \"first-order-alt\" Field Value string Firstdraft public const string Firstdraft = \"firstdraft\" Field Value string Fish public const string Fish = \"fish\" Field Value string FishFins public const string FishFins = \"fish-fins\" Field Value string FistRaised public const string FistRaised = \"fist-raised\" Field Value string FiveHundredPixels public const string FiveHundredPixels = \"500px\" Field Value string Flag public const string Flag = \"flag\" Field Value string FlagCheckered public const string FlagCheckered = \"flag-checkered\" Field Value string FlagUsa public const string FlagUsa = \"flag-usa\" Field Value string Flask public const string Flask = \"flask\" Field Value string FlaskVial public const string FlaskVial = \"flask-vial\" Field Value string Flickr public const string Flickr = \"flickr\" Field Value string Flipboard public const string Flipboard = \"flipboard\" Field Value string FloppyDisk public const string FloppyDisk = \"floppy-disk\" Field Value string FlorinSign public const string FlorinSign = \"florin-sign\" Field Value string Flushed public const string Flushed = \"flushed\" Field Value string Flutter public const string Flutter = \"flutter\" Field Value string Fly public const string Fly = \"fly\" Field Value string Folder public const string Folder = \"folder\" Field Value string FolderBlank public const string FolderBlank = \"folder-blank\" Field Value string FolderClosed public const string FolderClosed = \"folder-closed\" Field Value string FolderMinus public const string FolderMinus = \"folder-minus\" Field Value string FolderOpen public const string FolderOpen = \"folder-open\" Field Value string FolderPlus public const string FolderPlus = \"folder-plus\" Field Value string FolderTree public const string FolderTree = \"folder-tree\" Field Value string Font public const string Font = \"font\" Field Value string FontAwesome public const string FontAwesome = \"font-awesome\" Field Value string FontAwesomeAlt public const string FontAwesomeAlt = \"font-awesome-alt\" Field Value string FontAwesomeFlag public const string FontAwesomeFlag = \"font-awesome-flag\" Field Value string FontAwesomeLogoFull public const string FontAwesomeLogoFull = \"font-awesome-logo-full\" Field Value string Fonticons public const string Fonticons = \"fonticons\" Field Value string FonticonsFi public const string FonticonsFi = \"fonticons-fi\" Field Value string Football public const string Football = \"football\" Field Value string FootballBall public const string FootballBall = \"football-ball\" Field Value string FortAwesome public const string FortAwesome = \"fort-awesome\" Field Value string FortAwesomeAlt public const string FortAwesomeAlt = \"fort-awesome-alt\" Field Value string FortyTwoGroup public const string FortyTwoGroup = \"42-group\" Field Value string Forumbee public const string Forumbee = \"forumbee\" Field Value string Forward public const string Forward = \"forward\" Field Value string ForwardFast public const string ForwardFast = \"forward-fast\" Field Value string ForwardStep public const string ForwardStep = \"forward-step\" Field Value string Foursquare public const string Foursquare = \"foursquare\" Field Value string FrancSign public const string FrancSign = \"franc-sign\" Field Value string FreeCodeCamp public const string FreeCodeCamp = \"free-code-camp\" Field Value string Freebsd public const string Freebsd = \"freebsd\" Field Value string Frog public const string Frog = \"frog\" Field Value string Frown public const string Frown = \"frown\" Field Value string FrownOpen public const string FrownOpen = \"frown-open\" Field Value string Fulcrum public const string Fulcrum = \"fulcrum\" Field Value string FunnelDollar public const string FunnelDollar = \"funnel-dollar\" Field Value string Futbol public const string Futbol = \"futbol\" Field Value string FutbolBall public const string FutbolBall = \"futbol-ball\" Field Value string G public const string G = \"g\" Field Value string GalacticRepublic public const string GalacticRepublic = \"galactic-republic\" Field Value string GalacticSenate public const string GalacticSenate = \"galactic-senate\" Field Value string Gamepad public const string Gamepad = \"gamepad\" Field Value string GasPump public const string GasPump = \"gas-pump\" Field Value string Gauge public const string Gauge = \"gauge\" Field Value string GaugeHigh public const string GaugeHigh = \"gauge-high\" Field Value string GaugeMed public const string GaugeMed = \"gauge-med\" Field Value string GaugeSimple public const string GaugeSimple = \"gauge-simple\" Field Value string GaugeSimpleHigh public const string GaugeSimpleHigh = \"gauge-simple-high\" Field Value string GaugeSimpleMed public const string GaugeSimpleMed = \"gauge-simple-med\" Field Value string Gavel public const string Gavel = \"gavel\" Field Value string Gbp public const string Gbp = \"gbp\" Field Value string Gear public const string Gear = \"gear\" Field Value string Gears public const string Gears = \"gears\" Field Value string Gem public const string Gem = \"gem\" Field Value string Genderless public const string Genderless = \"genderless\" Field Value string GetPocket public const string GetPocket = \"get-pocket\" Field Value string Gg public const string Gg = \"gg\" Field Value string GgCircle public const string GgCircle = \"gg-circle\" Field Value string Ghost public const string Ghost = \"ghost\" Field Value string Gift public const string Gift = \"gift\" Field Value string Gifts public const string Gifts = \"gifts\" Field Value string Git public const string Git = \"git\" Field Value string GitAlt public const string GitAlt = \"git-alt\" Field Value string GitSquare public const string GitSquare = \"git-square\" Field Value string Github public const string Github = \"github\" Field Value string GithubAlt public const string GithubAlt = \"github-alt\" Field Value string GithubSquare public const string GithubSquare = \"github-square\" Field Value string Gitkraken public const string Gitkraken = \"gitkraken\" Field Value string Gitlab public const string Gitlab = \"gitlab\" Field Value string GitlabSquare public const string GitlabSquare = \"gitlab-square\" Field Value string Gitter public const string Gitter = \"gitter\" Field Value string GlassCheers public const string GlassCheers = \"glass-cheers\" Field Value string GlassMartini public const string GlassMartini = \"glass-martini\" Field Value string GlassMartiniAlt public const string GlassMartiniAlt = \"glass-martini-alt\" Field Value string GlassWater public const string GlassWater = \"glass-water\" Field Value string GlassWaterDroplet public const string GlassWaterDroplet = \"glass-water-droplet\" Field Value string GlassWhiskey public const string GlassWhiskey = \"glass-whiskey\" Field Value string Glasses public const string Glasses = \"glasses\" Field Value string Glide public const string Glide = \"glide\" Field Value string GlideG public const string GlideG = \"glide-g\" Field Value string Globe public const string Globe = \"globe\" Field Value string GlobeAfrica public const string GlobeAfrica = \"globe-africa\" Field Value string GlobeAmericas public const string GlobeAmericas = \"globe-americas\" Field Value string GlobeAsia public const string GlobeAsia = \"globe-asia\" Field Value string GlobeEurope public const string GlobeEurope = \"globe-europe\" Field Value string GlobeOceania public const string GlobeOceania = \"globe-oceania\" Field Value string Gofore public const string Gofore = \"gofore\" Field Value string Golang public const string Golang = \"golang\" Field Value string GolfBall public const string GolfBall = \"golf-ball\" Field Value string GolfBallTee public const string GolfBallTee = \"golf-ball-tee\" Field Value string Goodreads public const string Goodreads = \"goodreads\" Field Value string GoodreadsG public const string GoodreadsG = \"goodreads-g\" Field Value string Google public const string Google = \"google\" Field Value string GoogleDrive public const string GoogleDrive = \"google-drive\" Field Value string GooglePay public const string GooglePay = \"google-pay\" Field Value string GooglePlay public const string GooglePlay = \"google-play\" Field Value string GooglePlus public const string GooglePlus = \"google-plus\" Field Value string GooglePlusG public const string GooglePlusG = \"google-plus-g\" Field Value string GooglePlusSquare public const string GooglePlusSquare = \"google-plus-square\" Field Value string GoogleScholar public const string GoogleScholar = \"google-scholar\" Field Value string GoogleWallet public const string GoogleWallet = \"google-wallet\" Field Value string Gopuram public const string Gopuram = \"gopuram\" Field Value string GraduationCap public const string GraduationCap = \"graduation-cap\" Field Value string Gratipay public const string Gratipay = \"gratipay\" Field Value string Grav public const string Grav = \"grav\" Field Value string GreaterThan public const string GreaterThan = \"greater-than\" Field Value string GreaterThanEqual public const string GreaterThanEqual = \"greater-than-equal\" Field Value string Grimace public const string Grimace = \"grimace\" Field Value string Grin public const string Grin = \"grin\" Field Value string GrinAlt public const string GrinAlt = \"grin-alt\" Field Value string GrinBeam public const string GrinBeam = \"grin-beam\" Field Value string GrinBeamSweat public const string GrinBeamSweat = \"grin-beam-sweat\" Field Value string GrinHearts public const string GrinHearts = \"grin-hearts\" Field Value string GrinSquint public const string GrinSquint = \"grin-squint\" Field Value string GrinSquintTears public const string GrinSquintTears = \"grin-squint-tears\" Field Value string GrinStars public const string GrinStars = \"grin-stars\" Field Value string GrinTears public const string GrinTears = \"grin-tears\" Field Value string GrinTongue public const string GrinTongue = \"grin-tongue\" Field Value string GrinTongueSquint public const string GrinTongueSquint = \"grin-tongue-squint\" Field Value string GrinTongueWink public const string GrinTongueWink = \"grin-tongue-wink\" Field Value string GrinWink public const string GrinWink = \"grin-wink\" Field Value string Grip public const string Grip = \"grip\" Field Value string GripHorizontal public const string GripHorizontal = \"grip-horizontal\" Field Value string GripLines public const string GripLines = \"grip-lines\" Field Value string GripLinesVertical public const string GripLinesVertical = \"grip-lines-vertical\" Field Value string GripVertical public const string GripVertical = \"grip-vertical\" Field Value string Gripfire public const string Gripfire = \"gripfire\" Field Value string GroupArrowsRotate public const string GroupArrowsRotate = \"group-arrows-rotate\" Field Value string Grunt public const string Grunt = \"grunt\" Field Value string GuaraniSign public const string GuaraniSign = \"guarani-sign\" Field Value string Guilded public const string Guilded = \"guilded\" Field Value string Guitar public const string Guitar = \"guitar\" Field Value string Gulp public const string Gulp = \"gulp\" Field Value string Gun public const string Gun = \"gun\" Field Value string H public const string H = \"h\" Field Value string H_Square public const string H_Square = \"h-square\" Field Value string HackerNews public const string HackerNews = \"hacker-news\" Field Value string HackerNewsSquare public const string HackerNewsSquare = \"hacker-news-square\" Field Value string Hackerrank public const string Hackerrank = \"hackerrank\" Field Value string Hamburger public const string Hamburger = \"hamburger\" Field Value string Hammer public const string Hammer = \"hammer\" Field Value string Hamsa public const string Hamsa = \"hamsa\" Field Value string Hand public const string Hand = \"hand\" Field Value string HandBackFist public const string HandBackFist = \"hand-back-fist\" Field Value string HandDots public const string HandDots = \"hand-dots\" Field Value string HandFist public const string HandFist = \"hand-fist\" Field Value string HandHolding public const string HandHolding = \"hand-holding\" Field Value string HandHoldingDollar public const string HandHoldingDollar = \"hand-holding-dollar\" Field Value string HandHoldingDroplet public const string HandHoldingDroplet = \"hand-holding-droplet\" Field Value string HandHoldingHand public const string HandHoldingHand = \"hand-holding-hand\" Field Value string HandHoldingHeart public const string HandHoldingHeart = \"hand-holding-heart\" Field Value string HandHoldingMedical public const string HandHoldingMedical = \"hand-holding-medical\" Field Value string HandHoldingUsd public const string HandHoldingUsd = \"hand-holding-usd\" Field Value string HandHoldingWater public const string HandHoldingWater = \"hand-holding-water\" Field Value string HandLizard public const string HandLizard = \"hand-lizard\" Field Value string HandMiddleFinger public const string HandMiddleFinger = \"hand-middle-finger\" Field Value string HandPaper public const string HandPaper = \"hand-paper\" Field Value string HandPeace public const string HandPeace = \"hand-peace\" Field Value string HandPointDown public const string HandPointDown = \"hand-point-down\" Field Value string HandPointLeft public const string HandPointLeft = \"hand-point-left\" Field Value string HandPointRight public const string HandPointRight = \"hand-point-right\" Field Value string HandPointUp public const string HandPointUp = \"hand-point-up\" Field Value string HandPointer public const string HandPointer = \"hand-pointer\" Field Value string HandRock public const string HandRock = \"hand-rock\" Field Value string HandScissors public const string HandScissors = \"hand-scissors\" Field Value string HandSparkles public const string HandSparkles = \"hand-sparkles\" Field Value string HandSpock public const string HandSpock = \"hand-spock\" Field Value string Handcuffs public const string Handcuffs = \"handcuffs\" Field Value string Hands public const string Hands = \"hands\" Field Value string HandsAmericanSignLanguageInterpreting public const string HandsAmericanSignLanguageInterpreting = \"hands-american-sign-language-interpreting\" Field Value string HandsAslInterpreting public const string HandsAslInterpreting = \"hands-asl-interpreting\" Field Value string HandsBound public const string HandsBound = \"hands-bound\" Field Value string HandsBubbles public const string HandsBubbles = \"hands-bubbles\" Field Value string HandsClapping public const string HandsClapping = \"hands-clapping\" Field Value string HandsHelping public const string HandsHelping = \"hands-helping\" Field Value string HandsHolding public const string HandsHolding = \"hands-holding\" Field Value string HandsHoldingChild public const string HandsHoldingChild = \"hands-holding-child\" Field Value string HandsHoldingCircle public const string HandsHoldingCircle = \"hands-holding-circle\" Field Value string HandsPraying public const string HandsPraying = \"hands-praying\" Field Value string HandsWash public const string HandsWash = \"hands-wash\" Field Value string Handshake public const string Handshake = \"handshake\" Field Value string HandshakeAlt public const string HandshakeAlt = \"handshake-alt\" Field Value string HandshakeAltSlash public const string HandshakeAltSlash = \"handshake-alt-slash\" Field Value string HandshakeAngle public const string HandshakeAngle = \"handshake-angle\" Field Value string HandshakeSimple public const string HandshakeSimple = \"handshake-simple\" Field Value string HandshakeSimpleSlash public const string HandshakeSimpleSlash = \"handshake-simple-slash\" Field Value string HandshakeSlash public const string HandshakeSlash = \"handshake-slash\" Field Value string Hanukiah public const string Hanukiah = \"hanukiah\" Field Value string HardDrive public const string HardDrive = \"hard-drive\" Field Value string HardHat public const string HardHat = \"hard-hat\" Field Value string HardOfHearing public const string HardOfHearing = \"hard-of-hearing\" Field Value string Hashnode public const string Hashnode = \"hashnode\" Field Value string Hashtag public const string Hashtag = \"hashtag\" Field Value string HatCowboy public const string HatCowboy = \"hat-cowboy\" Field Value string HatCowboySide public const string HatCowboySide = \"hat-cowboy-side\" Field Value string HatHard public const string HatHard = \"hat-hard\" Field Value string HatWizard public const string HatWizard = \"hat-wizard\" Field Value string Haykal public const string Haykal = \"haykal\" Field Value string Hdd public const string Hdd = \"hdd\" Field Value string HeadSideCough public const string HeadSideCough = \"head-side-cough\" Field Value string HeadSideCoughSlash public const string HeadSideCoughSlash = \"head-side-cough-slash\" Field Value string HeadSideMask public const string HeadSideMask = \"head-side-mask\" Field Value string HeadSideVirus public const string HeadSideVirus = \"head-side-virus\" Field Value string Header public const string Header = \"header\" Field Value string Heading public const string Heading = \"heading\" Field Value string Headphones public const string Headphones = \"headphones\" Field Value string HeadphonesAlt public const string HeadphonesAlt = \"headphones-alt\" Field Value string HeadphonesSimple public const string HeadphonesSimple = \"headphones-simple\" Field Value string Headset public const string Headset = \"headset\" Field Value string Heart public const string Heart = \"heart\" Field Value string HeartBroken public const string HeartBroken = \"heart-broken\" Field Value string HeartCircleBolt public const string HeartCircleBolt = \"heart-circle-bolt\" Field Value string HeartCircleCheck public const string HeartCircleCheck = \"heart-circle-check\" Field Value string HeartCircleExclamation public const string HeartCircleExclamation = \"heart-circle-exclamation\" Field Value string HeartCircleMinus public const string HeartCircleMinus = \"heart-circle-minus\" Field Value string HeartCirclePlus public const string HeartCirclePlus = \"heart-circle-plus\" Field Value string HeartCircleXmark public const string HeartCircleXmark = \"heart-circle-xmark\" Field Value string HeartCrack public const string HeartCrack = \"heart-crack\" Field Value string HeartMusicCameraBolt public const string HeartMusicCameraBolt = \"heart-music-camera-bolt\" Field Value string HeartPulse public const string HeartPulse = \"heart-pulse\" Field Value string Heartbeat public const string Heartbeat = \"heartbeat\" Field Value string Helicopter public const string Helicopter = \"helicopter\" Field Value string HelicopterSymbol public const string HelicopterSymbol = \"helicopter-symbol\" Field Value string HelmetSafety public const string HelmetSafety = \"helmet-safety\" Field Value string HelmetUn public const string HelmetUn = \"helmet-un\" Field Value string HexagonNodes public const string HexagonNodes = \"hexagon-nodes\" Field Value string HexagonNodesBolt public const string HexagonNodesBolt = \"hexagon-nodes-bolt\" Field Value string Highlighter public const string Highlighter = \"highlighter\" Field Value string Hiking public const string Hiking = \"hiking\" Field Value string HillAvalanche public const string HillAvalanche = \"hill-avalanche\" Field Value string HillRockslide public const string HillRockslide = \"hill-rockslide\" Field Value string Hippo public const string Hippo = \"hippo\" Field Value string Hips public const string Hips = \"hips\" Field Value string HireAHelper public const string HireAHelper = \"hire-a-helper\" Field Value string History public const string History = \"history\" Field Value string Hive public const string Hive = \"hive\" Field Value string HockeyPuck public const string HockeyPuck = \"hockey-puck\" Field Value string HollyBerry public const string HollyBerry = \"holly-berry\" Field Value string Home public const string Home = \"home\" Field Value string HomeAlt public const string HomeAlt = \"home-alt\" Field Value string HomeLg public const string HomeLg = \"home-lg\" Field Value string HomeLgAlt public const string HomeLgAlt = \"home-lg-alt\" Field Value string HomeUser public const string HomeUser = \"home-user\" Field Value string Hooli public const string Hooli = \"hooli\" Field Value string Hornbill public const string Hornbill = \"hornbill\" Field Value string Horse public const string Horse = \"horse\" Field Value string HorseHead public const string HorseHead = \"horse-head\" Field Value string Hospital public const string Hospital = \"hospital\" Field Value string HospitalAlt public const string HospitalAlt = \"hospital-alt\" Field Value string HospitalSymbol public const string HospitalSymbol = \"hospital-symbol\" Field Value string HospitalUser public const string HospitalUser = \"hospital-user\" Field Value string HospitalWide public const string HospitalWide = \"hospital-wide\" Field Value string HotTub public const string HotTub = \"hot-tub\" Field Value string HotTubPerson public const string HotTubPerson = \"hot-tub-person\" Field Value string Hotdog public const string Hotdog = \"hotdog\" Field Value string Hotel public const string Hotel = \"hotel\" Field Value string Hotjar public const string Hotjar = \"hotjar\" Field Value string Hourglass public const string Hourglass = \"hourglass\" Field Value string Hourglass1 public const string Hourglass1 = \"hourglass-1\" Field Value string Hourglass2 public const string Hourglass2 = \"hourglass-2\" Field Value string Hourglass3 public const string Hourglass3 = \"hourglass-3\" Field Value string HourglassEmpty public const string HourglassEmpty = \"hourglass-empty\" Field Value string HourglassEnd public const string HourglassEnd = \"hourglass-end\" Field Value string HourglassHalf public const string HourglassHalf = \"hourglass-half\" Field Value string HourglassStart public const string HourglassStart = \"hourglass-start\" Field Value string House public const string House = \"house\" Field Value string HouseChimney public const string HouseChimney = \"house-chimney\" Field Value string HouseChimneyCrack public const string HouseChimneyCrack = \"house-chimney-crack\" Field Value string HouseChimneyMedical public const string HouseChimneyMedical = \"house-chimney-medical\" Field Value string HouseChimneyUser public const string HouseChimneyUser = \"house-chimney-user\" Field Value string HouseChimneyWindow public const string HouseChimneyWindow = \"house-chimney-window\" Field Value string HouseCircleCheck public const string HouseCircleCheck = \"house-circle-check\" Field Value string HouseCircleExclamation public const string HouseCircleExclamation = \"house-circle-exclamation\" Field Value string HouseCircleXmark public const string HouseCircleXmark = \"house-circle-xmark\" Field Value string HouseCrack public const string HouseCrack = \"house-crack\" Field Value string HouseDamage public const string HouseDamage = \"house-damage\" Field Value string HouseFire public const string HouseFire = \"house-fire\" Field Value string HouseFlag public const string HouseFlag = \"house-flag\" Field Value string HouseFloodWater public const string HouseFloodWater = \"house-flood-water\" Field Value string HouseFloodWaterCircleArrowRight public const string HouseFloodWaterCircleArrowRight = \"house-flood-water-circle-arrow-right\" Field Value string HouseLaptop public const string HouseLaptop = \"house-laptop\" Field Value string HouseLock public const string HouseLock = \"house-lock\" Field Value string HouseMedical public const string HouseMedical = \"house-medical\" Field Value string HouseMedicalCircleCheck public const string HouseMedicalCircleCheck = \"house-medical-circle-check\" Field Value string HouseMedicalCircleExclamation public const string HouseMedicalCircleExclamation = \"house-medical-circle-exclamation\" Field Value string HouseMedicalCircleXmark public const string HouseMedicalCircleXmark = \"house-medical-circle-xmark\" Field Value string HouseMedicalFlag public const string HouseMedicalFlag = \"house-medical-flag\" Field Value string HouseSignal public const string HouseSignal = \"house-signal\" Field Value string HouseTsunami public const string HouseTsunami = \"house-tsunami\" Field Value string HouseUser public const string HouseUser = \"house-user\" Field Value string Houzz public const string Houzz = \"houzz\" Field Value string Hryvnia public const string Hryvnia = \"hryvnia\" Field Value string HryvniaSign public const string HryvniaSign = \"hryvnia-sign\" Field Value string Html5 public const string Html5 = \"html5\" Field Value string Hubspot public const string Hubspot = \"hubspot\" Field Value string Hurricane public const string Hurricane = \"hurricane\" Field Value string I public const string I = \"i\" Field Value string I_Cursor public const string I_Cursor = \"i-cursor\" Field Value string IceCream public const string IceCream = \"ice-cream\" Field Value string Icicles public const string Icicles = \"icicles\" Field Value string Icons public const string Icons = \"icons\" Field Value string IdBadge public const string IdBadge = \"id-badge\" Field Value string IdCard public const string IdCard = \"id-card\" Field Value string IdCardAlt public const string IdCardAlt = \"id-card-alt\" Field Value string IdCardClip public const string IdCardClip = \"id-card-clip\" Field Value string Ideal public const string Ideal = \"ideal\" Field Value string Igloo public const string Igloo = \"igloo\" Field Value string Ils public const string Ils = \"ils\" Field Value string Image public const string Image = \"image\" Field Value string ImagePortrait public const string ImagePortrait = \"image-portrait\" Field Value string Images public const string Images = \"images\" Field Value string Imdb public const string Imdb = \"imdb\" Field Value string Inbox public const string Inbox = \"inbox\" Field Value string Indent public const string Indent = \"indent\" Field Value string IndianRupee public const string IndianRupee = \"indian-rupee\" Field Value string IndianRupeeSign public const string IndianRupeeSign = \"indian-rupee-sign\" Field Value string Industry public const string Industry = \"industry\" Field Value string Infinity public const string Infinity = \"infinity\" Field Value string Info public const string Info = \"info\" Field Value string InfoCircle public const string InfoCircle = \"info-circle\" Field Value string Innosoft public const string Innosoft = \"innosoft\" Field Value string Inr public const string Inr = \"inr\" Field Value string Instagram public const string Instagram = \"instagram\" Field Value string InstagramSquare public const string InstagramSquare = \"instagram-square\" Field Value string Instalod public const string Instalod = \"instalod\" Field Value string Institution public const string Institution = \"institution\" Field Value string Intercom public const string Intercom = \"intercom\" Field Value string InternetExplorer public const string InternetExplorer = \"internet-explorer\" Field Value string Invision public const string Invision = \"invision\" Field Value string Ioxhost public const string Ioxhost = \"ioxhost\" Field Value string Italic public const string Italic = \"italic\" Field Value string ItchIo public const string ItchIo = \"itch-io\" Field Value string Itunes public const string Itunes = \"itunes\" Field Value string ItunesNote public const string ItunesNote = \"itunes-note\" Field Value string J public const string J = \"j\" Field Value string Jar public const string Jar = \"jar\" Field Value string JarWheat public const string JarWheat = \"jar-wheat\" Field Value string Java public const string Java = \"java\" Field Value string Jedi public const string Jedi = \"jedi\" Field Value string JediOrder public const string JediOrder = \"jedi-order\" Field Value string Jenkins public const string Jenkins = \"jenkins\" Field Value string JetFighter public const string JetFighter = \"jet-fighter\" Field Value string JetFighterUp public const string JetFighterUp = \"jet-fighter-up\" Field Value string Jira public const string Jira = \"jira\" Field Value string Joget public const string Joget = \"joget\" Field Value string Joint public const string Joint = \"joint\" Field Value string Joomla public const string Joomla = \"joomla\" Field Value string JournalWhills public const string JournalWhills = \"journal-whills\" Field Value string Jpy public const string Jpy = \"jpy\" Field Value string Js public const string Js = \"js\" Field Value string JsSquare public const string JsSquare = \"js-square\" Field Value string Jsfiddle public const string Jsfiddle = \"jsfiddle\" Field Value string JugDetergent public const string JugDetergent = \"jug-detergent\" Field Value string Jxl public const string Jxl = \"jxl\" Field Value string K public const string K = \"k\" Field Value string Kaaba public const string Kaaba = \"kaaba\" Field Value string Kaggle public const string Kaggle = \"kaggle\" Field Value string Key public const string Key = \"key\" Field Value string Keybase public const string Keybase = \"keybase\" Field Value string Keyboard public const string Keyboard = \"keyboard\" Field Value string Keycdn public const string Keycdn = \"keycdn\" Field Value string Khanda public const string Khanda = \"khanda\" Field Value string Kickstarter public const string Kickstarter = \"kickstarter\" Field Value string KickstarterK public const string KickstarterK = \"kickstarter-k\" Field Value string KipSign public const string KipSign = \"kip-sign\" Field Value string Kiss public const string Kiss = \"kiss\" Field Value string KissBeam public const string KissBeam = \"kiss-beam\" Field Value string KissWinkHeart public const string KissWinkHeart = \"kiss-wink-heart\" Field Value string KitMedical public const string KitMedical = \"kit-medical\" Field Value string KitchenSet public const string KitchenSet = \"kitchen-set\" Field Value string KiwiBird public const string KiwiBird = \"kiwi-bird\" Field Value string Korvue public const string Korvue = \"korvue\" Field Value string Krw public const string Krw = \"krw\" Field Value string L public const string L = \"l\" Field Value string LadderWater public const string LadderWater = \"ladder-water\" Field Value string LandMineOn public const string LandMineOn = \"land-mine-on\" Field Value string Landmark public const string Landmark = \"landmark\" Field Value string LandmarkAlt public const string LandmarkAlt = \"landmark-alt\" Field Value string LandmarkDome public const string LandmarkDome = \"landmark-dome\" Field Value string LandmarkFlag public const string LandmarkFlag = \"landmark-flag\" Field Value string Language public const string Language = \"language\" Field Value string Laptop public const string Laptop = \"laptop\" Field Value string LaptopCode public const string LaptopCode = \"laptop-code\" Field Value string LaptopFile public const string LaptopFile = \"laptop-file\" Field Value string LaptopHouse public const string LaptopHouse = \"laptop-house\" Field Value string LaptopMedical public const string LaptopMedical = \"laptop-medical\" Field Value string Laravel public const string Laravel = \"laravel\" Field Value string LariSign public const string LariSign = \"lari-sign\" Field Value string Lastfm public const string Lastfm = \"lastfm\" Field Value string LastfmSquare public const string LastfmSquare = \"lastfm-square\" Field Value string Laugh public const string Laugh = \"laugh\" Field Value string LaughBeam public const string LaughBeam = \"laugh-beam\" Field Value string LaughSquint public const string LaughSquint = \"laugh-squint\" Field Value string LaughWink public const string LaughWink = \"laugh-wink\" Field Value string LayerGroup public const string LayerGroup = \"layer-group\" Field Value string Leaf public const string Leaf = \"leaf\" Field Value string Leanpub public const string Leanpub = \"leanpub\" Field Value string LeftLong public const string LeftLong = \"left-long\" Field Value string LeftRight public const string LeftRight = \"left-right\" Field Value string Legal public const string Legal = \"legal\" Field Value string Lemon public const string Lemon = \"lemon\" Field Value string Less public const string Less = \"less\" Field Value string LessThan public const string LessThan = \"less-than\" Field Value string LessThanEqual public const string LessThanEqual = \"less-than-equal\" Field Value string Letterboxd public const string Letterboxd = \"letterboxd\" Field Value string LevelDown public const string LevelDown = \"level-down\" Field Value string LevelDownAlt public const string LevelDownAlt = \"level-down-alt\" Field Value string LevelUp public const string LevelUp = \"level-up\" Field Value string LevelUpAlt public const string LevelUpAlt = \"level-up-alt\" Field Value string LifeRing public const string LifeRing = \"life-ring\" Field Value string Lightbulb public const string Lightbulb = \"lightbulb\" Field Value string Line public const string Line = \"line\" Field Value string LineChart public const string LineChart = \"line-chart\" Field Value string LinesLeaning public const string LinesLeaning = \"lines-leaning\" Field Value string Link public const string Link = \"link\" Field Value string LinkSlash public const string LinkSlash = \"link-slash\" Field Value string Linkedin public const string Linkedin = \"linkedin\" Field Value string LinkedinIn public const string LinkedinIn = \"linkedin-in\" Field Value string Linode public const string Linode = \"linode\" Field Value string Linux public const string Linux = \"linux\" Field Value string LiraSign public const string LiraSign = \"lira-sign\" Field Value string List public const string List = \"list\" Field Value string List1_2 public const string List1_2 = \"list-1-2\" Field Value string ListAlt public const string ListAlt = \"list-alt\" Field Value string ListCheck public const string ListCheck = \"list-check\" Field Value string ListDots public const string ListDots = \"list-dots\" Field Value string ListNumeric public const string ListNumeric = \"list-numeric\" Field Value string ListOl public const string ListOl = \"list-ol\" Field Value string ListSquares public const string ListSquares = \"list-squares\" Field Value string ListUl public const string ListUl = \"list-ul\" Field Value string LitecoinSign public const string LitecoinSign = \"litecoin-sign\" Field Value string Location public const string Location = \"location\" Field Value string LocationArrow public const string LocationArrow = \"location-arrow\" Field Value string LocationCrosshairs public const string LocationCrosshairs = \"location-crosshairs\" Field Value string LocationDot public const string LocationDot = \"location-dot\" Field Value string LocationPin public const string LocationPin = \"location-pin\" Field Value string LocationPinLock public const string LocationPinLock = \"location-pin-lock\" Field Value string Lock public const string Lock = \"lock\" Field Value string LockOpen public const string LockOpen = \"lock-open\" Field Value string Locust public const string Locust = \"locust\" Field Value string LongArrowAltDown public const string LongArrowAltDown = \"long-arrow-alt-down\" Field Value string LongArrowAltLeft public const string LongArrowAltLeft = \"long-arrow-alt-left\" Field Value string LongArrowAltRight public const string LongArrowAltRight = \"long-arrow-alt-right\" Field Value string LongArrowAltUp public const string LongArrowAltUp = \"long-arrow-alt-up\" Field Value string LongArrowDown public const string LongArrowDown = \"long-arrow-down\" Field Value string LongArrowLeft public const string LongArrowLeft = \"long-arrow-left\" Field Value string LongArrowRight public const string LongArrowRight = \"long-arrow-right\" Field Value string LongArrowUp public const string LongArrowUp = \"long-arrow-up\" Field Value string LowVision public const string LowVision = \"low-vision\" Field Value string LuggageCart public const string LuggageCart = \"luggage-cart\" Field Value string Lungs public const string Lungs = \"lungs\" Field Value string LungsVirus public const string LungsVirus = \"lungs-virus\" Field Value string Lyft public const string Lyft = \"lyft\" Field Value string M public const string M = \"m\" Field Value string Magento public const string Magento = \"magento\" Field Value string Magic public const string Magic = \"magic\" Field Value string MagicWandSparkles public const string MagicWandSparkles = \"magic-wand-sparkles\" Field Value string Magnet public const string Magnet = \"magnet\" Field Value string MagnifyingGlass public const string MagnifyingGlass = \"magnifying-glass\" Field Value string MagnifyingGlassArrowRight public const string MagnifyingGlassArrowRight = \"magnifying-glass-arrow-right\" Field Value string MagnifyingGlassChart public const string MagnifyingGlassChart = \"magnifying-glass-chart\" Field Value string MagnifyingGlassDollar public const string MagnifyingGlassDollar = \"magnifying-glass-dollar\" Field Value string MagnifyingGlassLocation public const string MagnifyingGlassLocation = \"magnifying-glass-location\" Field Value string MagnifyingGlassMinus public const string MagnifyingGlassMinus = \"magnifying-glass-minus\" Field Value string MagnifyingGlassPlus public const string MagnifyingGlassPlus = \"magnifying-glass-plus\" Field Value string MailBulk public const string MailBulk = \"mail-bulk\" Field Value string MailForward public const string MailForward = \"mail-forward\" Field Value string MailReply public const string MailReply = \"mail-reply\" Field Value string MailReplyAll public const string MailReplyAll = \"mail-reply-all\" Field Value string Mailchimp public const string Mailchimp = \"mailchimp\" Field Value string Male public const string Male = \"male\" Field Value string ManatSign public const string ManatSign = \"manat-sign\" Field Value string Mandalorian public const string Mandalorian = \"mandalorian\" Field Value string Map public const string Map = \"map\" Field Value string MapLocation public const string MapLocation = \"map-location\" Field Value string MapLocationDot public const string MapLocationDot = \"map-location-dot\" Field Value string MapMarked public const string MapMarked = \"map-marked\" Field Value string MapMarkedAlt public const string MapMarkedAlt = \"map-marked-alt\" Field Value string MapMarker public const string MapMarker = \"map-marker\" Field Value string MapMarkerAlt public const string MapMarkerAlt = \"map-marker-alt\" Field Value string MapPin public const string MapPin = \"map-pin\" Field Value string MapSigns public const string MapSigns = \"map-signs\" Field Value string Markdown public const string Markdown = \"markdown\" Field Value string Marker public const string Marker = \"marker\" Field Value string Mars public const string Mars = \"mars\" Field Value string MarsAndVenus public const string MarsAndVenus = \"mars-and-venus\" Field Value string MarsAndVenusBurst public const string MarsAndVenusBurst = \"mars-and-venus-burst\" Field Value string MarsDouble public const string MarsDouble = \"mars-double\" Field Value string MarsStroke public const string MarsStroke = \"mars-stroke\" Field Value string MarsStrokeH public const string MarsStrokeH = \"mars-stroke-h\" Field Value string MarsStrokeRight public const string MarsStrokeRight = \"mars-stroke-right\" Field Value string MarsStrokeUp public const string MarsStrokeUp = \"mars-stroke-up\" Field Value string MarsStrokeV public const string MarsStrokeV = \"mars-stroke-v\" Field Value string MartiniGlass public const string MartiniGlass = \"martini-glass\" Field Value string MartiniGlassCitrus public const string MartiniGlassCitrus = \"martini-glass-citrus\" Field Value string MartiniGlassEmpty public const string MartiniGlassEmpty = \"martini-glass-empty\" Field Value string Mask public const string Mask = \"mask\" Field Value string MaskFace public const string MaskFace = \"mask-face\" Field Value string MaskVentilator public const string MaskVentilator = \"mask-ventilator\" Field Value string MasksTheater public const string MasksTheater = \"masks-theater\" Field Value string Mastodon public const string Mastodon = \"mastodon\" Field Value string MattressPillow public const string MattressPillow = \"mattress-pillow\" Field Value string Maxcdn public const string Maxcdn = \"maxcdn\" Field Value string Maximize public const string Maximize = \"maximize\" Field Value string Mdb public const string Mdb = \"mdb\" Field Value string Medal public const string Medal = \"medal\" Field Value string Medapps public const string Medapps = \"medapps\" Field Value string Medium public const string Medium = \"medium\" Field Value string MediumM public const string MediumM = \"medium-m\" Field Value string Medkit public const string Medkit = \"medkit\" Field Value string Medrt public const string Medrt = \"medrt\" Field Value string Meetup public const string Meetup = \"meetup\" Field Value string Megaport public const string Megaport = \"megaport\" Field Value string Meh public const string Meh = \"meh\" Field Value string MehBlank public const string MehBlank = \"meh-blank\" Field Value string MehRollingEyes public const string MehRollingEyes = \"meh-rolling-eyes\" Field Value string Memory public const string Memory = \"memory\" Field Value string Mendeley public const string Mendeley = \"mendeley\" Field Value string Menorah public const string Menorah = \"menorah\" Field Value string Mercury public const string Mercury = \"mercury\" Field Value string Message public const string Message = \"message\" Field Value string Meta public const string Meta = \"meta\" Field Value string Meteor public const string Meteor = \"meteor\" Field Value string Microblog public const string Microblog = \"microblog\" Field Value string Microchip public const string Microchip = \"microchip\" Field Value string Microphone public const string Microphone = \"microphone\" Field Value string MicrophoneAlt public const string MicrophoneAlt = \"microphone-alt\" Field Value string MicrophoneAltSlash public const string MicrophoneAltSlash = \"microphone-alt-slash\" Field Value string MicrophoneLines public const string MicrophoneLines = \"microphone-lines\" Field Value string MicrophoneLinesSlash public const string MicrophoneLinesSlash = \"microphone-lines-slash\" Field Value string MicrophoneSlash public const string MicrophoneSlash = \"microphone-slash\" Field Value string Microscope public const string Microscope = \"microscope\" Field Value string Microsoft public const string Microsoft = \"microsoft\" Field Value string MillSign public const string MillSign = \"mill-sign\" Field Value string Minimize public const string Minimize = \"minimize\" Field Value string Mintbit public const string Mintbit = \"mintbit\" Field Value string Minus public const string Minus = \"minus\" Field Value string MinusCircle public const string MinusCircle = \"minus-circle\" Field Value string MinusSquare public const string MinusSquare = \"minus-square\" Field Value string Mitten public const string Mitten = \"mitten\" Field Value string Mix public const string Mix = \"mix\" Field Value string Mixcloud public const string Mixcloud = \"mixcloud\" Field Value string Mixer public const string Mixer = \"mixer\" Field Value string Mizuni public const string Mizuni = \"mizuni\" Field Value string Mobile public const string Mobile = \"mobile\" Field Value string MobileAlt public const string MobileAlt = \"mobile-alt\" Field Value string MobileAndroid public const string MobileAndroid = \"mobile-android\" Field Value string MobileAndroidAlt public const string MobileAndroidAlt = \"mobile-android-alt\" Field Value string MobileButton public const string MobileButton = \"mobile-button\" Field Value string MobilePhone public const string MobilePhone = \"mobile-phone\" Field Value string MobileRetro public const string MobileRetro = \"mobile-retro\" Field Value string MobileScreen public const string MobileScreen = \"mobile-screen\" Field Value string MobileScreenButton public const string MobileScreenButton = \"mobile-screen-button\" Field Value string Modx public const string Modx = \"modx\" Field Value string Monero brands.css public const string Monero = \"monero\" Field Value string MoneyBill public const string MoneyBill = \"money-bill\" Field Value string MoneyBill1 public const string MoneyBill1 = \"money-bill-1\" Field Value string MoneyBill1_Wave public const string MoneyBill1_Wave = \"money-bill-1-wave\" Field Value string MoneyBillAlt public const string MoneyBillAlt = \"money-bill-alt\" Field Value string MoneyBillTransfer public const string MoneyBillTransfer = \"money-bill-transfer\" Field Value string MoneyBillTrendUp public const string MoneyBillTrendUp = \"money-bill-trend-up\" Field Value string MoneyBillWave public const string MoneyBillWave = \"money-bill-wave\" Field Value string MoneyBillWaveAlt public const string MoneyBillWaveAlt = \"money-bill-wave-alt\" Field Value string MoneyBillWheat public const string MoneyBillWheat = \"money-bill-wheat\" Field Value string MoneyBills public const string MoneyBills = \"money-bills\" Field Value string MoneyCheck public const string MoneyCheck = \"money-check\" Field Value string MoneyCheckAlt public const string MoneyCheckAlt = \"money-check-alt\" Field Value string MoneyCheckDollar public const string MoneyCheckDollar = \"money-check-dollar\" Field Value string Monument public const string Monument = \"monument\" Field Value string Moon public const string Moon = \"moon\" Field Value string MortarBoard public const string MortarBoard = \"mortar-board\" Field Value string MortarPestle public const string MortarPestle = \"mortar-pestle\" Field Value string Mosque public const string Mosque = \"mosque\" Field Value string Mosquito public const string Mosquito = \"mosquito\" Field Value string MosquitoNet public const string MosquitoNet = \"mosquito-net\" Field Value string Motorcycle public const string Motorcycle = \"motorcycle\" Field Value string Mound public const string Mound = \"mound\" Field Value string Mountain public const string Mountain = \"mountain\" Field Value string MountainCity public const string MountainCity = \"mountain-city\" Field Value string MountainSun public const string MountainSun = \"mountain-sun\" Field Value string Mouse public const string Mouse = \"mouse\" Field Value string MousePointer public const string MousePointer = \"mouse-pointer\" Field Value string MugHot public const string MugHot = \"mug-hot\" Field Value string MugSaucer public const string MugSaucer = \"mug-saucer\" Field Value string Multiply public const string Multiply = \"multiply\" Field Value string Museum public const string Museum = \"museum\" Field Value string Music public const string Music = \"music\" Field Value string N public const string N = \"n\" Field Value string NairaSign public const string NairaSign = \"naira-sign\" Field Value string Napster public const string Napster = \"napster\" Field Value string Navicon public const string Navicon = \"navicon\" Field Value string Neos public const string Neos = \"neos\" Field Value string NetworkWired public const string NetworkWired = \"network-wired\" Field Value string Neuter public const string Neuter = \"neuter\" Field Value string Newspaper public const string Newspaper = \"newspaper\" Field Value string NfcDirectional public const string NfcDirectional = \"nfc-directional\" Field Value string NfcSymbol public const string NfcSymbol = \"nfc-symbol\" Field Value string Nimblr public const string Nimblr = \"nimblr\" Field Value string Node public const string Node = \"node\" Field Value string NodeJs public const string NodeJs = \"node-js\" Field Value string NotEqual public const string NotEqual = \"not-equal\" Field Value string Notdef public const string Notdef = \"notdef\" Field Value string NoteSticky public const string NoteSticky = \"note-sticky\" Field Value string NotesMedical public const string NotesMedical = \"notes-medical\" Field Value string Npm public const string Npm = \"npm\" Field Value string Ns8 public const string Ns8 = \"ns8\" Field Value string Nutritionix public const string Nutritionix = \"nutritionix\" Field Value string O public const string O = \"o\" Field Value string ObjectGroup public const string ObjectGroup = \"object-group\" Field Value string ObjectUngroup public const string ObjectUngroup = \"object-ungroup\" Field Value string OctopusDeploy public const string OctopusDeploy = \"octopus-deploy\" Field Value string Odnoklassniki public const string Odnoklassniki = \"odnoklassniki\" Field Value string OdnoklassnikiSquare public const string OdnoklassnikiSquare = \"odnoklassniki-square\" Field Value string Odysee public const string Odysee = \"odysee\" Field Value string OilCan public const string OilCan = \"oil-can\" Field Value string OilWell public const string OilWell = \"oil-well\" Field Value string OldRepublic public const string OldRepublic = \"old-republic\" Field Value string Om public const string Om = \"om\" Field Value string Opencart public const string Opencart = \"opencart\" Field Value string Openid public const string Openid = \"openid\" Field Value string Opensuse public const string Opensuse = \"opensuse\" Field Value string Opera public const string Opera = \"opera\" Field Value string OptinMonster public const string OptinMonster = \"optin-monster\" Field Value string Orcid public const string Orcid = \"orcid\" Field Value string Osi public const string Osi = \"osi\" Field Value string Otter public const string Otter = \"otter\" Field Value string Outdent public const string Outdent = \"outdent\" Field Value string P public const string P = \"p\" Field Value string Padlet public const string Padlet = \"padlet\" Field Value string Page4 public const string Page4 = \"page4\" Field Value string Pagelines public const string Pagelines = \"pagelines\" Field Value string Pager public const string Pager = \"pager\" Field Value string PaintBrush public const string PaintBrush = \"paint-brush\" Field Value string PaintRoller public const string PaintRoller = \"paint-roller\" Field Value string Paintbrush public const string Paintbrush = \"paintbrush\" Field Value string Palette public const string Palette = \"palette\" Field Value string Palfed public const string Palfed = \"palfed\" Field Value string Pallet public const string Pallet = \"pallet\" Field Value string Panorama public const string Panorama = \"panorama\" Field Value string PaperPlane public const string PaperPlane = \"paper-plane\" Field Value string Paperclip public const string Paperclip = \"paperclip\" Field Value string ParachuteBox public const string ParachuteBox = \"parachute-box\" Field Value string Paragraph public const string Paragraph = \"paragraph\" Field Value string Parking public const string Parking = \"parking\" Field Value string Passport public const string Passport = \"passport\" Field Value string Pastafarianism public const string Pastafarianism = \"pastafarianism\" Field Value string Paste public const string Paste = \"paste\" Field Value string Patreon public const string Patreon = \"patreon\" Field Value string Pause public const string Pause = \"pause\" Field Value string PauseCircle public const string PauseCircle = \"pause-circle\" Field Value string Paw public const string Paw = \"paw\" Field Value string Paypal public const string Paypal = \"paypal\" Field Value string Peace public const string Peace = \"peace\" Field Value string Pen public const string Pen = \"pen\" Field Value string PenAlt public const string PenAlt = \"pen-alt\" Field Value string PenClip public const string PenClip = \"pen-clip\" Field Value string PenFancy public const string PenFancy = \"pen-fancy\" Field Value string PenNib public const string PenNib = \"pen-nib\" Field Value string PenRuler public const string PenRuler = \"pen-ruler\" Field Value string PenSquare public const string PenSquare = \"pen-square\" Field Value string PenToSquare public const string PenToSquare = \"pen-to-square\" Field Value string Pencil public const string Pencil = \"pencil\" Field Value string PencilAlt public const string PencilAlt = \"pencil-alt\" Field Value string PencilRuler public const string PencilRuler = \"pencil-ruler\" Field Value string PencilSquare public const string PencilSquare = \"pencil-square\" Field Value string PeopleArrows public const string PeopleArrows = \"people-arrows\" Field Value string PeopleArrowsLeftRight public const string PeopleArrowsLeftRight = \"people-arrows-left-right\" Field Value string PeopleCarry public const string PeopleCarry = \"people-carry\" Field Value string PeopleCarryBox public const string PeopleCarryBox = \"people-carry-box\" Field Value string PeopleGroup public const string PeopleGroup = \"people-group\" Field Value string PeopleLine public const string PeopleLine = \"people-line\" Field Value string PeoplePulling public const string PeoplePulling = \"people-pulling\" Field Value string PeopleRobbery public const string PeopleRobbery = \"people-robbery\" Field Value string PeopleRoof public const string PeopleRoof = \"people-roof\" Field Value string PepperHot public const string PepperHot = \"pepper-hot\" Field Value string Perbyte public const string Perbyte = \"perbyte\" Field Value string Percent public const string Percent = \"percent\" Field Value string Percentage public const string Percentage = \"percentage\" Field Value string Periscope public const string Periscope = \"periscope\" Field Value string Person public const string Person = \"person\" Field Value string PersonArrowDownToLine public const string PersonArrowDownToLine = \"person-arrow-down-to-line\" Field Value string PersonArrowUpFromLine public const string PersonArrowUpFromLine = \"person-arrow-up-from-line\" Field Value string PersonBiking public const string PersonBiking = \"person-biking\" Field Value string PersonBooth public const string PersonBooth = \"person-booth\" Field Value string PersonBreastfeeding public const string PersonBreastfeeding = \"person-breastfeeding\" Field Value string PersonBurst public const string PersonBurst = \"person-burst\" Field Value string PersonCane public const string PersonCane = \"person-cane\" Field Value string PersonChalkboard public const string PersonChalkboard = \"person-chalkboard\" Field Value string PersonCircleCheck public const string PersonCircleCheck = \"person-circle-check\" Field Value string PersonCircleExclamation public const string PersonCircleExclamation = \"person-circle-exclamation\" Field Value string PersonCircleMinus public const string PersonCircleMinus = \"person-circle-minus\" Field Value string PersonCirclePlus public const string PersonCirclePlus = \"person-circle-plus\" Field Value string PersonCircleQuestion public const string PersonCircleQuestion = \"person-circle-question\" Field Value string PersonCircleXmark public const string PersonCircleXmark = \"person-circle-xmark\" Field Value string PersonDigging public const string PersonDigging = \"person-digging\" Field Value string PersonDotsFromLine public const string PersonDotsFromLine = \"person-dots-from-line\" Field Value string PersonDress public const string PersonDress = \"person-dress\" Field Value string PersonDressBurst public const string PersonDressBurst = \"person-dress-burst\" Field Value string PersonDrowning public const string PersonDrowning = \"person-drowning\" Field Value string PersonFalling public const string PersonFalling = \"person-falling\" Field Value string PersonFallingBurst public const string PersonFallingBurst = \"person-falling-burst\" Field Value string PersonHalfDress public const string PersonHalfDress = \"person-half-dress\" Field Value string PersonHarassing public const string PersonHarassing = \"person-harassing\" Field Value string PersonHiking public const string PersonHiking = \"person-hiking\" Field Value string PersonMilitaryPointing public const string PersonMilitaryPointing = \"person-military-pointing\" Field Value string PersonMilitaryRifle public const string PersonMilitaryRifle = \"person-military-rifle\" Field Value string PersonMilitaryToPerson public const string PersonMilitaryToPerson = \"person-military-to-person\" Field Value string PersonPraying public const string PersonPraying = \"person-praying\" Field Value string PersonPregnant public const string PersonPregnant = \"person-pregnant\" Field Value string PersonRays public const string PersonRays = \"person-rays\" Field Value string PersonRifle public const string PersonRifle = \"person-rifle\" Field Value string PersonRunning public const string PersonRunning = \"person-running\" Field Value string PersonShelter public const string PersonShelter = \"person-shelter\" Field Value string PersonSkating public const string PersonSkating = \"person-skating\" Field Value string PersonSkiing public const string PersonSkiing = \"person-skiing\" Field Value string PersonSkiingNordic public const string PersonSkiingNordic = \"person-skiing-nordic\" Field Value string PersonSnowboarding public const string PersonSnowboarding = \"person-snowboarding\" Field Value string PersonSwimming public const string PersonSwimming = \"person-swimming\" Field Value string PersonThroughWindow public const string PersonThroughWindow = \"person-through-window\" Field Value string PersonWalking public const string PersonWalking = \"person-walking\" Field Value string PersonWalkingArrowLoopLeft public const string PersonWalkingArrowLoopLeft = \"person-walking-arrow-loop-left\" Field Value string PersonWalkingArrowRight public const string PersonWalkingArrowRight = \"person-walking-arrow-right\" Field Value string PersonWalkingDashedLineArrowRight public const string PersonWalkingDashedLineArrowRight = \"person-walking-dashed-line-arrow-right\" Field Value string PersonWalkingLuggage public const string PersonWalkingLuggage = \"person-walking-luggage\" Field Value string PersonWalkingWithCane public const string PersonWalkingWithCane = \"person-walking-with-cane\" Field Value string PesetaSign public const string PesetaSign = \"peseta-sign\" Field Value string PesoSign public const string PesoSign = \"peso-sign\" Field Value string Phabricator public const string Phabricator = \"phabricator\" Field Value string PhoenixFramework public const string PhoenixFramework = \"phoenix-framework\" Field Value string PhoenixSquadron public const string PhoenixSquadron = \"phoenix-squadron\" Field Value string Phone public const string Phone = \"phone\" Field Value string PhoneAlt public const string PhoneAlt = \"phone-alt\" Field Value string PhoneFlip public const string PhoneFlip = \"phone-flip\" Field Value string PhoneSlash public const string PhoneSlash = \"phone-slash\" Field Value string PhoneSquare public const string PhoneSquare = \"phone-square\" Field Value string PhoneSquareAlt public const string PhoneSquareAlt = \"phone-square-alt\" Field Value string PhoneVolume public const string PhoneVolume = \"phone-volume\" Field Value string PhotoFilm public const string PhotoFilm = \"photo-film\" Field Value string PhotoVideo public const string PhotoVideo = \"photo-video\" Field Value string Php public const string Php = \"php\" Field Value string PieChart public const string PieChart = \"pie-chart\" Field Value string PiedPiper public const string PiedPiper = \"pied-piper\" Field Value string PiedPiperAlt public const string PiedPiperAlt = \"pied-piper-alt\" Field Value string PiedPiperHat public const string PiedPiperHat = \"pied-piper-hat\" Field Value string PiedPiperPp public const string PiedPiperPp = \"pied-piper-pp\" Field Value string PiedPiperSquare public const string PiedPiperSquare = \"pied-piper-square\" Field Value string PiggyBank public const string PiggyBank = \"piggy-bank\" Field Value string Pills public const string Pills = \"pills\" Field Value string PingPongPaddleBall public const string PingPongPaddleBall = \"ping-pong-paddle-ball\" Field Value string Pinterest public const string Pinterest = \"pinterest\" Field Value string PinterestP public const string PinterestP = \"pinterest-p\" Field Value string PinterestSquare public const string PinterestSquare = \"pinterest-square\" Field Value string Pix public const string Pix = \"pix\" Field Value string Pixiv public const string Pixiv = \"pixiv\" Field Value string PizzaSlice public const string PizzaSlice = \"pizza-slice\" Field Value string PlaceOfWorship public const string PlaceOfWorship = \"place-of-worship\" Field Value string Plane public const string Plane = \"plane\" Field Value string PlaneArrival public const string PlaneArrival = \"plane-arrival\" Field Value string PlaneCircleCheck public const string PlaneCircleCheck = \"plane-circle-check\" Field Value string PlaneCircleExclamation public const string PlaneCircleExclamation = \"plane-circle-exclamation\" Field Value string PlaneCircleXmark public const string PlaneCircleXmark = \"plane-circle-xmark\" Field Value string PlaneDeparture public const string PlaneDeparture = \"plane-departure\" Field Value string PlaneLock public const string PlaneLock = \"plane-lock\" Field Value string PlaneSlash public const string PlaneSlash = \"plane-slash\" Field Value string PlaneUp public const string PlaneUp = \"plane-up\" Field Value string PlantWilt public const string PlantWilt = \"plant-wilt\" Field Value string PlateWheat public const string PlateWheat = \"plate-wheat\" Field Value string Play public const string Play = \"play\" Field Value string PlayCircle public const string PlayCircle = \"play-circle\" Field Value string Playstation public const string Playstation = \"playstation\" Field Value string Plug public const string Plug = \"plug\" Field Value string PlugCircleBolt public const string PlugCircleBolt = \"plug-circle-bolt\" Field Value string PlugCircleCheck public const string PlugCircleCheck = \"plug-circle-check\" Field Value string PlugCircleExclamation public const string PlugCircleExclamation = \"plug-circle-exclamation\" Field Value string PlugCircleMinus public const string PlugCircleMinus = \"plug-circle-minus\" Field Value string PlugCirclePlus public const string PlugCirclePlus = \"plug-circle-plus\" Field Value string PlugCircleXmark public const string PlugCircleXmark = \"plug-circle-xmark\" Field Value string Plus public const string Plus = \"plus\" Field Value string PlusCircle public const string PlusCircle = \"plus-circle\" Field Value string PlusMinus public const string PlusMinus = \"plus-minus\" Field Value string PlusSquare public const string PlusSquare = \"plus-square\" Field Value string Podcast public const string Podcast = \"podcast\" Field Value string Poll public const string Poll = \"poll\" Field Value string PollH public const string PollH = \"poll-h\" Field Value string Poo public const string Poo = \"poo\" Field Value string PooBolt public const string PooBolt = \"poo-bolt\" Field Value string PooStorm public const string PooStorm = \"poo-storm\" Field Value string Poop public const string Poop = \"poop\" Field Value string Portrait public const string Portrait = \"portrait\" Field Value string PoundSign public const string PoundSign = \"pound-sign\" Field Value string PowerOff public const string PowerOff = \"power-off\" Field Value string Pray public const string Pray = \"pray\" Field Value string PrayingHands public const string PrayingHands = \"praying-hands\" Field Value string Prescription public const string Prescription = \"prescription\" Field Value string PrescriptionBottle public const string PrescriptionBottle = \"prescription-bottle\" Field Value string PrescriptionBottleAlt public const string PrescriptionBottleAlt = \"prescription-bottle-alt\" Field Value string PrescriptionBottleMedical public const string PrescriptionBottleMedical = \"prescription-bottle-medical\" Field Value string Print public const string Print = \"print\" Field Value string Procedures public const string Procedures = \"procedures\" Field Value string ProductHunt public const string ProductHunt = \"product-hunt\" Field Value string ProjectDiagram public const string ProjectDiagram = \"project-diagram\" Field Value string PumpMedical public const string PumpMedical = \"pump-medical\" Field Value string PumpSoap public const string PumpSoap = \"pump-soap\" Field Value string Pushed public const string Pushed = \"pushed\" Field Value string PuzzlePiece public const string PuzzlePiece = \"puzzle-piece\" Field Value string Python public const string Python = \"python\" Field Value string Q public const string Q = \"q\" Field Value string Qq public const string Qq = \"qq\" Field Value string Qrcode public const string Qrcode = \"qrcode\" Field Value string Question public const string Question = \"question\" Field Value string QuestionCircle public const string QuestionCircle = \"question-circle\" Field Value string Quidditch public const string Quidditch = \"quidditch\" Field Value string QuidditchBroomBall public const string QuidditchBroomBall = \"quidditch-broom-ball\" Field Value string Quinscape public const string Quinscape = \"quinscape\" Field Value string Quora public const string Quora = \"quora\" Field Value string QuoteLeft public const string QuoteLeft = \"quote-left\" Field Value string QuoteLeftAlt public const string QuoteLeftAlt = \"quote-left-alt\" Field Value string QuoteRight public const string QuoteRight = \"quote-right\" Field Value string QuoteRightAlt public const string QuoteRightAlt = \"quote-right-alt\" Field Value string Quran public const string Quran = \"quran\" Field Value string R public const string R = \"r\" Field Value string R_Project public const string R_Project = \"r-project\" Field Value string Radiation public const string Radiation = \"radiation\" Field Value string RadiationAlt public const string RadiationAlt = \"radiation-alt\" Field Value string Radio public const string Radio = \"radio\" Field Value string Rainbow public const string Rainbow = \"rainbow\" Field Value string Random public const string Random = \"random\" Field Value string RankingStar public const string RankingStar = \"ranking-star\" Field Value string RaspberryPi public const string RaspberryPi = \"raspberry-pi\" Field Value string Ravelry public const string Ravelry = \"ravelry\" Field Value string React public const string React = \"react\" Field Value string Reacteurope public const string Reacteurope = \"reacteurope\" Field Value string Readme public const string Readme = \"readme\" Field Value string Rebel public const string Rebel = \"rebel\" Field Value string Receipt public const string Receipt = \"receipt\" Field Value string RecordVinyl public const string RecordVinyl = \"record-vinyl\" Field Value string RectangleAd public const string RectangleAd = \"rectangle-ad\" Field Value string RectangleList public const string RectangleList = \"rectangle-list\" Field Value string RectangleTimes public const string RectangleTimes = \"rectangle-times\" Field Value string RectangleXmark public const string RectangleXmark = \"rectangle-xmark\" Field Value string Recycle public const string Recycle = \"recycle\" Field Value string RedRiver public const string RedRiver = \"red-river\" Field Value string Reddit public const string Reddit = \"reddit\" Field Value string RedditAlien public const string RedditAlien = \"reddit-alien\" Field Value string RedditSquare public const string RedditSquare = \"reddit-square\" Field Value string Redhat public const string Redhat = \"redhat\" Field Value string Redo public const string Redo = \"redo\" Field Value string RedoAlt public const string RedoAlt = \"redo-alt\" Field Value string Refresh public const string Refresh = \"refresh\" Field Value string Registered public const string Registered = \"registered\" Field Value string Remove public const string Remove = \"remove\" Field Value string RemoveFormat public const string RemoveFormat = \"remove-format\" Field Value string Rendact public const string Rendact = \"rendact\" Field Value string Renren public const string Renren = \"renren\" Field Value string Reorder public const string Reorder = \"reorder\" Field Value string Repeat public const string Repeat = \"repeat\" Field Value string Reply public const string Reply = \"reply\" Field Value string ReplyAll public const string ReplyAll = \"reply-all\" Field Value string Replyd public const string Replyd = \"replyd\" Field Value string Republican public const string Republican = \"republican\" Field Value string Researchgate public const string Researchgate = \"researchgate\" Field Value string Resolving public const string Resolving = \"resolving\" Field Value string Restroom public const string Restroom = \"restroom\" Field Value string Retweet public const string Retweet = \"retweet\" Field Value string Rev public const string Rev = \"rev\" Field Value string Ribbon public const string Ribbon = \"ribbon\" Field Value string RightFromBracket public const string RightFromBracket = \"right-from-bracket\" Field Value string RightLeft public const string RightLeft = \"right-left\" Field Value string RightLong public const string RightLong = \"right-long\" Field Value string RightToBracket public const string RightToBracket = \"right-to-bracket\" Field Value string Ring public const string Ring = \"ring\" Field Value string Rmb public const string Rmb = \"rmb\" Field Value string Road public const string Road = \"road\" Field Value string RoadBarrier public const string RoadBarrier = \"road-barrier\" Field Value string RoadBridge public const string RoadBridge = \"road-bridge\" Field Value string RoadCircleCheck public const string RoadCircleCheck = \"road-circle-check\" Field Value string RoadCircleExclamation public const string RoadCircleExclamation = \"road-circle-exclamation\" Field Value string RoadCircleXmark public const string RoadCircleXmark = \"road-circle-xmark\" Field Value string RoadLock public const string RoadLock = \"road-lock\" Field Value string RoadSpikes public const string RoadSpikes = \"road-spikes\" Field Value string Robot public const string Robot = \"robot\" Field Value string Rocket public const string Rocket = \"rocket\" Field Value string Rocketchat public const string Rocketchat = \"rocketchat\" Field Value string Rockrms public const string Rockrms = \"rockrms\" Field Value string RodAsclepius public const string RodAsclepius = \"rod-asclepius\" Field Value string RodSnake public const string RodSnake = \"rod-snake\" Field Value string Rotate public const string Rotate = \"rotate\" Field Value string RotateBack public const string RotateBack = \"rotate-back\" Field Value string RotateBackward public const string RotateBackward = \"rotate-backward\" Field Value string RotateForward public const string RotateForward = \"rotate-forward\" Field Value string RotateLeft public const string RotateLeft = \"rotate-left\" Field Value string RotateRight public const string RotateRight = \"rotate-right\" Field Value string Rouble public const string Rouble = \"rouble\" Field Value string Route public const string Route = \"route\" Field Value string Rss public const string Rss = \"rss\" Field Value string RssSquare public const string RssSquare = \"rss-square\" Field Value string Rub public const string Rub = \"rub\" Field Value string Ruble public const string Ruble = \"ruble\" Field Value string RubleSign public const string RubleSign = \"ruble-sign\" Field Value string Rug public const string Rug = \"rug\" Field Value string Ruler public const string Ruler = \"ruler\" Field Value string RulerCombined public const string RulerCombined = \"ruler-combined\" Field Value string RulerHorizontal public const string RulerHorizontal = \"ruler-horizontal\" Field Value string RulerVertical public const string RulerVertical = \"ruler-vertical\" Field Value string Running public const string Running = \"running\" Field Value string Rupee public const string Rupee = \"rupee\" Field Value string RupeeSign public const string RupeeSign = \"rupee-sign\" Field Value string RupiahSign public const string RupiahSign = \"rupiah-sign\" Field Value string Rust public const string Rust = \"rust\" Field Value string S public const string S = \"s\" Field Value string SackDollar public const string SackDollar = \"sack-dollar\" Field Value string SackXmark public const string SackXmark = \"sack-xmark\" Field Value string SadCry public const string SadCry = \"sad-cry\" Field Value string SadTear public const string SadTear = \"sad-tear\" Field Value string Safari public const string Safari = \"safari\" Field Value string Sailboat public const string Sailboat = \"sailboat\" Field Value string Salesforce public const string Salesforce = \"salesforce\" Field Value string Sass public const string Sass = \"sass\" Field Value string Satellite public const string Satellite = \"satellite\" Field Value string SatelliteDish public const string SatelliteDish = \"satellite-dish\" Field Value string Save public const string Save = \"save\" Field Value string ScaleBalanced public const string ScaleBalanced = \"scale-balanced\" Field Value string ScaleUnbalanced public const string ScaleUnbalanced = \"scale-unbalanced\" Field Value string ScaleUnbalancedFlip public const string ScaleUnbalancedFlip = \"scale-unbalanced-flip\" Field Value string Schlix public const string Schlix = \"schlix\" Field Value string School public const string School = \"school\" Field Value string SchoolCircleCheck public const string SchoolCircleCheck = \"school-circle-check\" Field Value string SchoolCircleExclamation public const string SchoolCircleExclamation = \"school-circle-exclamation\" Field Value string SchoolCircleXmark public const string SchoolCircleXmark = \"school-circle-xmark\" Field Value string SchoolFlag public const string SchoolFlag = \"school-flag\" Field Value string SchoolLock public const string SchoolLock = \"school-lock\" Field Value string Scissors public const string Scissors = \"scissors\" Field Value string Screenpal public const string Screenpal = \"screenpal\" Field Value string Screwdriver public const string Screwdriver = \"screwdriver\" Field Value string ScrewdriverWrench public const string ScrewdriverWrench = \"screwdriver-wrench\" Field Value string Scribd public const string Scribd = \"scribd\" Field Value string Scroll public const string Scroll = \"scroll\" Field Value string ScrollTorah public const string ScrollTorah = \"scroll-torah\" Field Value string SdCard public const string SdCard = \"sd-card\" Field Value string Search public const string Search = \"search\" Field Value string SearchDollar public const string SearchDollar = \"search-dollar\" Field Value string SearchLocation public const string SearchLocation = \"search-location\" Field Value string SearchMinus public const string SearchMinus = \"search-minus\" Field Value string SearchPlus public const string SearchPlus = \"search-plus\" Field Value string Searchengin public const string Searchengin = \"searchengin\" Field Value string Section public const string Section = \"section\" Field Value string Seedling public const string Seedling = \"seedling\" Field Value string Sellcast public const string Sellcast = \"sellcast\" Field Value string Sellsy public const string Sellsy = \"sellsy\" Field Value string Server public const string Server = \"server\" Field Value string Servicestack public const string Servicestack = \"servicestack\" Field Value string Shapes public const string Shapes = \"shapes\" Field Value string Share public const string Share = \"share\" Field Value string ShareAlt public const string ShareAlt = \"share-alt\" Field Value string ShareAltSquare public const string ShareAltSquare = \"share-alt-square\" Field Value string ShareFromSquare public const string ShareFromSquare = \"share-from-square\" Field Value string ShareNodes public const string ShareNodes = \"share-nodes\" Field Value string ShareSquare public const string ShareSquare = \"share-square\" Field Value string SheetPlastic public const string SheetPlastic = \"sheet-plastic\" Field Value string Shekel public const string Shekel = \"shekel\" Field Value string ShekelSign public const string ShekelSign = \"shekel-sign\" Field Value string Sheqel public const string Sheqel = \"sheqel\" Field Value string SheqelSign public const string SheqelSign = \"sheqel-sign\" Field Value string Shield public const string Shield = \"shield\" Field Value string ShieldAlt public const string ShieldAlt = \"shield-alt\" Field Value string ShieldBlank public const string ShieldBlank = \"shield-blank\" Field Value string ShieldCat public const string ShieldCat = \"shield-cat\" Field Value string ShieldDog public const string ShieldDog = \"shield-dog\" Field Value string ShieldHalved public const string ShieldHalved = \"shield-halved\" Field Value string ShieldHeart public const string ShieldHeart = \"shield-heart\" Field Value string ShieldVirus public const string ShieldVirus = \"shield-virus\" Field Value string Ship public const string Ship = \"ship\" Field Value string ShippingFast public const string ShippingFast = \"shipping-fast\" Field Value string Shirt public const string Shirt = \"shirt\" Field Value string Shirtsinbulk public const string Shirtsinbulk = \"shirtsinbulk\" Field Value string ShoePrints public const string ShoePrints = \"shoe-prints\" Field Value string Shoelace public const string Shoelace = \"shoelace\" Field Value string Shop public const string Shop = \"shop\" Field Value string ShopLock public const string ShopLock = \"shop-lock\" Field Value string ShopSlash public const string ShopSlash = \"shop-slash\" Field Value string Shopify public const string Shopify = \"shopify\" Field Value string ShoppingBag public const string ShoppingBag = \"shopping-bag\" Field Value string ShoppingBasket public const string ShoppingBasket = \"shopping-basket\" Field Value string ShoppingCart public const string ShoppingCart = \"shopping-cart\" Field Value string Shopware public const string Shopware = \"shopware\" Field Value string Shower public const string Shower = \"shower\" Field Value string Shrimp public const string Shrimp = \"shrimp\" Field Value string Shuffle public const string Shuffle = \"shuffle\" Field Value string ShuttleSpace public const string ShuttleSpace = \"shuttle-space\" Field Value string ShuttleVan public const string ShuttleVan = \"shuttle-van\" Field Value string Sign public const string Sign = \"sign\" Field Value string SignHanging public const string SignHanging = \"sign-hanging\" Field Value string SignIn public const string SignIn = \"sign-in\" Field Value string SignInAlt public const string SignInAlt = \"sign-in-alt\" Field Value string SignLanguage public const string SignLanguage = \"sign-language\" Field Value string SignOut public const string SignOut = \"sign-out\" Field Value string SignOutAlt public const string SignOutAlt = \"sign-out-alt\" Field Value string Signal public const string Signal = \"signal\" Field Value string Signal5 public const string Signal5 = \"signal-5\" Field Value string SignalMessenger public const string SignalMessenger = \"signal-messenger\" Field Value string SignalPerfect public const string SignalPerfect = \"signal-perfect\" Field Value string Signature public const string Signature = \"signature\" Field Value string Signing public const string Signing = \"signing\" Field Value string SignsPost public const string SignsPost = \"signs-post\" Field Value string SimCard public const string SimCard = \"sim-card\" Field Value string Simplybuilt public const string Simplybuilt = \"simplybuilt\" Field Value string Sink public const string Sink = \"sink\" Field Value string Sistrix public const string Sistrix = \"sistrix\" Field Value string Sitemap public const string Sitemap = \"sitemap\" Field Value string Sith public const string Sith = \"sith\" Field Value string Sitrox public const string Sitrox = \"sitrox\" Field Value string Skating public const string Skating = \"skating\" Field Value string Sketch public const string Sketch = \"sketch\" Field Value string Skiing public const string Skiing = \"skiing\" Field Value string SkiingNordic public const string SkiingNordic = \"skiing-nordic\" Field Value string Skull public const string Skull = \"skull\" Field Value string SkullCrossbones public const string SkullCrossbones = \"skull-crossbones\" Field Value string Skyatlas public const string Skyatlas = \"skyatlas\" Field Value string Skype public const string Skype = \"skype\" Field Value string Slack public const string Slack = \"slack\" Field Value string SlackHash public const string SlackHash = \"slack-hash\" Field Value string Slash public const string Slash = \"slash\" Field Value string Sleigh public const string Sleigh = \"sleigh\" Field Value string Sliders public const string Sliders = \"sliders\" Field Value string SlidersH public const string SlidersH = \"sliders-h\" Field Value string Slideshare public const string Slideshare = \"slideshare\" Field Value string Smile public const string Smile = \"smile\" Field Value string SmileBeam public const string SmileBeam = \"smile-beam\" Field Value string SmileWink public const string SmileWink = \"smile-wink\" Field Value string Smog public const string Smog = \"smog\" Field Value string Smoking public const string Smoking = \"smoking\" Field Value string SmokingBan public const string SmokingBan = \"smoking-ban\" Field Value string Sms public const string Sms = \"sms\" Field Value string Snapchat public const string Snapchat = \"snapchat\" Field Value string SnapchatGhost public const string SnapchatGhost = \"snapchat-ghost\" Field Value string SnapchatSquare public const string SnapchatSquare = \"snapchat-square\" Field Value string Snowboarding public const string Snowboarding = \"snowboarding\" Field Value string Snowflake public const string Snowflake = \"snowflake\" Field Value string Snowman public const string Snowman = \"snowman\" Field Value string Snowplow public const string Snowplow = \"snowplow\" Field Value string Soap public const string Soap = \"soap\" Field Value string SoccerBall public const string SoccerBall = \"soccer-ball\" Field Value string Socks public const string Socks = \"socks\" Field Value string SolarPanel public const string SolarPanel = \"solar-panel\" Field Value string Sort public const string Sort = \"sort\" Field Value string SortAlphaAsc public const string SortAlphaAsc = \"sort-alpha-asc\" Field Value string SortAlphaDesc public const string SortAlphaDesc = \"sort-alpha-desc\" Field Value string SortAlphaDown public const string SortAlphaDown = \"sort-alpha-down\" Field Value string SortAlphaDownAlt public const string SortAlphaDownAlt = \"sort-alpha-down-alt\" Field Value string SortAlphaUp public const string SortAlphaUp = \"sort-alpha-up\" Field Value string SortAlphaUpAlt public const string SortAlphaUpAlt = \"sort-alpha-up-alt\" Field Value string SortAmountAsc public const string SortAmountAsc = \"sort-amount-asc\" Field Value string SortAmountDesc public const string SortAmountDesc = \"sort-amount-desc\" Field Value string SortAmountDown public const string SortAmountDown = \"sort-amount-down\" Field Value string SortAmountDownAlt public const string SortAmountDownAlt = \"sort-amount-down-alt\" Field Value string SortAmountUp public const string SortAmountUp = \"sort-amount-up\" Field Value string SortAmountUpAlt public const string SortAmountUpAlt = \"sort-amount-up-alt\" Field Value string SortAsc public const string SortAsc = \"sort-asc\" Field Value string SortDesc public const string SortDesc = \"sort-desc\" Field Value string SortDown public const string SortDown = \"sort-down\" Field Value string SortNumericAsc public const string SortNumericAsc = \"sort-numeric-asc\" Field Value string SortNumericDesc public const string SortNumericDesc = \"sort-numeric-desc\" Field Value string SortNumericDown public const string SortNumericDown = \"sort-numeric-down\" Field Value string SortNumericDownAlt public const string SortNumericDownAlt = \"sort-numeric-down-alt\" Field Value string SortNumericUp public const string SortNumericUp = \"sort-numeric-up\" Field Value string SortNumericUpAlt public const string SortNumericUpAlt = \"sort-numeric-up-alt\" Field Value string SortUp public const string SortUp = \"sort-up\" Field Value string Soundcloud public const string Soundcloud = \"soundcloud\" Field Value string Sourcetree public const string Sourcetree = \"sourcetree\" Field Value string Spa public const string Spa = \"spa\" Field Value string SpaceAwesome public const string SpaceAwesome = \"space-awesome\" Field Value string SpaceShuttle public const string SpaceShuttle = \"space-shuttle\" Field Value string SpaghettiMonsterFlying public const string SpaghettiMonsterFlying = \"spaghetti-monster-flying\" Field Value string Speakap public const string Speakap = \"speakap\" Field Value string SpeakerDeck public const string SpeakerDeck = \"speaker-deck\" Field Value string SpellCheck public const string SpellCheck = \"spell-check\" Field Value string Spider public const string Spider = \"spider\" Field Value string Spinner public const string Spinner = \"spinner\" Field Value string Splotch public const string Splotch = \"splotch\" Field Value string Spoon public const string Spoon = \"spoon\" Field Value string Spotify public const string Spotify = \"spotify\" Field Value string SprayCan public const string SprayCan = \"spray-can\" Field Value string SprayCanSparkles public const string SprayCanSparkles = \"spray-can-sparkles\" Field Value string Sprout public const string Sprout = \"sprout\" Field Value string Square public const string Square = \"square\" Field Value string SquareArrowUpRight public const string SquareArrowUpRight = \"square-arrow-up-right\" Field Value string SquareBehance public const string SquareBehance = \"square-behance\" Field Value string SquareBinary public const string SquareBinary = \"square-binary\" Field Value string SquareBluesky public const string SquareBluesky = \"square-bluesky\" Field Value string SquareCaretDown public const string SquareCaretDown = \"square-caret-down\" Field Value string SquareCaretLeft public const string SquareCaretLeft = \"square-caret-left\" Field Value string SquareCaretRight public const string SquareCaretRight = \"square-caret-right\" Field Value string SquareCaretUp public const string SquareCaretUp = \"square-caret-up\" Field Value string SquareCheck public const string SquareCheck = \"square-check\" Field Value string SquareDribbble public const string SquareDribbble = \"square-dribbble\" Field Value string SquareEnvelope public const string SquareEnvelope = \"square-envelope\" Field Value string SquareFacebook public const string SquareFacebook = \"square-facebook\" Field Value string SquareFontAwesome public const string SquareFontAwesome = \"square-font-awesome\" Field Value string SquareFontAwesomeStroke public const string SquareFontAwesomeStroke = \"square-font-awesome-stroke\" Field Value string SquareFull public const string SquareFull = \"square-full\" Field Value string SquareGit public const string SquareGit = \"square-git\" Field Value string SquareGithub public const string SquareGithub = \"square-github\" Field Value string SquareGitlab public const string SquareGitlab = \"square-gitlab\" Field Value string SquareGooglePlus public const string SquareGooglePlus = \"square-google-plus\" Field Value string SquareH public const string SquareH = \"square-h\" Field Value string SquareHackerNews public const string SquareHackerNews = \"square-hacker-news\" Field Value string SquareInstagram public const string SquareInstagram = \"square-instagram\" Field Value string SquareJs public const string SquareJs = \"square-js\" Field Value string SquareKickstarter public const string SquareKickstarter = \"square-kickstarter\" Field Value string SquareLastfm public const string SquareLastfm = \"square-lastfm\" Field Value string SquareLetterboxd public const string SquareLetterboxd = \"square-letterboxd\" Field Value string SquareMinus public const string SquareMinus = \"square-minus\" Field Value string SquareNfi public const string SquareNfi = \"square-nfi\" Field Value string SquareOdnoklassniki public const string SquareOdnoklassniki = \"square-odnoklassniki\" Field Value string SquareParking public const string SquareParking = \"square-parking\" Field Value string SquarePen public const string SquarePen = \"square-pen\" Field Value string SquarePersonConfined public const string SquarePersonConfined = \"square-person-confined\" Field Value string SquarePhone public const string SquarePhone = \"square-phone\" Field Value string SquarePhoneFlip public const string SquarePhoneFlip = \"square-phone-flip\" Field Value string SquarePiedPiper public const string SquarePiedPiper = \"square-pied-piper\" Field Value string SquarePinterest public const string SquarePinterest = \"square-pinterest\" Field Value string SquarePlus public const string SquarePlus = \"square-plus\" Field Value string SquarePollHorizontal public const string SquarePollHorizontal = \"square-poll-horizontal\" Field Value string SquarePollVertical public const string SquarePollVertical = \"square-poll-vertical\" Field Value string SquareReddit public const string SquareReddit = \"square-reddit\" Field Value string SquareRootAlt public const string SquareRootAlt = \"square-root-alt\" Field Value string SquareRootVariable public const string SquareRootVariable = \"square-root-variable\" Field Value string SquareRss public const string SquareRss = \"square-rss\" Field Value string SquareShareNodes public const string SquareShareNodes = \"square-share-nodes\" Field Value string SquareSnapchat public const string SquareSnapchat = \"square-snapchat\" Field Value string SquareSteam public const string SquareSteam = \"square-steam\" Field Value string SquareThreads public const string SquareThreads = \"square-threads\" Field Value string SquareTumblr public const string SquareTumblr = \"square-tumblr\" Field Value string SquareTwitter public const string SquareTwitter = \"square-twitter\" Field Value string SquareUpRight public const string SquareUpRight = \"square-up-right\" Field Value string SquareUpwork public const string SquareUpwork = \"square-upwork\" Field Value string SquareViadeo public const string SquareViadeo = \"square-viadeo\" Field Value string SquareVimeo public const string SquareVimeo = \"square-vimeo\" Field Value string SquareVirus public const string SquareVirus = \"square-virus\" Field Value string SquareWebAwesome public const string SquareWebAwesome = \"square-web-awesome\" Field Value string SquareWebAwesomeStroke public const string SquareWebAwesomeStroke = \"square-web-awesome-stroke\" Field Value string SquareWhatsapp public const string SquareWhatsapp = \"square-whatsapp\" Field Value string SquareXTwitter public const string SquareXTwitter = \"square-x-twitter\" Field Value string SquareXing public const string SquareXing = \"square-xing\" Field Value string SquareXmark public const string SquareXmark = \"square-xmark\" Field Value string SquareYoutube public const string SquareYoutube = \"square-youtube\" Field Value string Squarespace public const string Squarespace = \"squarespace\" Field Value string StackExchange public const string StackExchange = \"stack-exchange\" Field Value string StackOverflow public const string StackOverflow = \"stack-overflow\" Field Value string Stackpath public const string Stackpath = \"stackpath\" Field Value string StaffAesculapius public const string StaffAesculapius = \"staff-aesculapius\" Field Value string StaffSnake public const string StaffSnake = \"staff-snake\" Field Value string Stairs public const string Stairs = \"stairs\" Field Value string Stamp public const string Stamp = \"stamp\" Field Value string Stapler public const string Stapler = \"stapler\" Field Value string Star public const string Star = \"star\" Field Value string StarAndCrescent public const string StarAndCrescent = \"star-and-crescent\" Field Value string StarHalf public const string StarHalf = \"star-half\" Field Value string StarHalfAlt public const string StarHalfAlt = \"star-half-alt\" Field Value string StarHalfStroke public const string StarHalfStroke = \"star-half-stroke\" Field Value string StarOfDavid public const string StarOfDavid = \"star-of-david\" Field Value string StarOfLife public const string StarOfLife = \"star-of-life\" Field Value string Staylinked public const string Staylinked = \"staylinked\" Field Value string Steam public const string Steam = \"steam\" Field Value string SteamSquare public const string SteamSquare = \"steam-square\" Field Value string SteamSymbol public const string SteamSymbol = \"steam-symbol\" Field Value string StepBackward public const string StepBackward = \"step-backward\" Field Value string StepForward public const string StepForward = \"step-forward\" Field Value string SterlingSign public const string SterlingSign = \"sterling-sign\" Field Value string Stethoscope public const string Stethoscope = \"stethoscope\" Field Value string StickerMule public const string StickerMule = \"sticker-mule\" Field Value string StickyNote public const string StickyNote = \"sticky-note\" Field Value string Stop public const string Stop = \"stop\" Field Value string StopCircle public const string StopCircle = \"stop-circle\" Field Value string Stopwatch public const string Stopwatch = \"stopwatch\" Field Value string Stopwatch20 public const string Stopwatch20 = \"stopwatch-20\" Field Value string Store public const string Store = \"store\" Field Value string StoreAlt public const string StoreAlt = \"store-alt\" Field Value string StoreAltSlash public const string StoreAltSlash = \"store-alt-slash\" Field Value string StoreSlash public const string StoreSlash = \"store-slash\" Field Value string Strava public const string Strava = \"strava\" Field Value string Stream public const string Stream = \"stream\" Field Value string StreetView public const string StreetView = \"street-view\" Field Value string Strikethrough public const string Strikethrough = \"strikethrough\" Field Value string Stripe public const string Stripe = \"stripe\" Field Value string StripeS public const string StripeS = \"stripe-s\" Field Value string Stroopwafel public const string Stroopwafel = \"stroopwafel\" Field Value string Stubber public const string Stubber = \"stubber\" Field Value string Studiovinari public const string Studiovinari = \"studiovinari\" Field Value string Stumbleupon public const string Stumbleupon = \"stumbleupon\" Field Value string StumbleuponCircle public const string StumbleuponCircle = \"stumbleupon-circle\" Field Value string Subscript public const string Subscript = \"subscript\" Field Value string Subtract public const string Subtract = \"subtract\" Field Value string Subway public const string Subway = \"subway\" Field Value string Suitcase public const string Suitcase = \"suitcase\" Field Value string SuitcaseMedical public const string SuitcaseMedical = \"suitcase-medical\" Field Value string SuitcaseRolling public const string SuitcaseRolling = \"suitcase-rolling\" Field Value string Sun public const string Sun = \"sun\" Field Value string SunPlantWilt public const string SunPlantWilt = \"sun-plant-wilt\" Field Value string Superpowers public const string Superpowers = \"superpowers\" Field Value string Superscript public const string Superscript = \"superscript\" Field Value string Supple public const string Supple = \"supple\" Field Value string Surprise public const string Surprise = \"surprise\" Field Value string Suse public const string Suse = \"suse\" Field Value string Swatchbook public const string Swatchbook = \"swatchbook\" Field Value string Swift public const string Swift = \"swift\" Field Value string Swimmer public const string Swimmer = \"swimmer\" Field Value string SwimmingPool public const string SwimmingPool = \"swimming-pool\" Field Value string Symfony public const string Symfony = \"symfony\" Field Value string Synagogue public const string Synagogue = \"synagogue\" Field Value string Sync public const string Sync = \"sync\" Field Value string SyncAlt public const string SyncAlt = \"sync-alt\" Field Value string Syringe public const string Syringe = \"syringe\" Field Value string T public const string T = \"t\" Field Value string T_Shirt public const string T_Shirt = \"t-shirt\" Field Value string Table public const string Table = \"table\" Field Value string TableCells public const string TableCells = \"table-cells\" Field Value string TableCellsColumnLock public const string TableCellsColumnLock = \"table-cells-column-lock\" Field Value string TableCellsLarge public const string TableCellsLarge = \"table-cells-large\" Field Value string TableCellsRowLock public const string TableCellsRowLock = \"table-cells-row-lock\" Field Value string TableCellsRowUnlock public const string TableCellsRowUnlock = \"table-cells-row-unlock\" Field Value string TableColumns public const string TableColumns = \"table-columns\" Field Value string TableList public const string TableList = \"table-list\" Field Value string TableTennis public const string TableTennis = \"table-tennis\" Field Value string TableTennisPaddleBall public const string TableTennisPaddleBall = \"table-tennis-paddle-ball\" Field Value string Tablet public const string Tablet = \"tablet\" Field Value string TabletAlt public const string TabletAlt = \"tablet-alt\" Field Value string TabletAndroid public const string TabletAndroid = \"tablet-android\" Field Value string TabletButton public const string TabletButton = \"tablet-button\" Field Value string TabletScreenButton public const string TabletScreenButton = \"tablet-screen-button\" Field Value string Tablets public const string Tablets = \"tablets\" Field Value string TachographDigital public const string TachographDigital = \"tachograph-digital\" Field Value string Tachometer public const string Tachometer = \"tachometer\" Field Value string TachometerAlt public const string TachometerAlt = \"tachometer-alt\" Field Value string TachometerAltAverage public const string TachometerAltAverage = \"tachometer-alt-average\" Field Value string TachometerAltFast public const string TachometerAltFast = \"tachometer-alt-fast\" Field Value string TachometerAverage public const string TachometerAverage = \"tachometer-average\" Field Value string TachometerFast public const string TachometerFast = \"tachometer-fast\" Field Value string Tag public const string Tag = \"tag\" Field Value string Tags public const string Tags = \"tags\" Field Value string Tanakh public const string Tanakh = \"tanakh\" Field Value string Tape public const string Tape = \"tape\" Field Value string Tarp public const string Tarp = \"tarp\" Field Value string TarpDroplet public const string TarpDroplet = \"tarp-droplet\" Field Value string Tasks public const string Tasks = \"tasks\" Field Value string TasksAlt public const string TasksAlt = \"tasks-alt\" Field Value string Taxi public const string Taxi = \"taxi\" Field Value string Teamspeak public const string Teamspeak = \"teamspeak\" Field Value string Teeth public const string Teeth = \"teeth\" Field Value string TeethOpen public const string TeethOpen = \"teeth-open\" Field Value string Telegram public const string Telegram = \"telegram\" Field Value string TelegramPlane public const string TelegramPlane = \"telegram-plane\" Field Value string Teletype public const string Teletype = \"teletype\" Field Value string Television public const string Television = \"television\" Field Value string Temperature0 public const string Temperature0 = \"temperature-0\" Field Value string Temperature1 public const string Temperature1 = \"temperature-1\" Field Value string Temperature2 public const string Temperature2 = \"temperature-2\" Field Value string Temperature3 public const string Temperature3 = \"temperature-3\" Field Value string Temperature4 public const string Temperature4 = \"temperature-4\" Field Value string TemperatureArrowDown public const string TemperatureArrowDown = \"temperature-arrow-down\" Field Value string TemperatureArrowUp public const string TemperatureArrowUp = \"temperature-arrow-up\" Field Value string TemperatureDown public const string TemperatureDown = \"temperature-down\" Field Value string TemperatureEmpty public const string TemperatureEmpty = \"temperature-empty\" Field Value string TemperatureFull public const string TemperatureFull = \"temperature-full\" Field Value string TemperatureHalf public const string TemperatureHalf = \"temperature-half\" Field Value string TemperatureHigh public const string TemperatureHigh = \"temperature-high\" Field Value string TemperatureLow public const string TemperatureLow = \"temperature-low\" Field Value string TemperatureQuarter public const string TemperatureQuarter = \"temperature-quarter\" Field Value string TemperatureThreeQuarters public const string TemperatureThreeQuarters = \"temperature-three-quarters\" Field Value string TemperatureUp public const string TemperatureUp = \"temperature-up\" Field Value string TencentWeibo public const string TencentWeibo = \"tencent-weibo\" Field Value string Tenge public const string Tenge = \"tenge\" Field Value string TengeSign public const string TengeSign = \"tenge-sign\" Field Value string Tent public const string Tent = \"tent\" Field Value string TentArrowDownToLine public const string TentArrowDownToLine = \"tent-arrow-down-to-line\" Field Value string TentArrowLeftRight public const string TentArrowLeftRight = \"tent-arrow-left-right\" Field Value string TentArrowTurnLeft public const string TentArrowTurnLeft = \"tent-arrow-turn-left\" Field Value string TentArrowsDown public const string TentArrowsDown = \"tent-arrows-down\" Field Value string Tents public const string Tents = \"tents\" Field Value string Terminal public const string Terminal = \"terminal\" Field Value string TextHeight public const string TextHeight = \"text-height\" Field Value string TextSlash public const string TextSlash = \"text-slash\" Field Value string TextWidth public const string TextWidth = \"text-width\" Field Value string Th public const string Th = \"th\" Field Value string ThLarge public const string ThLarge = \"th-large\" Field Value string ThList public const string ThList = \"th-list\" Field Value string TheRedYeti public const string TheRedYeti = \"the-red-yeti\" Field Value string TheaterMasks public const string TheaterMasks = \"theater-masks\" Field Value string Themeco public const string Themeco = \"themeco\" Field Value string Themeisle public const string Themeisle = \"themeisle\" Field Value string Thermometer public const string Thermometer = \"thermometer\" Field Value string Thermometer0 public const string Thermometer0 = \"thermometer-0\" Field Value string Thermometer1 public const string Thermometer1 = \"thermometer-1\" Field Value string Thermometer2 public const string Thermometer2 = \"thermometer-2\" Field Value string Thermometer3 public const string Thermometer3 = \"thermometer-3\" Field Value string Thermometer4 public const string Thermometer4 = \"thermometer-4\" Field Value string ThermometerEmpty public const string ThermometerEmpty = \"thermometer-empty\" Field Value string ThermometerFull public const string ThermometerFull = \"thermometer-full\" Field Value string ThermometerHalf public const string ThermometerHalf = \"thermometer-half\" Field Value string ThermometerQuarter public const string ThermometerQuarter = \"thermometer-quarter\" Field Value string ThermometerThreeQuarters public const string ThermometerThreeQuarters = \"thermometer-three-quarters\" Field Value string ThinkPeaks public const string ThinkPeaks = \"think-peaks\" Field Value string Threads public const string Threads = \"threads\" Field Value string ThumbTack public const string ThumbTack = \"thumb-tack\" Field Value string ThumbTackSlash public const string ThumbTackSlash = \"thumb-tack-slash\" Field Value string ThumbsDown public const string ThumbsDown = \"thumbs-down\" Field Value string ThumbsUp public const string ThumbsUp = \"thumbs-up\" Field Value string Thumbtack public const string Thumbtack = \"thumbtack\" Field Value string ThumbtackSlash public const string ThumbtackSlash = \"thumbtack-slash\" Field Value string Thunderstorm public const string Thunderstorm = \"thunderstorm\" Field Value string Ticket public const string Ticket = \"ticket\" Field Value string TicketAlt public const string TicketAlt = \"ticket-alt\" Field Value string TicketSimple public const string TicketSimple = \"ticket-simple\" Field Value string Tiktok public const string Tiktok = \"tiktok\" Field Value string Timeline public const string Timeline = \"timeline\" Field Value string Times public const string Times = \"times\" Field Value string TimesCircle public const string TimesCircle = \"times-circle\" Field Value string TimesRectangle public const string TimesRectangle = \"times-rectangle\" Field Value string TimesSquare public const string TimesSquare = \"times-square\" Field Value string Tint public const string Tint = \"tint\" Field Value string TintSlash public const string TintSlash = \"tint-slash\" Field Value string Tired public const string Tired = \"tired\" Field Value string ToggleOff public const string ToggleOff = \"toggle-off\" Field Value string ToggleOn public const string ToggleOn = \"toggle-on\" Field Value string Toilet public const string Toilet = \"toilet\" Field Value string ToiletPaper public const string ToiletPaper = \"toilet-paper\" Field Value string ToiletPaperSlash public const string ToiletPaperSlash = \"toilet-paper-slash\" Field Value string ToiletPortable public const string ToiletPortable = \"toilet-portable\" Field Value string ToiletsPortable public const string ToiletsPortable = \"toilets-portable\" Field Value string Toolbox public const string Toolbox = \"toolbox\" Field Value string Tools public const string Tools = \"tools\" Field Value string Tooth public const string Tooth = \"tooth\" Field Value string Torah public const string Torah = \"torah\" Field Value string ToriiGate public const string ToriiGate = \"torii-gate\" Field Value string Tornado public const string Tornado = \"tornado\" Field Value string TowerBroadcast public const string TowerBroadcast = \"tower-broadcast\" Field Value string TowerCell public const string TowerCell = \"tower-cell\" Field Value string TowerObservation public const string TowerObservation = \"tower-observation\" Field Value string Tractor public const string Tractor = \"tractor\" Field Value string TradeFederation public const string TradeFederation = \"trade-federation\" Field Value string Trademark public const string Trademark = \"trademark\" Field Value string TrafficLight public const string TrafficLight = \"traffic-light\" Field Value string Trailer public const string Trailer = \"trailer\" Field Value string Train public const string Train = \"train\" Field Value string TrainSubway public const string TrainSubway = \"train-subway\" Field Value string TrainTram public const string TrainTram = \"train-tram\" Field Value string Tram public const string Tram = \"tram\" Field Value string Transgender public const string Transgender = \"transgender\" Field Value string TransgenderAlt public const string TransgenderAlt = \"transgender-alt\" Field Value string Trash public const string Trash = \"trash\" Field Value string TrashAlt public const string TrashAlt = \"trash-alt\" Field Value string TrashArrowUp public const string TrashArrowUp = \"trash-arrow-up\" Field Value string TrashCan public const string TrashCan = \"trash-can\" Field Value string TrashCanArrowUp public const string TrashCanArrowUp = \"trash-can-arrow-up\" Field Value string TrashRestore public const string TrashRestore = \"trash-restore\" Field Value string TrashRestoreAlt public const string TrashRestoreAlt = \"trash-restore-alt\" Field Value string Tree public const string Tree = \"tree\" Field Value string TreeCity public const string TreeCity = \"tree-city\" Field Value string Trello public const string Trello = \"trello\" Field Value string TriangleCircleSquare public const string TriangleCircleSquare = \"triangle-circle-square\" Field Value string TriangleExclamation public const string TriangleExclamation = \"triangle-exclamation\" Field Value string Trophy public const string Trophy = \"trophy\" Field Value string Trowel public const string Trowel = \"trowel\" Field Value string TrowelBricks public const string TrowelBricks = \"trowel-bricks\" Field Value string Truck public const string Truck = \"truck\" Field Value string TruckArrowRight public const string TruckArrowRight = \"truck-arrow-right\" Field Value string TruckDroplet public const string TruckDroplet = \"truck-droplet\" Field Value string TruckFast public const string TruckFast = \"truck-fast\" Field Value string TruckField public const string TruckField = \"truck-field\" Field Value string TruckFieldUn public const string TruckFieldUn = \"truck-field-un\" Field Value string TruckFront public const string TruckFront = \"truck-front\" Field Value string TruckLoading public const string TruckLoading = \"truck-loading\" Field Value string TruckMedical public const string TruckMedical = \"truck-medical\" Field Value string TruckMonster public const string TruckMonster = \"truck-monster\" Field Value string TruckMoving public const string TruckMoving = \"truck-moving\" Field Value string TruckPickup public const string TruckPickup = \"truck-pickup\" Field Value string TruckPlane public const string TruckPlane = \"truck-plane\" Field Value string TruckRampBox public const string TruckRampBox = \"truck-ramp-box\" Field Value string Try public const string Try = \"try\" Field Value string Tshirt public const string Tshirt = \"tshirt\" Field Value string Tty public const string Tty = \"tty\" Field Value string Tumblr public const string Tumblr = \"tumblr\" Field Value string TumblrSquare public const string TumblrSquare = \"tumblr-square\" Field Value string TurkishLira public const string TurkishLira = \"turkish-lira\" Field Value string TurkishLiraSign public const string TurkishLiraSign = \"turkish-lira-sign\" Field Value string TurnDown public const string TurnDown = \"turn-down\" Field Value string TurnUp public const string TurnUp = \"turn-up\" Field Value string Tv public const string Tv = \"tv\" Field Value string TvAlt public const string TvAlt = \"tv-alt\" Field Value string Twitch public const string Twitch = \"twitch\" Field Value string Twitter public const string Twitter = \"twitter\" Field Value string TwitterSquare public const string TwitterSquare = \"twitter-square\" Field Value string Typo3 public const string Typo3 = \"typo3\" Field Value string U public const string U = \"u\" Field Value string Uber public const string Uber = \"uber\" Field Value string Ubuntu public const string Ubuntu = \"ubuntu\" Field Value string Uikit public const string Uikit = \"uikit\" Field Value string Umbraco public const string Umbraco = \"umbraco\" Field Value string Umbrella public const string Umbrella = \"umbrella\" Field Value string UmbrellaBeach public const string UmbrellaBeach = \"umbrella-beach\" Field Value string Uncharted public const string Uncharted = \"uncharted\" Field Value string Underline public const string Underline = \"underline\" Field Value string Undo public const string Undo = \"undo\" Field Value string UndoAlt public const string UndoAlt = \"undo-alt\" Field Value string Uniregistry public const string Uniregistry = \"uniregistry\" Field Value string Unity public const string Unity = \"unity\" Field Value string UniversalAccess public const string UniversalAccess = \"universal-access\" Field Value string University public const string University = \"university\" Field Value string Unlink public const string Unlink = \"unlink\" Field Value string Unlock public const string Unlock = \"unlock\" Field Value string UnlockAlt public const string UnlockAlt = \"unlock-alt\" Field Value string UnlockKeyhole public const string UnlockKeyhole = \"unlock-keyhole\" Field Value string Unsorted public const string Unsorted = \"unsorted\" Field Value string Unsplash public const string Unsplash = \"unsplash\" Field Value string Untappd public const string Untappd = \"untappd\" Field Value string UpDown public const string UpDown = \"up-down\" Field Value string UpDownLeftRight public const string UpDownLeftRight = \"up-down-left-right\" Field Value string UpLong public const string UpLong = \"up-long\" Field Value string UpRightAndDownLeftFromCenter public const string UpRightAndDownLeftFromCenter = \"up-right-and-down-left-from-center\" Field Value string UpRightFromSquare public const string UpRightFromSquare = \"up-right-from-square\" Field Value string Upload public const string Upload = \"upload\" Field Value string Ups public const string Ups = \"ups\" Field Value string Upwork public const string Upwork = \"upwork\" Field Value string Usb public const string Usb = \"usb\" Field Value string Usd public const string Usd = \"usd\" Field Value string User public const string User = \"user\" Field Value string UserAlt public const string UserAlt = \"user-alt\" Field Value string UserAltSlash public const string UserAltSlash = \"user-alt-slash\" Field Value string UserAstronaut public const string UserAstronaut = \"user-astronaut\" Field Value string UserCheck public const string UserCheck = \"user-check\" Field Value string UserCircle public const string UserCircle = \"user-circle\" Field Value string UserClock public const string UserClock = \"user-clock\" Field Value string UserCog public const string UserCog = \"user-cog\" Field Value string UserDoctor public const string UserDoctor = \"user-doctor\" Field Value string UserEdit public const string UserEdit = \"user-edit\" Field Value string UserFriends public const string UserFriends = \"user-friends\" Field Value string UserGear public const string UserGear = \"user-gear\" Field Value string UserGraduate public const string UserGraduate = \"user-graduate\" Field Value string UserGroup public const string UserGroup = \"user-group\" Field Value string UserInjured public const string UserInjured = \"user-injured\" Field Value string UserLarge public const string UserLarge = \"user-large\" Field Value string UserLargeSlash public const string UserLargeSlash = \"user-large-slash\" Field Value string UserLock public const string UserLock = \"user-lock\" Field Value string UserMd public const string UserMd = \"user-md\" Field Value string UserMinus public const string UserMinus = \"user-minus\" Field Value string UserNinja public const string UserNinja = \"user-ninja\" Field Value string UserNurse public const string UserNurse = \"user-nurse\" Field Value string UserPen public const string UserPen = \"user-pen\" Field Value string UserPlus public const string UserPlus = \"user-plus\" Field Value string UserSecret public const string UserSecret = \"user-secret\" Field Value string UserShield public const string UserShield = \"user-shield\" Field Value string UserSlash public const string UserSlash = \"user-slash\" Field Value string UserTag public const string UserTag = \"user-tag\" Field Value string UserTie public const string UserTie = \"user-tie\" Field Value string UserTimes public const string UserTimes = \"user-times\" Field Value string UserXmark public const string UserXmark = \"user-xmark\" Field Value string Users public const string Users = \"users\" Field Value string UsersBetweenLines public const string UsersBetweenLines = \"users-between-lines\" Field Value string UsersCog public const string UsersCog = \"users-cog\" Field Value string UsersGear public const string UsersGear = \"users-gear\" Field Value string UsersLine public const string UsersLine = \"users-line\" Field Value string UsersRays public const string UsersRays = \"users-rays\" Field Value string UsersRectangle public const string UsersRectangle = \"users-rectangle\" Field Value string UsersSlash public const string UsersSlash = \"users-slash\" Field Value string UsersViewfinder public const string UsersViewfinder = \"users-viewfinder\" Field Value string Usps public const string Usps = \"usps\" Field Value string Ussunnah public const string Ussunnah = \"ussunnah\" Field Value string UtensilSpoon public const string UtensilSpoon = \"utensil-spoon\" Field Value string Utensils public const string Utensils = \"utensils\" Field Value string V public const string V = \"v\" Field Value string Vaadin public const string Vaadin = \"vaadin\" Field Value string VanShuttle public const string VanShuttle = \"van-shuttle\" Field Value string Vault public const string Vault = \"vault\" Field Value string Vcard public const string Vcard = \"vcard\" Field Value string VectorSquare public const string VectorSquare = \"vector-square\" Field Value string Venus public const string Venus = \"venus\" Field Value string VenusDouble public const string VenusDouble = \"venus-double\" Field Value string VenusMars public const string VenusMars = \"venus-mars\" Field Value string Vest public const string Vest = \"vest\" Field Value string VestPatches public const string VestPatches = \"vest-patches\" Field Value string Viacoin public const string Viacoin = \"viacoin\" Field Value string Viadeo public const string Viadeo = \"viadeo\" Field Value string ViadeoSquare public const string ViadeoSquare = \"viadeo-square\" Field Value string Vial public const string Vial = \"vial\" Field Value string VialCircleCheck public const string VialCircleCheck = \"vial-circle-check\" Field Value string VialVirus public const string VialVirus = \"vial-virus\" Field Value string Vials public const string Vials = \"vials\" Field Value string Viber public const string Viber = \"viber\" Field Value string Video public const string Video = \"video\" Field Value string VideoCamera public const string VideoCamera = \"video-camera\" Field Value string VideoSlash public const string VideoSlash = \"video-slash\" Field Value string Vihara public const string Vihara = \"vihara\" Field Value string Vimeo public const string Vimeo = \"vimeo\" Field Value string VimeoSquare public const string VimeoSquare = \"vimeo-square\" Field Value string VimeoV public const string VimeoV = \"vimeo-v\" Field Value string Vine public const string Vine = \"vine\" Field Value string Virus public const string Virus = \"virus\" Field Value string VirusCovid public const string VirusCovid = \"virus-covid\" Field Value string VirusCovidSlash public const string VirusCovidSlash = \"virus-covid-slash\" Field Value string VirusSlash public const string VirusSlash = \"virus-slash\" Field Value string Viruses public const string Viruses = \"viruses\" Field Value string Vk public const string Vk = \"vk\" Field Value string Vnv public const string Vnv = \"vnv\" Field Value string Voicemail public const string Voicemail = \"voicemail\" Field Value string Volcano public const string Volcano = \"volcano\" Field Value string Volleyball public const string Volleyball = \"volleyball\" Field Value string VolleyballBall public const string VolleyballBall = \"volleyball-ball\" Field Value string VolumeControlPhone public const string VolumeControlPhone = \"volume-control-phone\" Field Value string VolumeDown public const string VolumeDown = \"volume-down\" Field Value string VolumeHigh public const string VolumeHigh = \"volume-high\" Field Value string VolumeLow public const string VolumeLow = \"volume-low\" Field Value string VolumeMute public const string VolumeMute = \"volume-mute\" Field Value string VolumeOff public const string VolumeOff = \"volume-off\" Field Value string VolumeTimes public const string VolumeTimes = \"volume-times\" Field Value string VolumeUp public const string VolumeUp = \"volume-up\" Field Value string VolumeXmark public const string VolumeXmark = \"volume-xmark\" Field Value string VoteYea public const string VoteYea = \"vote-yea\" Field Value string VrCardboard public const string VrCardboard = \"vr-cardboard\" Field Value string Vuejs public const string Vuejs = \"vuejs\" Field Value string W public const string W = \"w\" Field Value string WalkieTalkie public const string WalkieTalkie = \"walkie-talkie\" Field Value string Walking public const string Walking = \"walking\" Field Value string Wallet public const string Wallet = \"wallet\" Field Value string WandMagic public const string WandMagic = \"wand-magic\" Field Value string WandMagicSparkles public const string WandMagicSparkles = \"wand-magic-sparkles\" Field Value string WandSparkles public const string WandSparkles = \"wand-sparkles\" Field Value string Warehouse public const string Warehouse = \"warehouse\" Field Value string Warning public const string Warning = \"warning\" Field Value string WatchmanMonitoring public const string WatchmanMonitoring = \"watchman-monitoring\" Field Value string Water public const string Water = \"water\" Field Value string WaterLadder public const string WaterLadder = \"water-ladder\" Field Value string WaveSquare public const string WaveSquare = \"wave-square\" Field Value string Waze public const string Waze = \"waze\" Field Value string WebAwesome public const string WebAwesome = \"web-awesome\" Field Value string Webflow public const string Webflow = \"webflow\" Field Value string Weebly public const string Weebly = \"weebly\" Field Value string Weibo public const string Weibo = \"weibo\" Field Value string Weight public const string Weight = \"weight\" Field Value string WeightHanging public const string WeightHanging = \"weight-hanging\" Field Value string WeightScale public const string WeightScale = \"weight-scale\" Field Value string Weixin public const string Weixin = \"weixin\" Field Value string Whatsapp public const string Whatsapp = \"whatsapp\" Field Value string WhatsappSquare public const string WhatsappSquare = \"whatsapp-square\" Field Value string WheatAlt public const string WheatAlt = \"wheat-alt\" Field Value string WheatAwn public const string WheatAwn = \"wheat-awn\" Field Value string WheatAwnCircleExclamation public const string WheatAwnCircleExclamation = \"wheat-awn-circle-exclamation\" Field Value string Wheelchair public const string Wheelchair = \"wheelchair\" Field Value string WheelchairAlt public const string WheelchairAlt = \"wheelchair-alt\" Field Value string WheelchairMove public const string WheelchairMove = \"wheelchair-move\" Field Value string WhiskeyGlass public const string WhiskeyGlass = \"whiskey-glass\" Field Value string Whmcs public const string Whmcs = \"whmcs\" Field Value string Wifi public const string Wifi = \"wifi\" Field Value string Wifi3 public const string Wifi3 = \"wifi-3\" Field Value string WifiStrong public const string WifiStrong = \"wifi-strong\" Field Value string WikipediaW public const string WikipediaW = \"wikipedia-w\" Field Value string Wind public const string Wind = \"wind\" Field Value string WindowClose public const string WindowClose = \"window-close\" Field Value string WindowMaximize public const string WindowMaximize = \"window-maximize\" Field Value string WindowMinimize public const string WindowMinimize = \"window-minimize\" Field Value string WindowRestore public const string WindowRestore = \"window-restore\" Field Value string Windows public const string Windows = \"windows\" Field Value string WineBottle public const string WineBottle = \"wine-bottle\" Field Value string WineGlass public const string WineGlass = \"wine-glass\" Field Value string WineGlassAlt public const string WineGlassAlt = \"wine-glass-alt\" Field Value string WineGlassEmpty public const string WineGlassEmpty = \"wine-glass-empty\" Field Value string Wirsindhandwerk public const string Wirsindhandwerk = \"wirsindhandwerk\" Field Value string Wix public const string Wix = \"wix\" Field Value string WizardsOfTheCoast public const string WizardsOfTheCoast = \"wizards-of-the-coast\" Field Value string Wodu public const string Wodu = \"wodu\" Field Value string WolfPackBattalion public const string WolfPackBattalion = \"wolf-pack-battalion\" Field Value string Won public const string Won = \"won\" Field Value string WonSign public const string WonSign = \"won-sign\" Field Value string Wordpress public const string Wordpress = \"wordpress\" Field Value string WordpressSimple public const string WordpressSimple = \"wordpress-simple\" Field Value string Worm public const string Worm = \"worm\" Field Value string Wpbeginner public const string Wpbeginner = \"wpbeginner\" Field Value string Wpexplorer public const string Wpexplorer = \"wpexplorer\" Field Value string Wpforms public const string Wpforms = \"wpforms\" Field Value string Wpressr public const string Wpressr = \"wpressr\" Field Value string Wrench public const string Wrench = \"wrench\" Field Value string Wsh public const string Wsh = \"wsh\" Field Value string X public const string X = \"x\" Field Value string X_Ray public const string X_Ray = \"x-ray\" Field Value string X_Twitter public const string X_Twitter = \"x-twitter\" Field Value string Xbox public const string Xbox = \"xbox\" Field Value string Xing public const string Xing = \"xing\" Field Value string XingSquare public const string XingSquare = \"xing-square\" Field Value string Xmark public const string Xmark = \"xmark\" Field Value string XmarkCircle public const string XmarkCircle = \"xmark-circle\" Field Value string XmarkSquare public const string XmarkSquare = \"xmark-square\" Field Value string XmarksLines public const string XmarksLines = \"xmarks-lines\" Field Value string Y public const string Y = \"y\" Field Value string Y_Combinator public const string Y_Combinator = \"y-combinator\" Field Value string Yahoo public const string Yahoo = \"yahoo\" Field Value string Yammer public const string Yammer = \"yammer\" Field Value string Yandex public const string Yandex = \"yandex\" Field Value string YandexInternational public const string YandexInternational = \"yandex-international\" Field Value string Yarn public const string Yarn = \"yarn\" Field Value string Yelp public const string Yelp = \"yelp\" Field Value string Yen public const string Yen = \"yen\" Field Value string YenSign public const string YenSign = \"yen-sign\" Field Value string YinYang public const string YinYang = \"yin-yang\" Field Value string Yoast public const string Yoast = \"yoast\" Field Value string Youtube public const string Youtube = \"youtube\" Field Value string YoutubeSquare public const string YoutubeSquare = \"youtube-square\" Field Value string Z public const string Z = \"z\" Field Value string Zap public const string Zap = \"zap\" Field Value string Zhihu public const string Zhihu = \"zhihu\" Field Value string"
  },
  "api/UltraForce.Library.Core.Asp.Types.Constants.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Constants.html",
    "title": "Namespace UltraForce.Library.Core.Asp.Types.Constants | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.Types.Constants Classes UFDataAttribute Constants mapping to various data attributes used by the Ultra Force DOM typescript library. UFFontAwesome A set of constants that map to font awesome icons (without 'fa-' prefix). Obtained from version 6.7.2 css files."
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFButtonColor.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFButtonColor.html",
    "title": "Enum UFButtonColor | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFButtonColor Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll Colors for the button public enum UFButtonColor Fields Auto = 0 Auto assign color based on the context. Danger = 3 Danger color Disabled = 5 Disabled color Normal = 1 Normal color Success = 2 Success color Warning = 4 Warning color"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFButtonIconPosition.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFButtonIconPosition.html",
    "title": "Enum UFButtonIconPosition | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFButtonIconPosition Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll Position of the icon in the button. public enum UFButtonIconPosition Fields Auto = 0 Position is automatically determined. Bottom = 4 Place icon at bottom of button End = 2 Place icon at horizontal end of button Start = 1 Place icon at horizontal start of button Top = 3 Place icon at top of button"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFButtonSize.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFButtonSize.html",
    "title": "Enum UFButtonSize | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFButtonSize Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll Size of button and caption public enum UFButtonSize Fields Large = 2 Larger size Normal = 0 Normal size Small = 1 Smaller size"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFButtonStyle.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFButtonStyle.html",
    "title": "Enum UFButtonStyle | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFButtonStyle Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll Styles that might set multiple properties to a predefined value. public enum UFButtonStyle Fields Add = 11 Sets the icon to a visual representing adding (plus) Back = 3 Sets the icon to a visual representing going back (left arrow) and use outline variant. Copy = 9 Sets the icon to a visual representing copying something (copy) Create = 4 Sets the icon to a visual representing creating something (new file) Custom = 0 Do not set any property. Delete = 7 Sets the icon to a visual representing deleting something (trash) Details = 6 Sets the icon to a visual representing showing details (info) Edit = 5 Sets the icon to a visual representing editing something (pencil) List = 8 Sets the icon to a visual representing a list (list) Remove = 12 Sets the icon to a visual representing adding (minus) Save = 2 Set the icon to a visual representing saving something (floppy disk) Send = 1 Sets the icon to a visual representing sending something (envelope) Users = 10 Sets the icon to a visual representing a group of users (copy)"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFButtonType.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFButtonType.html",
    "title": "Enum UFButtonType | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFButtonType Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll Button types public enum UFButtonType Fields Auto = 0 Auto assign type based on the context. Danger = 8 Button using danger styling Disabled = 10 Button using disabled styling Link = 6 Button using link styling Normal = 1 Normal button Primary = 2 Button using primary styling Secondary = 3 Button using secondary styling Success = 7 Button using success styling Tertiary = 4 Button using tertiary styling Text = 5 Button using text styling Warning = 9 Button using warning styling"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFButtonVariant.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFButtonVariant.html",
    "title": "Enum UFButtonVariant | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFButtonVariant Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll What style to draw the button in public enum UFButtonVariant Fields Auto = 0 Select the variant automatically based on the context. Link = 3 Draw the button with a link style. Normal = 1 Normal filled button Outline = 2 Reverse the colors and draw the button with an outline."
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFContentPosition.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFContentPosition.html",
    "title": "Enum UFContentPosition | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFContentPosition Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll How to position content in a container. public enum UFContentPosition Fields Center = 1 Place at center of container. End = 2 Place at end of container. Start = 0 Place at start of container. Stretch = 3 Stretch content to fill the container."
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFContentPositionEnum.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFContentPositionEnum.html",
    "title": "Enum UFContentPositionEnum | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFContentPositionEnum Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll How to position content in a container. public enum UFContentPositionEnum Fields Center = 2 Place at center of container. End = 3 Place at end of container. None = 0 Do not change the position of the child. Start = 1 Place at start of container. Stretch = 4 Stretch content to fill the container."
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFDataAttribute.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFDataAttribute.html",
    "title": "Class UFDataAttribute | UltraForce.Library.Core.Asp",
    "keywords": "Class UFDataAttribute Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll Constants mapping to various data attributes used by the Ultra Force DOM typescript library. public static class UFDataAttribute Inheritance object UFDataAttribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DisplayValue Value to assign to the display style. public const string DisplayValue = \"data-uf-display-value\" Field Value string FieldValue Value to use. public const string FieldValue = \"data-uf-field-value\" Field Value string Filter Used by UFTableTagHelper. public const string Filter = \"data-uf-filter\" Field Value string FilterTable Used by UFTableTagHelper. public const string FilterTable = \"data-uf-filter-table\" Field Value string HeaderRow Used by UFTableRowTagHelper. public const string HeaderRow = \"data-uf-header-row\" Field Value string HideIfField Hide the content of the field if some condition is met. public const string HideIfField = \"data-uf-hide-if-field\" Field Value string ImageHeight Set content to height of image. public const string ImageHeight = \"data-uf-image-height\" Field Value string ImageName Set content to name of image. public const string ImageName = \"data-uf-image-name\" Field Value string ImagePreview Image preview for file input. public const string ImagePreview = \"data-uf-image-preview\" Field Value string ImageSize Set content to size of image. public const string ImageSize = \"data-uf-image-size\" Field Value string ImageType Set content to type of image. public const string ImageType = \"data-uf-image-type\" Field Value string ImageWidth Set content to width of image. public const string ImageWidth = \"data-uf-image-width\" Field Value string NoCaching When set don't cache values with sorted tables. public const string NoCaching = \"data-uf-no-caching\" Field Value string NoFilter Used by UFCellTagHelper. public const string NoFilter = \"data-uf-no-filter\" Field Value string PageSize Used by UFTableTagHelper. public const string PageSize = \"data-uf-page-size\" Field Value string Paging Used by UFTableTagHelper. public const string Paging = \"data-uf-paging\" Field Value string SetFieldSelector Points to a clickable element public const string SetFieldSelector = \"data-uf-set-field-selector\" Field Value string SetFieldValue Value to set if clickable element is clicked upon. public const string SetFieldValue = \"data-uf-set-field-value\" Field Value string ShowIfField Show the content of the field if some condition is met. public const string ShowIfField = \"data-uf-show-if-field\" Field Value string SortAscending Used by UFTableTagHelper. public const string SortAscending = \"data-uf-sort-ascending\" Field Value string SortDescending Used by UFTableTagHelper. public const string SortDescending = \"data-uf-sort-descending\" Field Value string SortLocation Used by UFTableRowTagHelper. public const string SortLocation = \"data-uf-sort-location\" Field Value string SortType Used by UFCellTagHelper. public const string SortType = \"data-uf-sort-type\" Field Value string SortValue Used by UFCellTagHelper. public const string SortValue = \"data-uf-sort-value\" Field Value string Sorting Used by UFTableTagHelper. public const string Sorting = \"data-uf-sorting\" Field Value string StorageId Used by various classes. public const string StorageId = \"data-uf-storage-id\" Field Value string"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFFlexAlignContent.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFFlexAlignContent.html",
    "title": "Enum UFFlexAlignContent | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFFlexAlignContent Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll How to distribute the children in the opposite direction of the main axis (column or row). public enum UFFlexAlignContent Fields Center = 1 Place at center End = 2 Place at end SpaceAround = 5 Distribute space around children SpaceBetween = 4 Distribute space between children SpaceEvenly = 6 Distribute space evenly between children Start = 0 Place at start Stretch = 3 Stretch each child"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFFlexAlignItems.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFFlexAlignItems.html",
    "title": "Enum UFFlexAlignItems | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFFlexAlignItems Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll How to align the children in the opposite direction of the main axis (column or row). public enum UFFlexAlignItems Fields Base = 4 Align children at the baseline of the container. Center = 1 Align children at the center of the container. End = 2 Align children at the end of the container. Start = 0 Align children at the start of the container. Stretch = 3 Stretch children to fill the container."
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFFlexAlignItemsEnum.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFFlexAlignItemsEnum.html",
    "title": "Enum UFFlexAlignItemsEnum | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFFlexAlignItemsEnum Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll How to align the children in the opposite direction of the main axis (column or row). public enum UFFlexAlignItemsEnum Fields Base = 4 Align children at the baseline of the container. Center = 1 Align children at the center of the container. End = 2 Align children at the end of the container. Start = 0 Align children at the start of the container. Stretch = 3 Stretch children to fill the container."
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFFlexDistributeContent.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFFlexDistributeContent.html",
    "title": "Enum UFFlexDistributeContent | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFFlexDistributeContent Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll How to distribute the children in the opposite direction of the main axis (column or row). public enum UFFlexDistributeContent Fields Center = 1 Place at center End = 2 Place at end SpaceAround = 5 Distribute space around children SpaceBetween = 4 Distribute space between children SpaceEvenly = 6 Distribute space evenly between children Start = 0 Place at start Stretch = 3 Stretch each child"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFFlexDistributeContentEnum.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFFlexDistributeContentEnum.html",
    "title": "Enum UFFlexDistributeContentEnum | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFFlexDistributeContentEnum Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll How to distribute the children in the opposite direction of the main axis (column or row). public enum UFFlexDistributeContentEnum Fields Center = 1 Place at center End = 2 Place at end SizeEvenly = 7 Size each child equally. This only works in the direction of the main axis. SpaceAround = 5 Distribute space around children SpaceBetween = 4 Distribute space between children SpaceEvenly = 6 Distribute space evenly between children and the edge Start = 0 Place at start Stretch = 3 Stretch each child"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFFlexJustifyContent.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFFlexJustifyContent.html",
    "title": "Enum UFFlexJustifyContent | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFFlexJustifyContent Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll How to distribute the children in the direction of the main axis (column or row). public enum UFFlexJustifyContent Fields Center = 2 Center of the container. End = 1 End of the container. SpaceAround = 4 Distribute space around children SpaceBetween = 3 Distribute space between children SpaceEvenly = 5 Distribute space evenly between children Start = 0 Start of the container. Stretch = 6 Stretch the children to fill the container"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFFlexTypeEnum.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFFlexTypeEnum.html",
    "title": "Enum UFFlexTypeEnum | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFFlexTypeEnum Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll How to lay out the children within flex container. public enum UFFlexTypeEnum Fields Column = 1 The children are aligned in a column. Row = 0 The children are aligned in a row."
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFSize.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFSize.html",
    "title": "Enum UFSize | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFSize Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll Sizes at which elements can be styled. public enum UFSize Fields Large = 3 Larger size Normal = 0 Normal size Small = 1 Smaller size VeryLarge = 4 Very large size VerySmall = 2 Very small size"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableCellType.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableCellType.html",
    "title": "Enum UFTableCellType | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFTableCellType Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll The type of cell generated. public enum UFTableCellType Fields Auto = 0 Determine the type of cell automatically. If the cell is in the header row it will be a Header cell, else it will be a Data cell. Data = 1 Cell is a data cell Header = 2 Cell is a header cell"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableCellTypeEnum.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableCellTypeEnum.html",
    "title": "Enum UFTableCellTypeEnum | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFTableCellTypeEnum Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll The type of cell generated. public enum UFTableCellTypeEnum Fields Auto = 0 Determine the type of cell automatically. If the cell is in the header row it will be a Header cell, else it will be a Data cell. Data = 1 Cell is a data cell Header = 2 Cell is a header cell"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableRowType.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableRowType.html",
    "title": "Enum UFTableRowType | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFTableRowType Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll The row types for a row public enum UFTableRowType Fields Data = 1 Row is a data row Header = 0 Row is a header row"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableRowTypeEnum.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableRowTypeEnum.html",
    "title": "Enum UFTableRowTypeEnum | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFTableRowTypeEnum Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll The row types for a row public enum UFTableRowTypeEnum Fields Data = 1 Row is a data row Header = 0 Row is a header row"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableSortLocation.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableSortLocation.html",
    "title": "Enum UFTableSortLocation | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFTableSortLocation Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll Position of row when sorting a table. public enum UFTableSortLocation Fields Bottom = 2 Keep row at bottom while sorting Middle = 0 Place row at a sorted location somewhere in the middle Top = 1 Keep row at top while sorting"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableSortLocationEnum.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableSortLocationEnum.html",
    "title": "Enum UFTableSortLocationEnum | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFTableSortLocationEnum Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll Position of row when sorting a table. public enum UFTableSortLocationEnum Fields Bottom = 2 Keep row at bottom while sorting Middle = 0 Place row at a sorted location somewhere in the middle Top = 1 Keep row at top while sorting"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableSortType.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableSortType.html",
    "title": "Enum UFTableSortType | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFTableSortType Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll Determines how a column is sorted in a table. public enum UFTableSortType Fields Auto = 0 Determine type from For (if any), else defaults to text Date = 3 Sort values as dates None = 4 No sorting Number = 2 Sort values as number Text = 1 Sort values as text"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableSortTypeEnum.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableSortTypeEnum.html",
    "title": "Enum UFTableSortTypeEnum | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFTableSortTypeEnum Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll Determines how a column is sorted in a table. public enum UFTableSortTypeEnum Fields Auto = 0 Determine type from For (if any), else defaults to text Date = 3 Sort values as dates None = 4 No sorting Number = 2 Sort values as number Text = 1 Sort values as text"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableTextSize.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFTableTextSize.html",
    "title": "Enum UFTableTextSize | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFTableTextSize Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll The size of the text in a table cell public enum UFTableTextSize Fields Normal = 0 Normal size Small = 1 Smaller size"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.UFWrapType.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.UFWrapType.html",
    "title": "Enum UFWrapType | UltraForce.Library.Core.Asp",
    "keywords": "Enum UFWrapType Namespace UltraForce.Library.Core.Asp.Types.Enums Assembly UltraForce.Library.Core.Asp.dll How to wrap text across multiple lines public enum UFWrapType Fields All = 3 Split all words None = 0 No wrapping Normal = 1 Normal wrapping (split at word boundaries) Word = 2 Split only long words, try to preserve smaller words"
  },
  "api/UltraForce.Library.Core.Asp.Types.Enums.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Enums.html",
    "title": "Namespace UltraForce.Library.Core.Asp.Types.Enums | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.Types.Enums Enums UFContentPositionEnum How to position content in a container. UFFlexAlignItemsEnum How to align the children in the opposite direction of the main axis (column or row). UFFlexDistributeContentEnum How to distribute the children in the opposite direction of the main axis (column or row). UFFlexTypeEnum How to lay out the children within flex container. UFTableCellTypeEnum The type of cell generated. UFTableRowTypeEnum The row types for a row UFTableSortLocationEnum Position of row when sorting a table. UFTableSortTypeEnum Determines how a column is sorted in a table."
  },
  "api/UltraForce.Library.Core.Asp.Types.Exceptions.UFUseActionException.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Exceptions.UFUseActionException.html",
    "title": "Class UFUseActionException | UltraForce.Library.Core.Asp",
    "keywords": "Class UFUseActionException Namespace UltraForce.Library.Core.Asp.Types.Exceptions Assembly UltraForce.Library.Core.Asp.dll This exception can be used within controllers to stop the executing of the current action and perform some action result. For this exception to function correctly, UFUseActionExceptionFilter has to be installed as listener for controller exceptions. For example a redirect to some default page when some session data is no longer valid. public class UFUseActionException : Exception, ISerializable Inheritance object Exception UFUseActionException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UFUseActionException(IActionResult) This exception can be used within controllers to stop the executing of the current action and perform some action result. For this exception to function correctly, UFUseActionExceptionFilter has to be installed as listener for controller exceptions. For example a redirect to some default page when some session data is no longer valid. public UFUseActionException(IActionResult result) Parameters result IActionResult Properties Result Action result to perform. public IActionResult Result { get; } Property Value IActionResult"
  },
  "api/UltraForce.Library.Core.Asp.Types.Exceptions.html": {
    "href": "api/UltraForce.Library.Core.Asp.Types.Exceptions.html",
    "title": "Namespace UltraForce.Library.Core.Asp.Types.Exceptions | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.Types.Exceptions Classes UFUseActionException This exception can be used within controllers to stop the executing of the current action and perform some action result. For this exception to function correctly, UFUseActionExceptionFilter has to be installed as listener for controller exceptions. For example a redirect to some default page when some session data is no longer valid."
  },
  "api/UltraForce.Library.Core.Asp.ViewModels.UFEditViewModel-1.html": {
    "href": "api/UltraForce.Library.Core.Asp.ViewModels.UFEditViewModel-1.html",
    "title": "Class UFEditViewModel<T> | UltraForce.Library.Core.Asp",
    "keywords": "Class UFEditViewModel<T> Namespace UltraForce.Library.Core.Asp.ViewModels Assembly UltraForce.Library.Core.Asp.dll A base class for edit forms. public abstract class UFEditViewModel<T> where T : class, new() Type Parameters T Type being edited, should be a class and support a constructor without parameters. Inheritance object UFEditViewModel<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UFEditViewModel() Constructs an instance with a new value. protected UFEditViewModel() UFEditViewModel(T) Constructs an instance with an existing value. protected UFEditViewModel(T value) Parameters value T Properties NewValue True when editing a new value or false when editing an existing value public bool NewValue { get; set; } Property Value bool Value Value being edited public T Value { get; } Property Value T Methods Patch(T) Patches an existing value with data stored in Value. Subclasses must implement this method. public abstract T Patch(T value) Parameters value T Value to patch Returns T The updated value, can either be value or a new instance."
  },
  "api/UltraForce.Library.Core.Asp.ViewModels.html": {
    "href": "api/UltraForce.Library.Core.Asp.ViewModels.html",
    "title": "Namespace UltraForce.Library.Core.Asp.ViewModels | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.ViewModels Classes UFEditViewModel<T> A base class for edit forms."
  },
  "api/UltraForce.Library.Core.Asp.Web.UFWebExtensions.html": {
    "href": "api/UltraForce.Library.Core.Asp.Web.UFWebExtensions.html",
    "title": "Class UFWebExtensions | UltraForce.Library.Core.Asp",
    "keywords": "Class UFWebExtensions Namespace UltraForce.Library.Core.Asp.Web Assembly UltraForce.Library.Core.Asp.dll Defines various extensions methods public static class UFWebExtensions Inheritance object UFWebExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsInRole(ClaimsPrincipal, IEnumerable<string>) Adds an additional IsInRole method to test if user belongs to any of the specified roles. public static bool IsInRole(this ClaimsPrincipal claim, IEnumerable<string> roles) Parameters claim ClaimsPrincipal Claim to check roles IEnumerable<string> Roles to check Returns bool True if claim is at least in one role. IsInRole(ClaimsPrincipal, params string[]) Adds an additional IsInRole method to test if user belongs to any of the specified roles. public static bool IsInRole(this ClaimsPrincipal claim, params string[] roles) Parameters claim ClaimsPrincipal Claim to check roles string[] Roles to check Returns bool True if claim is at least in one role."
  },
  "api/UltraForce.Library.Core.Asp.Web.html": {
    "href": "api/UltraForce.Library.Core.Asp.Web.html",
    "title": "Namespace UltraForce.Library.Core.Asp.Web | UltraForce.Library.Core.Asp",
    "keywords": "Namespace UltraForce.Library.Core.Asp.Web Classes UFWebExtensions Defines various extensions methods"
  },
  "index.html": {
    "href": "index.html",
    "title": "| UltraForce.Library.Core.Asp",
    "keywords": "Click the API link at the top to start viewing the API documentation. This library contains various support classes for use with ASP.NET CORE."
  }
}