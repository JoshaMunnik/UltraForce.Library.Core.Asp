### YamlMime:ManagedReference
items:
- uid: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1
  commentId: T:UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1
  id: UFScopedBackgroundService`1
  parent: UltraForce.Library.Core.Asp.Services
  children:
  - UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService{`0}})
  - UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.ExecuteAsync(System.Threading.CancellationToken)
  - UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.Services
  - UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.StopAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: UFScopedBackgroundService<TAsynchronousExecutableService>
  nameWithType: UFScopedBackgroundService<TAsynchronousExecutableService>
  fullName: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService<TAsynchronousExecutableService>
  type: Class
  source:
    remote:
      path: UltraForce.Library.Core.Asp/Services/UFScopedBackgroundService.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.Core.Asp.git
    id: UFScopedBackgroundService
    path: ../UltraForce.Library.Core.Asp/Services/UFScopedBackgroundService.cs
    startLine: 48
  assemblies:
  - UltraForce.Library.Core.Asp
  namespace: UltraForce.Library.Core.Asp.Services
  summary: >-
    A background service helper class to execute a service in the background using its own

    service scope.

    <p>

    Note: do not forget to register the <code>TAsynchronousExecutableService</code> type at the service provider.

    </p>

    <p>

    The code is based on:

    https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-5.0#consuming-a-scoped-service-in-a-background-task-1

    </p>
  example: []
  syntax:
    content: 'public class UFScopedBackgroundService<TAsynchronousExecutableService> : BackgroundService, IHostedService, IDisposable where TAsynchronousExecutableService : IUFAsynchronousExecutableService'
    typeParameters:
    - id: TAsynchronousExecutableService
      description: ''
    content.vb: Public Class UFScopedBackgroundService(Of TAsynchronousExecutableService As IUFAsynchronousExecutableService) Inherits BackgroundService Implements IHostedService, IDisposable
  inheritance:
  - System.Object
  - Microsoft.Extensions.Hosting.BackgroundService
  implements:
  - Microsoft.Extensions.Hosting.IHostedService
  - System.IDisposable
  inheritedMembers:
  - Microsoft.Extensions.Hosting.BackgroundService.Dispose
  - Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  - Microsoft.Extensions.Hosting.BackgroundService.ExecuteTask
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: UFScopedBackgroundService(Of TAsynchronousExecutableService)
  fullName.vb: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService(Of TAsynchronousExecutableService)
  name.vb: UFScopedBackgroundService(Of TAsynchronousExecutableService)
- uid: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService{`0}})
  commentId: M:UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService{`0}})
  id: '#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService{`0}})'
  parent: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1
  langs:
  - csharp
  - vb
  name: UFScopedBackgroundService(IServiceProvider, ILogger<UFScopedBackgroundService<TAsynchronousExecutableService>>)
  nameWithType: UFScopedBackgroundService<TAsynchronousExecutableService>.UFScopedBackgroundService(IServiceProvider, ILogger<UFScopedBackgroundService<TAsynchronousExecutableService>>)
  fullName: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService<TAsynchronousExecutableService>.UFScopedBackgroundService(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger<UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService<TAsynchronousExecutableService>>)
  type: Constructor
  source:
    remote:
      path: UltraForce.Library.Core.Asp/Services/UFScopedBackgroundService.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.Core.Asp.git
    id: .ctor
    path: ../UltraForce.Library.Core.Asp/Services/UFScopedBackgroundService.cs
    startLine: 68
  assemblies:
  - UltraForce.Library.Core.Asp
  namespace: UltraForce.Library.Core.Asp.Services
  summary: Constructs an instance of <xref href="UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService%601" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public UFScopedBackgroundService(IServiceProvider services, ILogger<UFScopedBackgroundService<TAsynchronousExecutableService>> logger)
    parameters:
    - id: services
      type: System.IServiceProvider
      description: ''
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1}
      description: ''
    content.vb: Public Sub New(services As IServiceProvider, logger As ILogger(Of UFScopedBackgroundService(Of TAsynchronousExecutableService)))
  overload: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.#ctor*
  nameWithType.vb: UFScopedBackgroundService(Of TAsynchronousExecutableService).New(IServiceProvider, ILogger(Of UFScopedBackgroundService(Of TAsynchronousExecutableService)))
  fullName.vb: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService(Of TAsynchronousExecutableService).New(System.IServiceProvider, Microsoft.Extensions.Logging.ILogger(Of UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService(Of TAsynchronousExecutableService)))
  name.vb: New(IServiceProvider, ILogger(Of UFScopedBackgroundService(Of TAsynchronousExecutableService)))
- uid: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.Services
  commentId: P:UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.Services
  id: Services
  parent: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1
  langs:
  - csharp
  - vb
  name: Services
  nameWithType: UFScopedBackgroundService<TAsynchronousExecutableService>.Services
  fullName: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService<TAsynchronousExecutableService>.Services
  type: Property
  source:
    remote:
      path: UltraForce.Library.Core.Asp/Services/UFScopedBackgroundService.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.Core.Asp.git
    id: Services
    path: ../UltraForce.Library.Core.Asp/Services/UFScopedBackgroundService.cs
    startLine: 84
  assemblies:
  - UltraForce.Library.Core.Asp
  namespace: UltraForce.Library.Core.Asp.Services
  summary: Reference to the services provider
  example: []
  syntax:
    content: protected IServiceProvider Services { get; }
    parameters: []
    return:
      type: System.IServiceProvider
    content.vb: Protected ReadOnly Property Services As IServiceProvider
  overload: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.Services*
  nameWithType.vb: UFScopedBackgroundService(Of TAsynchronousExecutableService).Services
  fullName.vb: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService(Of TAsynchronousExecutableService).Services
- uid: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.ExecuteAsync(System.Threading.CancellationToken)
  id: ExecuteAsync(System.Threading.CancellationToken)
  parent: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1
  langs:
  - csharp
  - vb
  name: ExecuteAsync(CancellationToken)
  nameWithType: UFScopedBackgroundService<TAsynchronousExecutableService>.ExecuteAsync(CancellationToken)
  fullName: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService<TAsynchronousExecutableService>.ExecuteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: UltraForce.Library.Core.Asp/Services/UFScopedBackgroundService.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.Core.Asp.git
    id: ExecuteAsync
    path: ../UltraForce.Library.Core.Asp/Services/UFScopedBackgroundService.cs
    startLine: 91
  assemblies:
  - UltraForce.Library.Core.Asp
  namespace: UltraForce.Library.Core.Asp.Services
  summary: >-
    This method is called when the <xref href="Microsoft.Extensions.Hosting.IHostedService" data-throw-if-not-resolved="false"></xref> starts. The implementation should return a task that represents

    the lifetime of the long running operation(s) being performed.
  remarks: See <a href="https://docs.microsoft.com/dotnet/core/extensions/workers">Worker Services in .NET</a> for implementation guidelines.
  example: []
  syntax:
    content: protected override Task ExecuteAsync(CancellationToken stoppingToken)
    parameters:
    - id: stoppingToken
      type: System.Threading.CancellationToken
      description: Triggered when <xref href="Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> is called.
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the long running operations.
    content.vb: Protected Overrides Function ExecuteAsync(stoppingToken As CancellationToken) As Task
  overridden: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  overload: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.ExecuteAsync*
  nameWithType.vb: UFScopedBackgroundService(Of TAsynchronousExecutableService).ExecuteAsync(CancellationToken)
  fullName.vb: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService(Of TAsynchronousExecutableService).ExecuteAsync(System.Threading.CancellationToken)
- uid: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.StopAsync(System.Threading.CancellationToken)
  commentId: M:UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.StopAsync(System.Threading.CancellationToken)
  id: StopAsync(System.Threading.CancellationToken)
  parent: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1
  langs:
  - csharp
  - vb
  name: StopAsync(CancellationToken)
  nameWithType: UFScopedBackgroundService<TAsynchronousExecutableService>.StopAsync(CancellationToken)
  fullName: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService<TAsynchronousExecutableService>.StopAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: UltraForce.Library.Core.Asp/Services/UFScopedBackgroundService.cs
      branch: master
      repo: https://github.com/JoshaMunnik/UltraForce.Library.Core.Asp.git
    id: StopAsync
    path: ../UltraForce.Library.Core.Asp/Services/UFScopedBackgroundService.cs
    startLine: 108
  assemblies:
  - UltraForce.Library.Core.Asp
  namespace: UltraForce.Library.Core.Asp.Services
  summary: Triggered when the application host is performing a graceful shutdown.
  example: []
  syntax:
    content: public override Task StopAsync(CancellationToken stoppingToken)
    parameters:
    - id: stoppingToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> that represents the asynchronous Stop operation.
    content.vb: Public Overrides Function StopAsync(stoppingToken As CancellationToken) As Task
  overridden: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  overload: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.StopAsync*
  nameWithType.vb: UFScopedBackgroundService(Of TAsynchronousExecutableService).StopAsync(CancellationToken)
  fullName.vb: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService(Of TAsynchronousExecutableService).StopAsync(System.Threading.CancellationToken)
references:
- uid: UltraForce.Library.Core.Asp.Services
  commentId: N:UltraForce.Library.Core.Asp.Services
  href: UltraForce.html
  name: UltraForce.Library.Core.Asp.Services
  nameWithType: UltraForce.Library.Core.Asp.Services
  fullName: UltraForce.Library.Core.Asp.Services
  spec.csharp:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.Core
    name: Core
    href: UltraForce.Library.Core.html
  - name: .
  - uid: UltraForce.Library.Core.Asp
    name: Asp
    href: UltraForce.Library.Core.Asp.html
  - name: .
  - uid: UltraForce.Library.Core.Asp.Services
    name: Services
    href: UltraForce.Library.Core.Asp.Services.html
  spec.vb:
  - uid: UltraForce
    name: UltraForce
    href: UltraForce.html
  - name: .
  - uid: UltraForce.Library
    name: Library
    href: UltraForce.Library.html
  - name: .
  - uid: UltraForce.Library.Core
    name: Core
    href: UltraForce.Library.Core.html
  - name: .
  - uid: UltraForce.Library.Core.Asp
    name: Asp
    href: UltraForce.Library.Core.Asp.html
  - name: .
  - uid: UltraForce.Library.Core.Asp.Services
    name: Services
    href: UltraForce.Library.Core.Asp.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Microsoft.Extensions.Hosting.BackgroundService
  commentId: T:Microsoft.Extensions.Hosting.BackgroundService
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice
  name: BackgroundService
  nameWithType: BackgroundService
  fullName: Microsoft.Extensions.Hosting.BackgroundService
- uid: Microsoft.Extensions.Hosting.IHostedService
  commentId: T:Microsoft.Extensions.Hosting.IHostedService
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice
  name: IHostedService
  nameWithType: IHostedService
  fullName: Microsoft.Extensions.Hosting.IHostedService
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Extensions.Hosting.BackgroundService.Dispose
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.Dispose
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.dispose
  name: Dispose()
  nameWithType: BackgroundService.Dispose()
  fullName: Microsoft.Extensions.Hosting.BackgroundService.Dispose()
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.dispose
  - name: (
  - name: )
- uid: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.startasync
  name: StartAsync(CancellationToken)
  nameWithType: BackgroundService.StartAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
    name: StartAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.startasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StartAsync(System.Threading.CancellationToken)
    name: StartAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.startasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteTask
  commentId: P:Microsoft.Extensions.Hosting.BackgroundService.ExecuteTask
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executetask
  name: ExecuteTask
  nameWithType: BackgroundService.ExecuteTask
  fullName: Microsoft.Extensions.Hosting.BackgroundService.ExecuteTask
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Hosting
  commentId: N:Microsoft.Extensions.Hosting
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Hosting
    name: Hosting
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting
- uid: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1
  commentId: T:UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1
  href: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService-1.html
  name: UFScopedBackgroundService<TAsynchronousExecutableService>
  nameWithType: UFScopedBackgroundService<TAsynchronousExecutableService>
  fullName: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService<TAsynchronousExecutableService>
  nameWithType.vb: UFScopedBackgroundService(Of TAsynchronousExecutableService)
  fullName.vb: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService(Of TAsynchronousExecutableService)
  name.vb: UFScopedBackgroundService(Of TAsynchronousExecutableService)
  spec.csharp:
  - uid: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1
    name: UFScopedBackgroundService
    href: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService-1.html
  - name: <
  - name: TAsynchronousExecutableService
  - name: '>'
  spec.vb:
  - uid: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1
    name: UFScopedBackgroundService
    href: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TAsynchronousExecutableService
  - name: )
- uid: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.#ctor*
  commentId: Overload:UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.#ctor
  href: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService-1.html#UltraForce_Library_Core_Asp_Services_UFScopedBackgroundService_1__ctor_System_IServiceProvider_Microsoft_Extensions_Logging_ILogger_UltraForce_Library_Core_Asp_Services_UFScopedBackgroundService__0___
  name: UFScopedBackgroundService
  nameWithType: UFScopedBackgroundService<TAsynchronousExecutableService>.UFScopedBackgroundService
  fullName: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService<TAsynchronousExecutableService>.UFScopedBackgroundService
  nameWithType.vb: UFScopedBackgroundService(Of TAsynchronousExecutableService).New
  fullName.vb: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService(Of TAsynchronousExecutableService).New
  name.vb: New
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Microsoft.Extensions.Logging.ILogger{UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1}
  commentId: T:Microsoft.Extensions.Logging.ILogger{UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<UFScopedBackgroundService<TAsynchronousExecutableService>>
  nameWithType: ILogger<UFScopedBackgroundService<TAsynchronousExecutableService>>
  fullName: Microsoft.Extensions.Logging.ILogger<UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService<TAsynchronousExecutableService>>
  nameWithType.vb: ILogger(Of UFScopedBackgroundService(Of TAsynchronousExecutableService))
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService(Of TAsynchronousExecutableService))
  name.vb: ILogger(Of UFScopedBackgroundService(Of TAsynchronousExecutableService))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1
    name: UFScopedBackgroundService
    href: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService-1.html
  - name: <
  - name: TAsynchronousExecutableService
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1
    name: UFScopedBackgroundService
    href: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TAsynchronousExecutableService
  - name: )
  - name: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.Services*
  commentId: Overload:UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.Services
  href: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService-1.html#UltraForce_Library_Core_Asp_Services_UFScopedBackgroundService_1_Services
  name: Services
  nameWithType: UFScopedBackgroundService<TAsynchronousExecutableService>.Services
  fullName: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService<TAsynchronousExecutableService>.Services
  nameWithType.vb: UFScopedBackgroundService(Of TAsynchronousExecutableService).Services
  fullName.vb: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService(Of TAsynchronousExecutableService).Services
- uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  name: StopAsync(CancellationToken)
  nameWithType: IHostedService.StopAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.ihostedservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executeasync
  name: ExecuteAsync(CancellationToken)
  nameWithType: BackgroundService.ExecuteAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executeasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.ExecuteAsync(System.Threading.CancellationToken)
    name: ExecuteAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.executeasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.ExecuteAsync*
  commentId: Overload:UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.ExecuteAsync
  href: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService-1.html#UltraForce_Library_Core_Asp_Services_UFScopedBackgroundService_1_ExecuteAsync_System_Threading_CancellationToken_
  name: ExecuteAsync
  nameWithType: UFScopedBackgroundService<TAsynchronousExecutableService>.ExecuteAsync
  fullName: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService<TAsynchronousExecutableService>.ExecuteAsync
  nameWithType.vb: UFScopedBackgroundService(Of TAsynchronousExecutableService).ExecuteAsync
  fullName.vb: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService(Of TAsynchronousExecutableService).ExecuteAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.BackgroundService
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.stopasync
  name: StopAsync(CancellationToken)
  nameWithType: BackgroundService.StopAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.BackgroundService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.hosting.backgroundservice.stopasync
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.StopAsync*
  commentId: Overload:UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService`1.StopAsync
  href: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService-1.html#UltraForce_Library_Core_Asp_Services_UFScopedBackgroundService_1_StopAsync_System_Threading_CancellationToken_
  name: StopAsync
  nameWithType: UFScopedBackgroundService<TAsynchronousExecutableService>.StopAsync
  fullName: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService<TAsynchronousExecutableService>.StopAsync
  nameWithType.vb: UFScopedBackgroundService(Of TAsynchronousExecutableService).StopAsync
  fullName.vb: UltraForce.Library.Core.Asp.Services.UFScopedBackgroundService(Of TAsynchronousExecutableService).StopAsync
